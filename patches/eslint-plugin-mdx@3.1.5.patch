diff --git a/lib/processors/remark.d.ts b/lib/processors/remark.d.ts
index c2377b2f52e1ae5097a98520822f62f0c6d0c8fa..c595452fa2a95af47531e8d9ef9f24a430261990 100644
--- a/lib/processors/remark.d.ts
+++ b/lib/processors/remark.d.ts
@@ -1,3 +1,3 @@
 import type { Linter } from 'eslint';
-export declare const createRemarkProcessor: (processorOptions?: import("./types").ProcessorOptions) => Linter.Processor;
+export declare const createRemarkProcessor: (processorOptions?: import("./types").ProcessorOptions) => Promise<Linter.Processor>;
 export declare const remark: Linter.Processor;
diff --git a/lib/processors/remark.js b/lib/processors/remark.js
index fbd6fc16e95566024cf5ac1d50d0e188c8de6ce1..c11fb419ca27361e5fb28d6887889db18ae61352 100644
--- a/lib/processors/remark.js
+++ b/lib/processors/remark.js
@@ -5,7 +5,7 @@ const eslint_plugin_markdown_1 = require("eslint-plugin-markdown");
 const meta_1 = require("../meta");
 const helpers_1 = require("./helpers");
 const options_1 = require("./options");
-const createRemarkProcessor = (processorOptions = options_1.processorOptions) => ({
+const createRemarkProcessor = (processorOptions = options_1.processorOptions) => eslint_plugin_markdown_1.processors.markdown.load().then(() => ({
     meta: {
         name: 'mdx/remark',
         version: meta_1.meta.version,
@@ -42,7 +42,7 @@ const createRemarkProcessor = (processorOptions = options_1.processorOptions) =>
             return Object.assign(Object.assign({}, lintMessage), { ruleId: `${source}-${ruleId}`, message: reason, severity: Math.max(eslintSeverity, severity) });
         });
     },
-});
+}));
 exports.createRemarkProcessor = createRemarkProcessor;
 exports.remark = (0, exports.createRemarkProcessor)();
 //# sourceMappingURL=remark.js.map
