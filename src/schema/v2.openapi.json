{
  "openapi": "3.0.3",
  "info": {
    "title": "PortOne API",
    "version": "0.3.0-SNAPSHOT17"
  },
  "servers": [
    {
      "url": "https://public-api-service.dev.iamport.co",
      "description": "<p>개발 서버</p>\n"
    },
    {
      "url": "https://public-api-service.stage.iamport.co",
      "description": "<p>스테이징 서버</p>\n"
    },
    {
      "url": "https://api.portone.io",
      "description": "<p>운영환경 서버</p>\n"
    }
  ],
  "paths": {
    "/login/api-key": {
      "post": {
        "description": "<p>API key 를 통해 API 인증에 사용할 토큰을 가져옵니다.</p>\n",
        "operationId": "loginViaApiKey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginViaApiKeyBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 토큰을 반환합니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginViaApiKeyResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginViaApiKeyError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginViaApiKeyError"
                }
              }
            }
          }
        }
      }
    },
    "/token/refresh": {
      "post": {
        "description": "<p>리프레시 토큰을 사용해 유효기간이 연장된 새로운 토큰을 재발급합니다.</p>\n",
        "operationId": "refreshToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenError"
                }
              }
            }
          }
        }
      }
    },
    "/merchant": {
      "get": {
        "description": "<p>가맹점 정보를 조회합니다. 요청된 Authorization header 를 통해 자동으로 요청자의 가맹점을 특정합니다.</p>\n",
        "operationId": "getMerchant",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Merchant"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMerchantError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ]
      }
    },
    "/platform": {
      "get": {
        "description": "<p>가맹점의 플랫폼 정보를 조회합니다. 요청된 Authorization header 를 통해 자동으로 요청자의 가맹점을 특정합니다.</p>\n",
        "operationId": "getPlatform",
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 플랫폼 객체를 반환합니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Platform"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ]
      },
      "patch": {
        "description": "<p>가맹점의 플랫폼 관련 정보를 업데이트합니다. 요청된 Authorization header 를 통해 자동으로 요청자의 가맹점을 특정합니다.</p>\n",
        "operationId": "updatePlatform",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlatformBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePlatformResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n<li><code>PlatformInvalidSettlementFormulaError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePlatformError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePlatformError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePlatformError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ]
      }
    },
    "/platform/discount-share-policy-filter-options": {
      "get": {
        "description": "<p>할인 분담 정책 다건 조회 시 필요한 필터 옵션을 조회합니다.</p>\n",
        "operationId": "getPlatformDiscountSharePolicyFilterOptions",
        "parameters": [
          {
            "name": "includeHidden",
            "in": "query",
            "description": "<p>true 이면 숨김 처리된 할인 분담의 필터 옵션까지 조회하고, false 이면 숨김 처리되지 않은 할인 분담의 필터 옵션만 조회합니다. 아무 값도 넘기지 않을 경우 기본값은 false 입니다.</p>\n",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 조회된 할인 분담 정책 필터 옵션을 반환합니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformDiscountSharePolicyFilterOptions"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformDiscountSharePolicyFilterOptionsError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformDiscountSharePolicyFilterOptionsError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformDiscountSharePolicyFilterOptionsError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true
      }
    },
    "/platform/discount-share-policies": {
      "get": {
        "description": "<p>여러 할인 분담을 조회합니다.</p>\n",
        "operationId": "getPlatformDiscountSharePolicies",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetPlatformDiscountSharePoliciesBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 조회된 파트너 리스트와 페이지 정보가 반환됩니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformDiscountSharePoliciesResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformDiscountSharePoliciesError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformDiscountSharePoliciesError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformDiscountSharePoliciesError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true
      },
      "post": {
        "description": "<p>새로운 할인 분담을 생성합니다.</p>\n",
        "operationId": "createPlatformDiscountSharePolicy",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlatformDiscountSharePolicyBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 생성된 할인 분담 정책이 반환됩니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformDiscountSharePolicyResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformDiscountSharePolicyError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformDiscountSharePolicyError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformDiscountSharePolicyError"
                }
              }
            }
          },
          "409": {
            "description": "<ul>\n<li><code>PlatformDiscountSharePolicyAlreadyExistsError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformDiscountSharePolicyError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ]
      }
    },
    "/platform/discount-share-policies/{id}": {
      "get": {
        "description": "<p>주어진 아이디에 대응되는 할인 분담을 조회합니다.</p>\n",
        "operationId": "getPlatformDiscountSharePolicy",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "<p>조회할 할인 분담 정책 아이디</p>\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 할인 분담 정책을 반환합니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformDiscountSharePolicy"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformDiscountSharePolicyError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformDiscountSharePolicyError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformDiscountSharePolicyError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformDiscountSharePolicyNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformDiscountSharePolicyError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ]
      },
      "patch": {
        "description": "<p>주어진 아이디에 대응되는 할인 분담을 업데이트합니다.</p>\n",
        "operationId": "updatePlatformDiscountSharePolicy",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "<p>업데이트할 할인 분담 정책 아이디</p>\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlatformDiscountSharePolicyBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 업데이트된 할인 분담 정책을 반환합니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePlatformDiscountSharePolicyResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePlatformDiscountSharePolicyError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePlatformDiscountSharePolicyError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePlatformDiscountSharePolicyError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformDiscountSharePolicyNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePlatformDiscountSharePolicyError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ]
      }
    },
    "/platform/discount-share-policies/{id}/schedule": {
      "get": {
        "description": "<p>주어진 아이디에 대응되는 할인 분담의 예약 업데이트를 조회합니다.</p>\n",
        "operationId": "getPlatformDiscountSharePolicySchedule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "<p>할인 분담 정책 아이디</p>\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 예약된 할인 분담 정책을 반환합니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformDiscountSharePolicy"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformDiscountSharePolicyScheduleError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformDiscountSharePolicyScheduleError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformDiscountSharePolicyScheduleError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformDiscountSharePolicyNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformDiscountSharePolicyScheduleError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true
      },
      "put": {
        "description": "<p>주어진 아이디에 대응되는 할인 분담에 예약 업데이트를 재설정합니다.</p>\n",
        "operationId": "rescheduleDiscountSharePolicy",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "<p>할인 분담 정책 아이디</p>\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReschedulePlatformDiscountSharePolicyBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 예약된 할인 분담 정책을 반환합니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReschedulePlatformDiscountSharePolicyResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RescheduleDiscountSharePolicyError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RescheduleDiscountSharePolicyError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RescheduleDiscountSharePolicyError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformDiscountSharePolicyNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RescheduleDiscountSharePolicyError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true
      },
      "post": {
        "description": "<p>주어진 아이디에 대응되는 할인 분담에 업데이트를 예약합니다.</p>\n",
        "operationId": "scheduleDiscountSharePolicy",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "<p>할인 분담 정책 아이디</p>\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchedulePlatformDiscountSharePolicyBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 예약된 할인 분담 정책이 반환됩니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePlatformDiscountSharePolicyResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDiscountSharePolicyError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDiscountSharePolicyError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDiscountSharePolicyError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformDiscountSharePolicyNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDiscountSharePolicyError"
                }
              }
            }
          },
          "409": {
            "description": "<ul>\n<li><code>PlatformDiscountSharePolicyScheduleAlreadyExistsError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDiscountSharePolicyError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true
      },
      "delete": {
        "description": "<p>주어진 아이디에 대응되는 할인 분담의 예약 업데이트를 취소합니다.</p>\n",
        "operationId": "cancelPlatformDiscountSharePolicySchedule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "<p>할인 분담 정책 아이디</p>\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "<p>성공 응답</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelPlatformDiscountSharePolicyScheduleResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelPlatformDiscountSharePolicyScheduleError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelPlatformDiscountSharePolicyScheduleError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelPlatformDiscountSharePolicyScheduleError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformDiscountSharePolicyNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelPlatformDiscountSharePolicyScheduleError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true
      }
    },
    "/platform/additional-fee-policy-filter-options": {
      "get": {
        "description": "<p>추가 수수료 정책 다건 조회 시 필요한 필터 옵션을 조회합니다.</p>\n",
        "operationId": "getPlatformAdditionalFeePolicyFilterOptions",
        "parameters": [
          {
            "name": "includeHidden",
            "in": "query",
            "description": "<p>true 이면 숨김 처리된 추가 수수료 정책의 필터 옵션까지 조회하고, false 이면 숨김 처리되지 않은 추가 수수료 정책의 필터 옵션만 조회합니다. 아무 값도 넘기지 않을 경우 기본값은 false 입니다.</p>\n",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 조회된 추가 수수료 정책 필터 옵션을 반환합니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformAdditionalFeePolicyFilterOptions"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformAdditionalFeePolicyFilterOptionsError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformAdditionalFeePolicyFilterOptionsError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformAdditionalFeePolicyFilterOptionsError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true
      }
    },
    "/platform/additional-fee-policies": {
      "get": {
        "description": "<p>여러 추가 수수료 정책을 조회합니다.</p>\n",
        "operationId": "getPlatformAdditionalFeePolicies",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetPlatformAdditionalFeePoliciesBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 조회된 추가 수수료 정책 리스트와 페이지 정보를 반환합니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformAdditionalFeePoliciesResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformAdditionalFeePoliciesError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformAdditionalFeePoliciesError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformAdditionalFeePoliciesError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true
      },
      "post": {
        "description": "<p>새로운 추가 수수료 정책을 생성합니다.</p>\n",
        "operationId": "createPlatformAdditionalFeePolicy",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlatformAdditionalFeePolicyBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformAdditionalFeePolicyResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformAdditionalFeePolicyError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformAdditionalFeePolicyError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformAdditionalFeePolicyError"
                }
              }
            }
          },
          "409": {
            "description": "<ul>\n<li><code>PlatformAdditionalFeePolicyAlreadyExistsError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformAdditionalFeePolicyError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ]
      }
    },
    "/platform/additional-fee-policies/{id}": {
      "get": {
        "description": "<p>주어진 아이디에 대응되는 추가 수수료 정책을 조회합니다.</p>\n",
        "operationId": "getPlatformAdditionalFeePolicy",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "<p>조회할 추가 수수료 정책 아이디</p>\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 추가 수수료 정책을 반환합니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformAdditionalFeePolicy"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformAdditionalFeePolicyError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformAdditionalFeePolicyError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformAdditionalFeePolicyError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformAdditionalFeePolicyNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformAdditionalFeePolicyError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ]
      },
      "patch": {
        "description": "<p>주어진 아이디에 대응되는 추가 수수료 정책을 업데이트합니다.</p>\n",
        "operationId": "updatePlatformAdditionalFeePolicy",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "<p>업데이트할 추가 수수료 정책 아이디</p>\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlatformAdditionalFeePolicyBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 업데이트된 추가 수수료 정책이 반환됩니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePlatformAdditionalFeePolicyResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePlatformAdditionalFeePolicyError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePlatformAdditionalFeePolicyError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePlatformAdditionalFeePolicyError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformAdditionalFeePolicyNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePlatformAdditionalFeePolicyError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ]
      }
    },
    "/platform/additional-fee-policies/{id}/schedule": {
      "get": {
        "description": "<p>주어진 아이디에 대응되는 추가 수수료 정책의 예약 업데이트를 조회합니다.</p>\n",
        "operationId": "getPlatformAdditionalFeePolicySchedule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "<p>추가 수수료 정책 아이디</p>\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 예약된 추가 수수료 정책을 반환합니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformAdditionalFeePolicy"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformAdditionalFeePolicyScheduleError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformAdditionalFeePolicyScheduleError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformAdditionalFeePolicyScheduleError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformAdditionalFeePolicyNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformAdditionalFeePolicyScheduleError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true
      },
      "put": {
        "operationId": "rescheduleAdditionalFeePolicy",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "<p>추가 수수료 정책 아이디</p>\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReschedulePlatformAdditionalFeePolicyBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 예약된 추가 수수료 정책이 반환됩니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReschedulePlatformAdditionalFeePolicyResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RescheduleAdditionalFeePolicyError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RescheduleAdditionalFeePolicyError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RescheduleAdditionalFeePolicyError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformAdditionalFeePolicyNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RescheduleAdditionalFeePolicyError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true
      },
      "post": {
        "description": "<p>주어진 아이디에 대응되는 추가 수수료 정책에 업데이트를 예약합니다.</p>\n",
        "operationId": "scheduleAdditionalFeePolicy",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "<p>추가 수수료 정책 아이디</p>\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchedulePlatformAdditionalFeePolicyBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 예약된 추가 수수료 정책을 반환합니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePlatformAdditionalFeePolicyResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleAdditionalFeePolicyError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleAdditionalFeePolicyError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleAdditionalFeePolicyError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformAdditionalFeePolicyNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleAdditionalFeePolicyError"
                }
              }
            }
          },
          "409": {
            "description": "<ul>\n<li><code>PlatformAdditionalFeePolicyScheduleAlreadyExistsError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleAdditionalFeePolicyError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true
      },
      "delete": {
        "description": "<p>주어진 아이디에 대응되는 추가 수수료 정책의 예약 업데이트를 취소합니다.</p>\n",
        "operationId": "cancelPlatformAdditionalFeePolicySchedule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "<p>추가 수수료 정책 아이디</p>\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "<p>성공 응답</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelPlatformAdditionalFeePolicyScheduleResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelPlatformAdditionalFeePolicyScheduleError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelPlatformAdditionalFeePolicyScheduleError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelPlatformAdditionalFeePolicyScheduleError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformAdditionalFeePolicyNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelPlatformAdditionalFeePolicyScheduleError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true
      }
    },
    "/platform/partner-filter-options": {
      "get": {
        "description": "<p>파트너 다건 조회 시 필요한 필터 옵션을 조회합니다.</p>\n",
        "operationId": "getPlatformPartnerFilterOptions",
        "parameters": [
          {
            "name": "includeHidden",
            "in": "query",
            "description": "<p>true 이면 숨김 처리된 파트너의 필터 옵션까지 조회하고, false 이면 숨김 처리되지 않은 파트너의 필터 옵션만 조회합니다. 아무 값도 넘기지 않을 경우 기본값은 false 입니다.</p>\n",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 조회된 파트너 필터 옵션을 반환합니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformPartnerFilterOptions"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPartnerFilterOptionsError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPartnerFilterOptionsError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPartnerFilterOptionsError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true
      }
    },
    "/platform/partners": {
      "get": {
        "description": "<p>여러 파트너를 조회합니다.</p>\n",
        "operationId": "getPlatformPartners",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetPlatformPartnersBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 조회된 파트너 리스트와 페이지 정보가 반환됩니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPartnersResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPartnersError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPartnersError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPartnersError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true
      },
      "post": {
        "description": "<p>새로운 파트너를 생성합니다.</p>\n",
        "operationId": "createPlatformPartner",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlatformPartnerBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 생성된 파트너 객체가 반환됩니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformPartnerResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformPartnerError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformPartnerError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformPartnerError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformContractNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformPartnerError"
                }
              }
            }
          },
          "409": {
            "description": "<ul>\n<li><code>PlatformPartnerIdAlreadyExistsError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformPartnerError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ]
      }
    },
    "/platform/partner-dashboard": {
      "get": {
        "description": "<p>파트너 현황을 조회합니다.</p>\n",
        "operationId": "getPlatformPartnerDashboard",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetPlatformPartnerDashboardBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformPartnerDashboard"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPartnerDashboardError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPartnerDashboardError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPartnerDashboardError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true,
        "x-portone-hidden": true
      }
    },
    "/platform/partners/{id}": {
      "get": {
        "description": "<p>파트너 객체를 조회합니다.</p>\n",
        "operationId": "getPlatformPartner",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "<p>조회하고 싶은 파트너 아이디</p>\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 파트너 객체가 반환됩니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformPartner"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPartnerError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPartnerError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPartnerError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformPartnerNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPartnerError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ]
      },
      "patch": {
        "description": "<p>주어진 아이디에 대응되는 파트너 정보를 업데이트합니다.</p>\n",
        "operationId": "updatePlatformPartner",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "<p>업데이트할 파트너 아이디</p>\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlatformPartnerBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 업데이트된 파트너 객체가 반환됩니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePlatformPartnerResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePlatformPartnerError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePlatformPartnerError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePlatformPartnerError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformPartnerNotFoundError</code></li>\n<li><code>PlatformContractNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePlatformPartnerError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ]
      }
    },
    "/platform/partners/batch": {
      "post": {
        "description": "<p>새로운 파트너를 다건 생성합니다.</p>\n",
        "operationId": "createPlatformPartners",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlatformPartnersBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformPartnersResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n<li><code>PlatformPartnerIdsDuplicatedError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformPartnersError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformPartnersError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformPartnersError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformContractsNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformPartnersError"
                }
              }
            }
          },
          "409": {
            "description": "<ul>\n<li><code>PlatformPartnerIdsAlreadyExistError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformPartnersError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ]
      }
    },
    "/platform/partners/{id}/approve": {
      "patch": {
        "description": "<p>주어진 아이디에 대응되는 파트너 상태를 승인 완료로 변경합니다.</p>\n",
        "operationId": "approvePlatformPartner",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "<p>파트너 아이디</p>\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApprovePlatformPartnerBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 업데이트된 파트너 객체를 반환합니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApprovePlatformPartnerResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApprovePlatformPartnerError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApprovePlatformPartnerError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApprovePlatformPartnerError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformPartnerNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApprovePlatformPartnerError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true,
        "x-portone-hidden": true
      }
    },
    "/platform/partners/{id}/reject": {
      "patch": {
        "description": "<p>주어진 아이디에 대응되는 파트너 상태를 승인 거절로 변경합니다.</p>\n",
        "operationId": "rejectPlatformPartner",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "<p>파트너 아이디</p>\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RejectPlatformPartnerBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 업데이트된 파트너 객체를 반환합니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RejectPlatformPartnerResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RejectPlatformPartnerError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RejectPlatformPartnerError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RejectPlatformPartnerError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformPartnerNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RejectPlatformPartnerError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true,
        "x-portone-hidden": true
      }
    },
    "/platform/partners/{id}/schedule": {
      "get": {
        "description": "<p>주어진 아이디에 대응되는 파트너의 예약 업데이트를 조회합니다.</p>\n",
        "operationId": "getPlatformPartnerSchedule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "<p>파트너 아이디</p>\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 예약된 파트너 객체를 반환합니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformPartner"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPartnerScheduleError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPartnerScheduleError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPartnerScheduleError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformPartnerNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPartnerScheduleError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true
      },
      "put": {
        "description": "<p>주어진 아이디에 대응되는 파트너에 예약 업데이트를 재설정합니다.</p>\n",
        "operationId": "reschedulePartner",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "<p>파트너 아이디</p>\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReschedulePlatformPartnerBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 예약된 파트너 객체를 반환합니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReschedulePlatformPartnerResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReschedulePartnerError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReschedulePartnerError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReschedulePartnerError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformPartnerNotFoundError</code></li>\n<li><code>PlatformContractNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReschedulePartnerError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true
      },
      "post": {
        "description": "<p>주어진 아이디에 대응되는 파트너에 업데이트를 예약합니다.</p>\n",
        "operationId": "schedulePartner",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "<p>파트너 아이디</p>\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchedulePlatformPartnerBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 예약된 파트너 객체가 반환됩니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePlatformPartnerResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePartnerError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePartnerError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePartnerError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformPartnerNotFoundError</code></li>\n<li><code>PlatformContractNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePartnerError"
                }
              }
            }
          },
          "409": {
            "description": "<ul>\n<li><code>PlatformPartnerScheduleAlreadyExistsError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePartnerError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true
      },
      "delete": {
        "description": "<p>주어진 아이디에 대응되는 파트너의 예약 업데이트를 취소합니다.</p>\n",
        "operationId": "cancelPlatformPartnerSchedule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "<p>파트너 아이디</p>\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "<p>성공 응답</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelPlatformPartnerScheduleResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelPlatformPartnerScheduleError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelPlatformPartnerScheduleError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelPlatformPartnerScheduleError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformPartnerNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelPlatformPartnerScheduleError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true
      }
    },
    "/platform/partners/schedule": {
      "post": {
        "operationId": "schedulePlatformPartners",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchedulePlatformPartnersBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePlatformPartnersResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n<li><code>PlatformPartnerSchedulesAlreadyExistError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePlatformPartnersError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePlatformPartnersError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePlatformPartnersError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformContractNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePlatformPartnersError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true
      }
    },
    "/platform/contract-filter-options": {
      "get": {
        "description": "<p>계약 다건 조회 시 필요한 필터 옵션을 조회합니다.</p>\n",
        "operationId": "getPlatformContractFilterOptions",
        "parameters": [
          {
            "name": "includeHidden",
            "in": "query",
            "description": "<p>true 이면 숨김 처리된 계약의 필터 옵션까지 조회하고, false 이면 숨김 처리되지 않은 계약의 필터 옵션만 조회합니다. 아무 값도 넘기지 않을 경우 기본값은 false 입니다.</p>\n",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 조회된 계약 필터 옵션을 반환합니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformContractFilterOptions"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformContractFilterOptionsError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformContractFilterOptionsError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformContractFilterOptionsError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true
      }
    },
    "/platform/contracts": {
      "get": {
        "description": "<p>여러 계약을 조회합니다.</p>\n",
        "operationId": "getPlatformContracts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetPlatformContractsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 조회된 계약 리스트와 페이지 정보를 반환합니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformContractsResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformContractsError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformContractsError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformContractsError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true
      },
      "post": {
        "description": "<p>새로운 계약을 생성합니다.</p>\n",
        "operationId": "createPlatformContract",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlatformContractBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 생성된 계약 객체가 반환됩니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformContractResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformContractError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformContractError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformContractError"
                }
              }
            }
          },
          "409": {
            "description": "<ul>\n<li><code>PlatformContractAlreadyExistsError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformContractError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ]
      }
    },
    "/platform/contracts/{id}": {
      "get": {
        "operationId": "getPlatformContract",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "<p>조회할 계약 아이디</p>\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 계약 객체를 반환합니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformContract"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformContractError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformContractError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformContractError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformContractNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformContractError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ]
      },
      "patch": {
        "description": "<p>주어진 아이디에 대응되는 계약을 업데이트합니다.</p>\n",
        "operationId": "updatePlatformContract",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "<p>업데이트할 계약 아이디</p>\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlatformContractBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 업데이트된 계약 객체가 반환됩니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePlatformContractResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePlatformContractError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePlatformContractError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePlatformContractError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformContractNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePlatformContractError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ]
      }
    },
    "/platform/contracts/{id}/schedule": {
      "get": {
        "description": "<p>주어진 아이디에 대응되는 계약의 예약 업데이트를 조회합니다.</p>\n",
        "operationId": "getPlatformContractSchedule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "<p>계약 아이디</p>\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 예약된 계약 객체를 반환합니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformContract"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformContractScheduleError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformContractScheduleError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformContractScheduleError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformContractNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformContractScheduleError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true
      },
      "put": {
        "description": "<p>주어진 아이디에 대응되는 계약에 예약 업데이트를 재설정합니다.</p>\n",
        "operationId": "rescheduleContract",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "<p>계약 아이디</p>\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReschedulePlatformContractBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 예약된 계약 객체를 반환합니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReschedulePlatformContractResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RescheduleContractError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RescheduleContractError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RescheduleContractError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformContractNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RescheduleContractError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true
      },
      "post": {
        "description": "<p>주어진 아이디에 대응되는 계약에 업데이트를 예약합니다.</p>\n",
        "operationId": "scheduleContract",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "<p>계약 아이디</p>\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchedulePlatformContractBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 예약된 계약 객체를 반환합니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePlatformContractResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleContractError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleContractError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleContractError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformContractNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleContractError"
                }
              }
            }
          },
          "409": {
            "description": "<ul>\n<li><code>PlatformContractScheduleAlreadyExistsError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleContractError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true
      },
      "delete": {
        "description": "<p>주어진 아이디에 대응되는 계약의 예약 업데이트를 취소합니다.</p>\n",
        "operationId": "cancelPlatformContractSchedule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "<p>계약 아이디</p>\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "<p>성공 응답</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelPlatformContractScheduleResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelPlatformContractScheduleError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelPlatformContractScheduleError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelPlatformContractScheduleError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformContractNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelPlatformContractScheduleError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true
      }
    },
    "/platform/transfers/{id}": {
      "get": {
        "operationId": "getPlatformTransfer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformTransfer"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformTransferError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformTransferError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformTransferError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformTransferNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformTransferError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ]
      }
    },
    "/platform/transfer-summaries": {
      "get": {
        "operationId": "getPlatformTransferSummaries",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetPlatformTransferSummariesBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformTransferSummariesResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformTransferSummariesError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformTransferSummariesError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformTransferSummariesError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true,
        "x-portone-hidden": true
      }
    },
    "/platform/transfers/order": {
      "post": {
        "operationId": "createPlatformOrderTransfer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlatformOrderTransferBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOrderTransferResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>PlatformContractPlatformFixedAmountFeeCurrencyAndSettlementCurrencyMismatchedError</code></li>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n<li><code>PlatformDiscountExceededOrderAmountError</code></li>\n<li><code>PlatformProductIdDuplicatedError</code></li>\n<li><code>PlatformSettlementPaymentAmountExceededPortOnePaymentError</code></li>\n<li><code>PlatformAdditionalFixedAmountFeeCurrencyAndSettlementCurrencyMismatchedError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformOrderTransferError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformOrderTransferError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformOrderTransferError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformPartnerNotFoundError</code></li>\n<li><code>PlatformContractNotFoundError</code></li>\n<li><code>PlatformAdditionalFeePoliciesNotFoundError</code></li>\n<li><code>PlatformDiscountSharePoliciesNotFoundError</code></li>\n<li><code>PlatformPaymentNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformOrderTransferError"
                }
              }
            }
          },
          "409": {
            "description": "<ul>\n<li><code>PlatformTransferAlreadyExistsError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformOrderTransferError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ]
      }
    },
    "/platform/transfers/order-cancel": {
      "post": {
        "operationId": "createPlatformOrderCancelTransfer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlatformOrderCancelTransferBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOrderCancelTransferResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>PlatformCancellableAmountExceededError</code></li>\n<li><code>PlatformDiscountCancelExceededOrderCancelAmountError</code></li>\n<li><code>PlatformCancellationAndPaymentTypeMismatchedError</code></li>\n<li><code>PlatformSettlementCancelAmountExceededPortOneCancelError</code></li>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n<li><code>PlatformCancellableDiscountAmountExceededError</code></li>\n<li><code>PlatformProductIdDuplicatedError</code></li>\n<li><code>PlatformOrderDetailMismatchedError</code></li>\n<li><code>PlatformDiscountSharePolicyIdDuplicatedError</code></li>\n<li><code>PlatformCancellableProductQuantityExceededError</code></li>\n<li><code>PlatformOrderTransferAlreadyCancelledError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformOrderCancelTransferError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformOrderCancelTransferError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformOrderCancelTransferError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformTransferNotFoundError</code></li>\n<li><code>PlatformCancellationNotFoundError</code></li>\n<li><code>PlatformProductIdNotFoundError</code></li>\n<li><code>PlatformPaymentNotFoundError</code></li>\n<li><code>PlatformTransferDiscountSharePolicyNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformOrderCancelTransferError"
                }
              }
            }
          },
          "409": {
            "description": "<ul>\n<li><code>PlatformTransferAlreadyExistsError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformOrderCancelTransferError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ]
      }
    },
    "/platform/transfers/manual": {
      "post": {
        "operationId": "createPlatformManualTransfer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlatformManualTransferBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateManualTransferResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n<li><code>PlatformUnavailableSettlementDateError</code>: 사용할 수 없는 정산일이 요청된 경우. 요청한 정산일에 이체되지 않은 주문 정산 건이 없을 때 발생합니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformManualTransferError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformManualTransferError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformManualTransferError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformPartnerNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformManualTransferError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ]
      }
    },
    "/platform/transfer-dashboard": {
      "get": {
        "operationId": "getPlatformTransferDashboard",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetPlatformTransferDashboardBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformTransferDashboard"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformTransferDashboardError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformTransferDashboardError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformTransferDashboardError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true,
        "x-portone-hidden": true
      }
    },
    "/platform/transfer-filter-options": {
      "get": {
        "operationId": "getPlatformTransferFilterOptions",
        "parameters": [
          {
            "name": "includeHidden",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformTransferFilterOptions"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformTransferFilterOptionsError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformTransferFilterOptionsError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformTransferFilterOptionsError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true,
        "x-portone-hidden": true
      }
    },
    "/platform/payable-settlement-dates": {
      "get": {
        "operationId": "getPlatformPayableSettlementDates",
        "parameters": [
          {
            "name": "isForTest",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPayableSettlementDatesResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPayableSettlementDatesError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPayableSettlementDatesError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPayableSettlementDatesError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true,
        "x-portone-hidden": true
      }
    },
    "/platform/partner-settlements": {
      "get": {
        "operationId": "getPlatformPartnerSettlements",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetPlatformPartnerSettlementsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPartnerSettlementsResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPartnerSettlementsError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPartnerSettlementsError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPartnerSettlementsError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true,
        "x-portone-hidden": true
      }
    },
    "/platform/partner-settlement-filter-options": {
      "get": {
        "operationId": "getPlatformPartnerSettlementFilterOptions",
        "parameters": [
          {
            "name": "includeHidden",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isForTest",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformPartnerSettlementFilterOptions"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPartnerSettlementFilterOptionsError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPartnerSettlementFilterOptionsError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPartnerSettlementFilterOptionsError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true,
        "x-portone-hidden": true
      }
    },
    "/platform/payouts/{id}": {
      "get": {
        "operationId": "getPlatformPayout",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "<p>이체 아이디</p>\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformPayout"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPayoutError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPayoutError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPayoutError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformPayoutNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPayoutError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true,
        "x-portone-hidden": true
      },
      "delete": {
        "operationId": "deletePlatformPayout",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "<p>대량이체 아이디</p>\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletePlatformPayoutResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletePlatformPayoutError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletePlatformPayoutError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n<li><code>ForbiddenError</code>: 요청이 거절된 경우</li>\n<li><code>PlatformPayoutCreatorMismatchedError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletePlatformPayoutError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformPayoutNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletePlatformPayoutError"
                }
              }
            }
          },
          "409": {
            "description": "<ul>\n<li><code>PlatformPayoutAlreadyCompletedError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletePlatformPayoutError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true,
        "x-portone-hidden": true
      }
    },
    "/platform/payouts": {
      "get": {
        "operationId": "getPlatformPayouts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetPlatformPayoutsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPayoutsResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPayoutsError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPayoutsError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPayoutsError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true,
        "x-portone-hidden": true
      },
      "post": {
        "operationId": "createPlatformPayout",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlatformPayoutBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformPayoutResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformPayoutError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformPayoutError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n<li><code>ForbiddenError</code>: 요청이 거절된 경우</li>\n<li><code>PlatformOngoingPayoutExistsError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlatformPayoutError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true,
        "x-portone-hidden": true
      }
    },
    "/platform/payouts/{id}/complete": {
      "post": {
        "operationId": "completePlatformPayout",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "<p>대량이체 아이디</p>\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompletePlatformPayoutResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompletePlatformPayoutError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompletePlatformPayoutError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n<li><code>ForbiddenError</code>: 요청이 거절된 경우</li>\n<li><code>PlatformPayoutCreatorMismatchedError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompletePlatformPayoutError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformPayoutNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompletePlatformPayoutError"
                }
              }
            }
          },
          "409": {
            "description": "<ul>\n<li><code>PlatformPayoutAlreadyCompletedError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompletePlatformPayoutError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true,
        "x-portone-hidden": true
      }
    },
    "/platform/payouts/{payoutId}/partner-settlements": {
      "get": {
        "operationId": "getPlatformPayoutPartnerSettlements",
        "parameters": [
          {
            "name": "payoutId",
            "in": "path",
            "description": "<p>대량이체 아이디</p>\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetPlatformPayoutPartnerSettlementsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayoutPartnerSettlementsResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPayoutPartnerSettlementsError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPayoutPartnerSettlementsError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPayoutPartnerSettlementsError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformPayoutNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPayoutPartnerSettlementsError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true,
        "x-portone-hidden": true
      },
      "patch": {
        "operationId": "updatePayoutAllPartnerSettlements",
        "parameters": [
          {
            "name": "payoutId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePayoutAllPartnerSettlementsBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePayoutAllPartnerSettlementsResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePayoutAllPartnerSettlementsError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePayoutAllPartnerSettlementsError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n<li><code>ForbiddenError</code>: 요청이 거절된 경우</li>\n<li><code>PlatformPayoutCreatorMismatchedError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePayoutAllPartnerSettlementsError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformPayoutNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePayoutAllPartnerSettlementsError"
                }
              }
            }
          },
          "409": {
            "description": "<ul>\n<li><code>PlatformPayoutAlreadyCompletedError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePayoutAllPartnerSettlementsError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true,
        "x-portone-hidden": true
      }
    },
    "/platform/payout-partner-settlements/{id}": {
      "patch": {
        "operationId": "updatePlatformPayoutPartnerSettlement",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlatformPayoutPartnerSettlementBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePlatformPayoutPartnerSettlementResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n<li><code>PlatformPayoutPartnerSettlementAlreadyPaidOutError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePlatformPayoutPartnerSettlementError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePlatformPayoutPartnerSettlementError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n<li><code>ForbiddenError</code>: 요청이 거절된 경우</li>\n<li><code>PlatformPayoutCreatorMismatchedError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePlatformPayoutPartnerSettlementError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformPayoutNotFoundError</code></li>\n<li><code>PlatformPayoutPartnerSettlementNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePlatformPayoutPartnerSettlementError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true,
        "x-portone-hidden": true
      }
    },
    "/platform/payouts/{id}/sheets": {
      "get": {
        "operationId": "getPlatformPayoutSheets",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "<p>대량이체 아이디</p>\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPayoutSheetsResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPayoutSheetsError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPayoutSheetsError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPayoutSheetsError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformPayoutNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlatformPayoutSheetsError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true,
        "x-portone-hidden": true
      }
    },
    "/platform/payouts/{id}/sheet-file": {
      "get": {
        "operationId": "downloadPlatformPayoutSheet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "<p>대량이체 아이디</p>\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contractId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "settlementCurrency",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Currency"
            }
          },
          {
            "name": "payoutCurrency",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Currency"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "Content-Disposition": {
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadPlatformPayoutSheetError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadPlatformPayoutSheetError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>PlatformNotEnabledError</code>: 플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadPlatformPayoutSheetError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PlatformPayoutNotFoundError</code></li>\n<li><code>PlatformPayoutSheetNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadPlatformPayoutSheetError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true,
        "x-portone-hidden": true
      }
    },
    "/identity-verifications/{id}": {
      "get": {
        "description": "<p>주어진 아이디에 대응되는 본인인증 내역을 조회합니다.</p>\n",
        "operationId": "getIdentityVerification",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "<p>조회할 본인인증 아이디</p>\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "<p>상점 아이디</p>\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 본인 인증 객체를 반환합니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityVerification"
                }
              }
            }
          },
          "400": {
            "description": "<p>올바른 상점 아이디를 입력해주세요.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetIdentityVerificationError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetIdentityVerificationError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>ForbiddenError</code>: 요청이 거절된 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetIdentityVerificationError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>IdentityVerificationNotFoundError</code>: 요청된 본인인증 건이 존재하지 않는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetIdentityVerificationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ]
      }
    },
    "/identity-verifications/send": {
      "post": {
        "description": "<p>SMS 또는 APP 방식을 이용하여 본인인증 요청을 전송합니다.</p>\n",
        "operationId": "sendIdentityVerification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendIdentityVerificationBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendIdentityVerificationResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendIdentityVerificationError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendIdentityVerificationError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>ForbiddenError</code>: 요청이 거절된 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendIdentityVerificationError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>ChannelNotFoundError</code>: 요청된 채널이 존재하지 않는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendIdentityVerificationError"
                }
              }
            }
          },
          "409": {
            "description": "<ul>\n<li><code>IdentityVerificationAlreadyVerifiedError</code>: 본인인증 건이 이미 인증 완료된 상태인 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendIdentityVerificationError"
                }
              }
            }
          },
          "500": {
            "description": "<ul>\n<li><code>PgProviderError</code>: PG사에서 오류가 발생한 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendIdentityVerificationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ]
      }
    },
    "/identity-verifications/confirm": {
      "post": {
        "description": "<p>요청된 본인인증에 대한 확인을 진행합니다.</p>\n",
        "operationId": "confirmIdentityVerification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmIdentityVerificationBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfirmIdentityVerificationResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfirmIdentityVerificationError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfirmIdentityVerificationError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>ForbiddenError</code>: 요청이 거절된 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfirmIdentityVerificationError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>IdentityVerificationNotFoundError</code>: 요청된 본인인증 건이 존재하지 않는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfirmIdentityVerificationError"
                }
              }
            }
          },
          "409": {
            "description": "<ul>\n<li><code>IdentityVerificationAlreadyVerifiedError</code>: 본인인증 건이 이미 인증 완료된 상태인 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfirmIdentityVerificationError"
                }
              }
            }
          },
          "500": {
            "description": "<ul>\n<li><code>PgProviderError</code>: PG사에서 오류가 발생한 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfirmIdentityVerificationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ]
      }
    },
    "/identity-verifications/resend": {
      "post": {
        "description": "<p>본인인증 요청을 재전송합니다.</p>\n",
        "operationId": "resendIdentityVerification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendIdentityVerificationBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResendIdentityVerificationResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResendIdentityVerificationError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResendIdentityVerificationError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>ForbiddenError</code>: 요청이 거절된 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResendIdentityVerificationError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>IdentityVerificationNotFoundError</code>: 요청된 본인인증 건이 존재하지 않는 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResendIdentityVerificationError"
                }
              }
            }
          },
          "409": {
            "description": "<ul>\n<li><code>IdentityVerificationAlreadyVerifiedError</code>: 본인인증 건이 이미 인증 완료된 상태인 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResendIdentityVerificationError"
                }
              }
            }
          },
          "500": {
            "description": "<ul>\n<li><code>PgProviderError</code>: PG사에서 오류가 발생한 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResendIdentityVerificationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ]
      }
    },
    "/payments/pre-register": {
      "post": {
        "description": "<p>결제 정보를 사전 등록합니다.</p>\n",
        "operationId": "preRegisterPayment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreRegisterPaymentBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreRegisterPaymentResponse"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreRegisterPaymentError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreRegisterPaymentError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>ForbiddenError</code>: 요청이 거절된 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreRegisterPaymentError"
                }
              }
            }
          },
          "404": {
            "description": "<ul>\n<li><code>PaymentPreRegistrationNotFoundError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreRegisterPaymentError"
                }
              }
            }
          },
          "409": {
            "description": "<ul>\n<li><code>PaymentPreRegistrationAlreadyExistsError</code></li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreRegisterPaymentError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-hidden": true
      }
    },
    "/analytics/charts/payment": {
      "get": {
        "description": "<p>가맹점의 결제 현황을 조회합니다.</p>\n",
        "operationId": "getAnalyticsPaymentChart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetAnalyticsPaymentChartBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 결제 현황을 반환합니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsPaymentChart"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAnalyticsPaymentChartError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAnalyticsPaymentChartError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>ForbiddenError</code>: 요청이 거절된 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAnalyticsPaymentChartError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true
      }
    },
    "/analytics/charts/average-amount": {
      "get": {
        "description": "<p>가맹점의 평균 거래액 현황을 조회합니다.</p>\n",
        "operationId": "getAverageAmountChart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetAnalyticsAverageAmountChartBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 평균 거래액 현황을 반환합니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsAverageAmountChart"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAverageAmountChartError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAverageAmountChartError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>ForbiddenError</code>: 요청이 거절된 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAverageAmountChartError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true
      }
    },
    "/analytics/chart/payment-method": {
      "get": {
        "description": "<p>가맹점의 결제수단 현황을 조회합니다.</p>\n",
        "operationId": "getPaymentMethodChart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetAnalyticsPaymentMethodChartBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 결제수단 현황을 반환합니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsPaymentMethodChart"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPaymentMethodChartError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPaymentMethodChartError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>ForbiddenError</code>: 요청이 거절된 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPaymentMethodChartError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true
      }
    },
    "/analytics/chart/payment-method-trend": {
      "get": {
        "description": "<p>가맹점의 결제수단 트렌드를 조회합니다.</p>\n",
        "operationId": "getPaymentMethodTrendChart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetAnalyticsPaymentMethodTrendChartBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 결제수단 트렌드를 반환합니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsPaymentMethodTrendChart"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPaymentMethodTrendChartError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPaymentMethodTrendChartError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>ForbiddenError</code>: 요청이 거절된 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPaymentMethodTrendChartError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true
      }
    },
    "/analytics/charts/card": {
      "get": {
        "description": "<p>가맹점의 카드결제 현황을 조회합니다.</p>\n",
        "operationId": "getAnalyticsCardChart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetAnalyticsCardChartBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 카드결제 현황을 반환합니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsCardChart"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAnalyticsCardChartError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAnalyticsCardChartError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>ForbiddenError</code>: 요청이 거절된 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAnalyticsCardChartError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true
      }
    },
    "/analytics/charts/card-company": {
      "get": {
        "description": "<p>가맹점의 카드사별 결제 현황을 조회합니다.</p>\n",
        "operationId": "getAnalyticsCardCompanyChart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetAnalyticsCardCompanyChartBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 카드사별 결제 현황을 반환합니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsCardCompanyChart"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAnalyticsCardCompanyChartError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAnalyticsCardCompanyChartError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>ForbiddenError</code>: 요청이 거절된 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAnalyticsCardCompanyChartError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true
      }
    },
    "/analytics/charts/easy-pay": {
      "get": {
        "description": "<p>가맹점의 간편결제 현황을 조회합니다.</p>\n",
        "operationId": "getAnalyticsEasyPayChart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetAnalyticsEasyPayChartBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 간편결제 현황을 반환합니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsEasyPayChart"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAnalyticsEasyPayChartError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAnalyticsEasyPayChartError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>ForbiddenError</code>: 요청이 거절된 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAnalyticsEasyPayChartError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true
      }
    },
    "/analytics/charts/easy-pay-provider": {
      "get": {
        "description": "<p>가맹점의 간편결제사별 결제 현황을 조회합니다.</p>\n",
        "operationId": "getAnalyticsEasyPayProviderChart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetAnalyticsEasyPayProviderChartBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 간편결제사별 결제 현황을 반환합니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsEasyPayProviderChart"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAnalyticsEasyPayProviderChartError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAnalyticsEasyPayProviderChartError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>ForbiddenError</code>: 요청이 거절된 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAnalyticsEasyPayProviderChartError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true
      }
    },
    "/analytics/chart/pg-provider": {
      "get": {
        "description": "<p>가맹점의 결제대행사 현황을 조회합니다.</p>\n",
        "operationId": "getPgProviderChart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetAnalyticsPgProviderChartBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 결제대행사 현황을 반환합니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsPgProviderChart"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPgProviderChartError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPgProviderChartError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>ForbiddenError</code>: 요청이 거절된 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPgProviderChartError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true
      }
    },
    "/analytics/chart/pg-provider-trend": {
      "get": {
        "description": "<p>가맹점의 결제대행사별 거래 추이를 조회합니다.</p>\n",
        "operationId": "getPgProviderTrendChart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetAnalyticsPgProviderTrendChartBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "<p>성공 응답으로 결제대행사별 거래 추이를 반환합니다.</p>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsPgProviderTrendChart"
                }
              }
            }
          },
          "400": {
            "description": "<ul>\n<li><code>InvalidRequestError</code>: 요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPgProviderTrendChartError"
                }
              }
            }
          },
          "401": {
            "description": "<ul>\n<li><code>UnauthorizedError</code>: 인증 정보가 올바르지 않은 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPgProviderTrendChartError"
                }
              }
            }
          },
          "403": {
            "description": "<ul>\n<li><code>ForbiddenError</code>: 요청이 거절된 경우</li>\n</ul>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPgProviderTrendChartError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerJwt": []
          }
        ],
        "x-portone-unstable": true
      }
    }
  },
  "components": {
    "schemas": {
      "Analytics": {
        "type": "object"
      },
      "AnalyticsAverageAmountChart": {
        "required": [
          "stats"
        ],
        "type": "object",
        "properties": {
          "stats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalyticsAverageAmountChartStat"
            }
          }
        },
        "description": "<p>가맹점의 평균 거래액 현황 조회 응답.</p>\n"
      },
      "AnalyticsAverageAmountChartStat": {
        "required": [
          "timestamp",
          "paymentAverageAmount",
          "customerAverageAmount"
        ],
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "<p>시점</p>\n"
          },
          "paymentAverageAmount": {
            "type": "integer",
            "format": "int64",
            "description": "<p>건별 평균 거래액</p>\n"
          },
          "customerAverageAmount": {
            "type": "integer",
            "format": "int64",
            "description": "<p>고객 당 평균 거래액</p>\n"
          }
        },
        "description": "<p>평균 거래액 현황에서 특정 시점의 건별 평균 거래액, 고객 당 평균 거래액을 나타냅니다.</p>\n"
      },
      "AnalyticsCardChart": {
        "required": [
          "stats"
        ],
        "type": "object",
        "properties": {
          "stats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalyticsCardChartStat"
            }
          }
        },
        "description": "<p>가맹점의 카드결제 현황을 조회합니다.</p>\n"
      },
      "AnalyticsCardChartStat": {
        "required": [
          "timestamp",
          "amount",
          "count"
        ],
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "<p>시점</p>\n"
          },
          "amount": {
            "type": "integer",
            "format": "int64",
            "description": "<p>거래액</p>\n"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "<p>거래 건수</p>\n"
          }
        },
        "description": "<p>카드결제 현황에서 특정 시점의 거래 건 수와 금액을 나타냅니다.</p>\n"
      },
      "AnalyticsCardCompanyChart": {
        "required": [
          "stats",
          "summary"
        ],
        "type": "object",
        "properties": {
          "stats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalyticsCardCompanyChartStat"
            }
          },
          "summary": {
            "$ref": "#/components/schemas/AnalyticsCardCompanyChartSummary"
          }
        },
        "description": "<p>가맹점의 카드사별 결제 현황 조회 응답</p>\n"
      },
      "AnalyticsCardCompanyChartStat": {
        "required": [
          "timestamp",
          "amount",
          "count"
        ],
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "<p>시점</p>\n"
          },
          "cardCompany": {
            "$ref": "#/components/schemas/CardCompany",
            "description": "<p>카드사</p>\n"
          },
          "amount": {
            "type": "integer",
            "format": "int64",
            "description": "<p>결제금액</p>\n"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "<p>결제 건수</p>\n"
          }
        },
        "description": "<p>카드사별 결제 현황에서 카드사별 결제금액, 결제 건수를 나타냅니다.</p>\n"
      },
      "AnalyticsCardCompanyChartSummary": {
        "required": [
          "totalAmount",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "totalAmount": {
            "type": "integer",
            "format": "int64",
            "description": "<p>결제금액 합</p>\n"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64",
            "description": "<p>결제 건수 합</p>\n"
          }
        },
        "description": "<p>카드사별 결제 현황에서 결제금액, 결제 건수의 총합을 나타냅니다.</p>\n"
      },
      "AnalyticsEasyPayChart": {
        "required": [
          "stats"
        ],
        "type": "object",
        "properties": {
          "stats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalyticsEasyPayChartStat"
            }
          }
        },
        "description": "<p>가맹점의 간편결제 현황을 조회합니다.</p>\n"
      },
      "AnalyticsEasyPayChartStat": {
        "required": [
          "timestamp",
          "amount",
          "count"
        ],
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "<p>시점</p>\n"
          },
          "amount": {
            "type": "integer",
            "format": "int64",
            "description": "<p>거래액</p>\n"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "<p>거래 건수</p>\n"
          }
        },
        "description": "<p>간편결제 현황에서 특정 시점의 거래 건 수와 금액을 나타냅니다.</p>\n"
      },
      "AnalyticsEasyPayProviderChart": {
        "required": [
          "stats",
          "summary"
        ],
        "type": "object",
        "properties": {
          "stats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalyticsEasyPayProviderChartStat"
            }
          },
          "summary": {
            "$ref": "#/components/schemas/AnalyticsEasyPayProviderChartSummary"
          }
        },
        "description": "<p>가맹점의 간편결제사별 결제 현황 조회 응답</p>\n"
      },
      "AnalyticsEasyPayProviderChartStat": {
        "required": [
          "timestamp",
          "easyPayProvider",
          "amount",
          "count"
        ],
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "<p>시점</p>\n"
          },
          "easyPayProvider": {
            "$ref": "#/components/schemas/EasyPayProvider",
            "description": "<p>간편결제사</p>\n"
          },
          "amount": {
            "type": "integer",
            "format": "int64",
            "description": "<p>결제금액</p>\n"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "<p>결제 건수</p>\n"
          }
        },
        "description": "<p>간편결제사별 결제 현황에서 간편결제사별 결제금액, 결제 건수를 나타냅니다.</p>\n"
      },
      "AnalyticsEasyPayProviderChartSummary": {
        "required": [
          "totalAmount",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "totalAmount": {
            "type": "integer",
            "format": "int64",
            "description": "<p>결제금액 합</p>\n"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64",
            "description": "<p>결제 건수 합</p>\n"
          }
        },
        "description": "<p>간편결제사별 결제 현황에서 결제금액, 결제 건수의 총합을 나타냅니다.</p>\n"
      },
      "AnalyticsPaymentChart": {
        "required": [
          "stats"
        ],
        "type": "object",
        "properties": {
          "stats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalyticsPaymentChartStat"
            }
          }
        },
        "description": "<p>가맹점의 결제 현황을 조회합니다.</p>\n"
      },
      "AnalyticsPaymentChartStat": {
        "required": [
          "timestamp",
          "amount",
          "count"
        ],
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "<p>시점</p>\n"
          },
          "amount": {
            "type": "integer",
            "format": "int64",
            "description": "<p>거래액</p>\n"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "<p>거래 건수</p>\n"
          }
        },
        "description": "<p>거래현황에서 특정 시점의 거래 건 수와 금액을 나타냅니다.</p>\n"
      },
      "AnalyticsPaymentMethodChart": {
        "required": [
          "stats"
        ],
        "type": "object",
        "properties": {
          "stats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalyticsPaymentMethodChartStat"
            }
          }
        },
        "description": "<p>가맹점의 결제수단 현황 조회 응답</p>\n"
      },
      "AnalyticsPaymentMethodChartStat": {
        "required": [
          "paymentMethod",
          "amount",
          "count"
        ],
        "type": "object",
        "properties": {
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethodType",
            "description": "<p>결제수단</p>\n"
          },
          "amount": {
            "type": "integer",
            "format": "int64",
            "description": "<p>결제수단별 결제금액</p>\n"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "<p>결제수단별 결제 건수</p>\n"
          }
        },
        "description": "<p>결제수단 현황에서 결제수단별 결제금액, 결제 건수를 나타냅니다.</p>\n"
      },
      "AnalyticsPaymentMethodTrendChart": {
        "required": [
          "stats"
        ],
        "type": "object",
        "properties": {
          "stats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalyticsPaymentMethodTrendChartStat"
            }
          }
        },
        "description": "<p>가맹점의 결제수단 트렌드 조회 응답</p>\n"
      },
      "AnalyticsPaymentMethodTrendChartStat": {
        "required": [
          "timestamp",
          "paymentMethod",
          "amount",
          "count"
        ],
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "<p>시점</p>\n"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethodType",
            "description": "<p>결제수단</p>\n"
          },
          "amount": {
            "type": "integer",
            "format": "int64",
            "description": "<p>결제금액</p>\n"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "<p>결제 건수</p>\n"
          }
        },
        "description": "<p>결제수단 트렌드에서 결제수단별 결제금액, 결제 건수를 나타냅니다. (timestamp, paymentMethod)에 대해 오름차순으로 정렬되었습니다.</p>\n"
      },
      "AnalyticsPgProviderChart": {
        "required": [
          "stats"
        ],
        "type": "object",
        "properties": {
          "stats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalyticsPgProviderChartStat"
            }
          }
        },
        "description": "<p>가맹점의 결제대행사 현황 조회 응답</p>\n"
      },
      "AnalyticsPgProviderChartStat": {
        "required": [
          "pgProvider",
          "amount",
          "count"
        ],
        "type": "object",
        "properties": {
          "pgProvider": {
            "$ref": "#/components/schemas/PgProvider",
            "description": "<p>결제대행사</p>\n"
          },
          "amount": {
            "type": "integer",
            "format": "int64",
            "description": "<p>결제대행사별 결제금액</p>\n"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "<p>결제대행사별 결제 건수</p>\n"
          }
        },
        "description": "<p>결제대행사 현황에서 결제대행사별 결제금액, 결제 건수를 나타냅니다.</p>\n"
      },
      "AnalyticsPgProviderTrendChart": {
        "required": [
          "stats"
        ],
        "type": "object",
        "properties": {
          "stats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalyticsPgProviderTrendChartStat"
            }
          }
        },
        "description": "<p>가맹점의 결제대행사별 거래 추이 조회 응답</p>\n"
      },
      "AnalyticsPgProviderTrendChartStat": {
        "required": [
          "timestamp",
          "pgProvider",
          "amount",
          "count"
        ],
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "<p>시점</p>\n"
          },
          "pgProvider": {
            "$ref": "#/components/schemas/PgProvider",
            "description": "<p>결제대행사</p>\n"
          },
          "amount": {
            "type": "integer",
            "format": "int64",
            "description": "<p>결제금액</p>\n"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "<p>결제 건수</p>\n"
          }
        },
        "description": "<p>결제대행사별 거래 추이에서 결제대행사별 결제금액, 결제 건수를 나타냅니다.</p>\n"
      },
      "AnalyticsTimeGranularity": {
        "type": "string",
        "description": "<p>조회 시간 단위</p>\n",
        "enum": [
          "DAY",
          "HOUR",
          "MONTH",
          "WEEK"
        ],
        "x-portone-cases": [
          {
            "case": "HOUR",
            "x-portone-name": "시간"
          },
          {
            "case": "DAY",
            "x-portone-name": "일"
          },
          {
            "case": "WEEK",
            "x-portone-name": "주"
          },
          {
            "case": "MONTH",
            "x-portone-name": "월"
          }
        ]
      },
      "ApprovePlatformPartnerBody": {
        "type": "object",
        "properties": {
          "memo": {
            "type": "string",
            "description": "<p>파트너 메모. 값이 명시되지 않은 경우 업데이트하지 않습니다.</p>\n"
          }
        },
        "description": "<p>파트너 상태를 승인 완료로 변경하기 위한 입력 정보</p>\n"
      },
      "ApprovePlatformPartnerError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/PlatformPartnerNotFoundError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "PLATFORM_PARTNER_NOT_FOUND": "#/components/schemas/PlatformPartnerNotFoundError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "ApprovePlatformPartnerResponse": {
        "required": [
          "partner"
        ],
        "type": "object",
        "properties": {
          "partner": {
            "$ref": "#/components/schemas/PlatformPartner",
            "description": "<p>승인된 파트너</p>\n"
          }
        },
        "description": "<p>파트너 승인 성공 응답</p>\n"
      },
      "Bank": {
        "type": "string",
        "enum": [
          "BNP",
          "BOA",
          "BOK",
          "BUSAN",
          "CITI",
          "CREDIT_UNION",
          "DAEGU",
          "DAISHIN_SB",
          "DEUTSCHE",
          "EIB",
          "EPOST",
          "FSB",
          "GWANGJU",
          "GYEONGNAM",
          "HANA",
          "HK_SB",
          "HSBC",
          "IBK",
          "JEJU",
          "JEONBUK",
          "JPMC",
          "KAKAO",
          "KB",
          "KBANK",
          "KDB",
          "KFCC",
          "MISC",
          "MIZUHO",
          "MORGAN_STANLEY",
          "MUFG",
          "NFCF",
          "NH",
          "REGIONAL_NH",
          "SBI_SB",
          "SCB",
          "SHINHAN",
          "SHINHAN_SB",
          "SUHYUP",
          "TOSS_BANK",
          "WELCOME_SB",
          "WOORI"
        ],
        "x-portone-cases": [
          {
            "case": "BOK",
            "x-portone-name": "한국은행"
          },
          {
            "case": "KDB",
            "x-portone-name": "산업은행"
          },
          {
            "case": "IBK",
            "x-portone-name": "기업은행"
          },
          {
            "case": "KB",
            "x-portone-name": "국민은행"
          },
          {
            "case": "SUHYUP",
            "x-portone-name": "수협은행"
          },
          {
            "case": "EIB",
            "x-portone-name": "수출입은행"
          },
          {
            "case": "NH",
            "x-portone-name": "NH농협은행"
          },
          {
            "case": "REGIONAL_NH",
            "x-portone-name": "지역농축협"
          },
          {
            "case": "WOORI",
            "x-portone-name": "우리은행"
          },
          {
            "case": "SCB",
            "x-portone-name": "SC제일은행"
          },
          {
            "case": "CITI",
            "x-portone-name": "한국씨티은행"
          },
          {
            "case": "DAEGU",
            "x-portone-name": "대구은행"
          },
          {
            "case": "BUSAN",
            "x-portone-name": "부산은행"
          },
          {
            "case": "GWANGJU",
            "x-portone-name": "광주은행"
          },
          {
            "case": "JEJU",
            "x-portone-name": "제주은행"
          },
          {
            "case": "JEONBUK",
            "x-portone-name": "전북은행"
          },
          {
            "case": "GYEONGNAM",
            "x-portone-name": "경남은행"
          },
          {
            "case": "KFCC",
            "x-portone-name": "새마을금고"
          },
          {
            "case": "CREDIT_UNION",
            "x-portone-name": "신협"
          },
          {
            "case": "FSB",
            "x-portone-name": "저축은행"
          },
          {
            "case": "MISC",
            "x-portone-name": "기타 외국계은행(중국 농업은행 등)"
          },
          {
            "case": "MORGAN_STANLEY",
            "x-portone-name": "모간스탠리은행"
          },
          {
            "case": "HSBC",
            "x-portone-name": "HSBC은행"
          },
          {
            "case": "DEUTSCHE",
            "x-portone-name": "도이치은행"
          },
          {
            "case": "JPMC",
            "x-portone-name": "제이피모간체이스은행"
          },
          {
            "case": "MIZUHO",
            "x-portone-name": "미즈호은행"
          },
          {
            "case": "MUFG",
            "x-portone-name": "엠유에프지은행"
          },
          {
            "case": "BOA",
            "x-portone-name": "BOA은행"
          },
          {
            "case": "BNP",
            "x-portone-name": "비엔피파리바은행"
          },
          {
            "case": "NFCF",
            "x-portone-name": "산림조합중앙회"
          },
          {
            "case": "EPOST",
            "x-portone-name": "우체국"
          },
          {
            "case": "HANA",
            "x-portone-name": "하나은행"
          },
          {
            "case": "SHINHAN",
            "x-portone-name": "신한은행"
          },
          {
            "case": "KBANK",
            "x-portone-name": "케이뱅크"
          },
          {
            "case": "KAKAO",
            "x-portone-name": "카카오뱅크"
          },
          {
            "case": "TOSS_BANK",
            "x-portone-name": "토스뱅크"
          },
          {
            "case": "DAISHIN_SB",
            "x-portone-name": "대신저축은행"
          },
          {
            "case": "SBI_SB",
            "x-portone-name": "에스비아이저축은행"
          },
          {
            "case": "HK_SB",
            "x-portone-name": "에이치케이저축은행"
          },
          {
            "case": "WELCOME_SB",
            "x-portone-name": "웰컴저축은행"
          },
          {
            "case": "SHINHAN_SB",
            "x-portone-name": "신한저축은행"
          }
        ]
      },
      "CancelPlatformAdditionalFeePolicyScheduleError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformAdditionalFeePolicyNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_ADDITIONAL_FEE_POLICY_NOT_FOUND": "#/components/schemas/PlatformAdditionalFeePolicyNotFoundError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "CancelPlatformAdditionalFeePolicyScheduleResponse": {
        "type": "object",
        "description": "<p>추가 수수료 정책 예약 업데이트 취소 성공 응답</p>\n"
      },
      "CancelPlatformContractScheduleError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformContractNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_CONTRACT_NOT_FOUND": "#/components/schemas/PlatformContractNotFoundError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "CancelPlatformContractScheduleResponse": {
        "type": "object",
        "description": "<p>계약 예약 업데이트 취소 성공 응답</p>\n"
      },
      "CancelPlatformDiscountSharePolicyScheduleError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformDiscountSharePolicyNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_DISCOUNT_SHARE_POLICY_NOT_FOUND": "#/components/schemas/PlatformDiscountSharePolicyNotFoundError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "CancelPlatformDiscountSharePolicyScheduleResponse": {
        "type": "object",
        "description": "<p>할인 분담 정책 예약 업데이트 취소 성공 응답</p>\n"
      },
      "CancelPlatformPartnerScheduleError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/PlatformPartnerNotFoundError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "PLATFORM_PARTNER_NOT_FOUND": "#/components/schemas/PlatformPartnerNotFoundError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "CancelPlatformPartnerScheduleResponse": {
        "type": "object",
        "description": "<p>파트너 예약 업데이트 취소 성공 응답</p>\n"
      },
      "CardCompany": {
        "type": "string",
        "description": "<p>카드사</p>\n",
        "enum": [
          "BC_CARD",
          "CITI_CARD",
          "EPOST",
          "GWANGJU_CARD",
          "HANA_CARD",
          "HYUNDAI_CARD",
          "JEJU_CARD",
          "JEONBUK_CARD",
          "KAKAO_BANK",
          "KFCC",
          "KOOKMIN_CARD",
          "KOREA_DEVELOPMENT_BANK",
          "K_BANK",
          "LOTTE_CARD",
          "NH_CARD",
          "SAMSUNG_CARD",
          "SAVINGS_BANK_KOREA",
          "SHINHAN_CARD",
          "SHINHYUP",
          "SUHYUP_CARD",
          "TOSS_BANK",
          "WOORI_CARD"
        ],
        "x-portone-cases": [
          {
            "case": "KOREA_DEVELOPMENT_BANK",
            "x-portone-name": "KDB산업은행"
          },
          {
            "case": "KFCC",
            "x-portone-name": "새마을금고"
          },
          {
            "case": "SHINHYUP",
            "x-portone-name": "신협"
          },
          {
            "case": "EPOST",
            "x-portone-name": "우체국"
          },
          {
            "case": "SAVINGS_BANK_KOREA",
            "x-portone-name": "저축은행"
          },
          {
            "case": "KAKAO_BANK",
            "x-portone-name": "카카오뱅크"
          },
          {
            "case": "K_BANK",
            "x-portone-name": "케이뱅크"
          },
          {
            "case": "TOSS_BANK",
            "x-portone-name": "토스뱅크"
          },
          {
            "case": "WOORI_CARD",
            "x-portone-name": "우리카드"
          },
          {
            "case": "BC_CARD",
            "x-portone-name": "BC카드"
          },
          {
            "case": "GWANGJU_CARD",
            "x-portone-name": "광주카드"
          },
          {
            "case": "SAMSUNG_CARD",
            "x-portone-name": "삼성카드"
          },
          {
            "case": "SHINHAN_CARD",
            "x-portone-name": "신한카드"
          },
          {
            "case": "HYUNDAI_CARD",
            "x-portone-name": "현대카드"
          },
          {
            "case": "LOTTE_CARD",
            "x-portone-name": "롯데카드"
          },
          {
            "case": "SUHYUP_CARD",
            "x-portone-name": "수협카드"
          },
          {
            "case": "CITI_CARD",
            "x-portone-name": "씨티카드"
          },
          {
            "case": "NH_CARD",
            "x-portone-name": "NH카드"
          },
          {
            "case": "JEONBUK_CARD",
            "x-portone-name": "전북카드"
          },
          {
            "case": "JEJU_CARD",
            "x-portone-name": "제주카드"
          },
          {
            "case": "HANA_CARD",
            "x-portone-name": "하나카드"
          },
          {
            "case": "KOOKMIN_CARD",
            "x-portone-name": "국민카드"
          }
        ]
      },
      "ChannelNotFoundError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "description": "<p>요청된 채널이 존재하지 않는 경우</p>\n"
      },
      "CompletePlatformPayoutError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ForbiddenError"
          },
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/PlatformPayoutAlreadyCompletedError"
          },
          {
            "$ref": "#/components/schemas/PlatformPayoutCreatorMismatchedError"
          },
          {
            "$ref": "#/components/schemas/PlatformPayoutNotFoundError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "FORBIDDEN": "#/components/schemas/ForbiddenError",
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "PLATFORM_PAYOUT_ALREADY_COMPLETED": "#/components/schemas/PlatformPayoutAlreadyCompletedError",
            "PLATFORM_PAYOUT_CREATOR_MISMATCHED": "#/components/schemas/PlatformPayoutCreatorMismatchedError",
            "PLATFORM_PAYOUT_NOT_FOUND": "#/components/schemas/PlatformPayoutNotFoundError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "CompletePlatformPayoutResponse": {
        "required": [
          "payout"
        ],
        "type": "object",
        "properties": {
          "payout": {
            "$ref": "#/components/schemas/PlatformPayout"
          }
        }
      },
      "ConfirmIdentityVerificationBody": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "storeId": {
            "type": "string",
            "description": "<p>상점 아이디 (접근 권한이 있는 상점 아이디 입력 가능, 미 입력시 토큰에 담긴 상점 아이디를 사용)</p>\n"
          },
          "id": {
            "type": "string",
            "description": "<p>본인인증 아이디</p>\n"
          },
          "otp": {
            "type": "string",
            "description": "<p>OTP (SMS 방식일 때만 입력, APP 방식은 입력하지 않음)</p>\n"
          }
        },
        "description": "<p>본인인증 확인을 위한 입력 정보</p>\n"
      },
      "ConfirmIdentityVerificationError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ForbiddenError"
          },
          {
            "$ref": "#/components/schemas/IdentityVerificationAlreadyVerifiedError"
          },
          {
            "$ref": "#/components/schemas/IdentityVerificationNotFoundError"
          },
          {
            "$ref": "#/components/schemas/IdentityVerificationNotSentError"
          },
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PgProviderError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "FORBIDDEN": "#/components/schemas/ForbiddenError",
            "IDENTITY_VERIFICATION_ALREADY_VERIFIED": "#/components/schemas/IdentityVerificationAlreadyVerifiedError",
            "IDENTITY_VERIFICATION_NOT_FOUND": "#/components/schemas/IdentityVerificationNotFoundError",
            "IDENTITY_VERIFICATION_NOT_SENT": "#/components/schemas/IdentityVerificationNotSentError",
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PG_PROVIDER": "#/components/schemas/PgProviderError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "ConfirmIdentityVerificationResponse": {
        "required": [
          "identityVerification"
        ],
        "type": "object",
        "properties": {
          "identityVerification": {
            "$ref": "#/components/schemas/VerifiedIdentityVerification",
            "description": "<p>본인인증 완료 상태 건</p>\n"
          }
        },
        "description": "<p>본인인증 확인 성공 응답</p>\n"
      },
      "CreateManualTransferResponse": {
        "required": [
          "transfer"
        ],
        "type": "object",
        "properties": {
          "transfer": {
            "$ref": "#/components/schemas/PlatformManualTransfer"
          }
        }
      },
      "CreateOrderCancelTransferResponse": {
        "required": [
          "transfer"
        ],
        "type": "object",
        "properties": {
          "transfer": {
            "$ref": "#/components/schemas/PlatformOrderCancelTransfer"
          }
        }
      },
      "CreateOrderTransferResponse": {
        "required": [
          "transfer"
        ],
        "type": "object",
        "properties": {
          "transfer": {
            "$ref": "#/components/schemas/PlatformOrderTransfer"
          }
        }
      },
      "CreatePlatformAccountBody": {
        "required": [
          "bank",
          "currency",
          "number",
          "holder"
        ],
        "type": "object",
        "properties": {
          "bank": {
            "$ref": "#/components/schemas/Bank",
            "description": "<p>은행</p>\n"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency",
            "description": "<p>정산에 사용할 통화</p>\n"
          },
          "number": {
            "type": "string",
            "description": "<p>계좌번호</p>\n"
          },
          "holder": {
            "type": "string",
            "description": "<p>예금주명</p>\n"
          }
        },
        "description": "<p>플랫폼 계좌 생성을 위한 정보</p>\n"
      },
      "CreatePlatformAdditionalFeePolicyBody": {
        "required": [
          "fee",
          "vatPayer"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "<p>생성할 추가 수수료 정책 id. 명시하지 않으면 id 가 임의로 생성됩니다.</p>\n"
          },
          "fee": {
            "$ref": "#/components/schemas/PlatformFeeInput",
            "description": "<p>수수료 정보</p>\n"
          },
          "memo": {
            "type": "string",
            "description": "<p>메모</p>\n"
          },
          "vatPayer": {
            "$ref": "#/components/schemas/PlatformPayer",
            "description": "<p>부가세를 부담할 주체</p>\n"
          }
        },
        "description": "<p>추가 수수료 정책 생성을 위한 입력 정보</p>\n"
      },
      "CreatePlatformAdditionalFeePolicyError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformAdditionalFeePolicyAlreadyExistsError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_ADDITIONAL_FEE_POLICY_ALREADY_EXISTS": "#/components/schemas/PlatformAdditionalFeePolicyAlreadyExistsError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "CreatePlatformAdditionalFeePolicyResponse": {
        "required": [
          "additionalFeePolicy"
        ],
        "type": "object",
        "properties": {
          "additionalFeePolicy": {
            "$ref": "#/components/schemas/PlatformAdditionalFeePolicy",
            "description": "<p>생성된 추가 수수료 정책</p>\n"
          }
        },
        "description": "<p>플랫폼 생성 성공 응답 정보</p>\n"
      },
      "CreatePlatformContractBody": {
        "required": [
          "platformFee",
          "settlementCycle",
          "platformFeeVatPayer"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "<p>계약에 부여할 고유 아이디. 명시하지 않는 경우 포트원이 임의의 아이디를 발급해드립니다.</p>\n"
          },
          "memo": {
            "type": "string",
            "description": "<p>계약 내부 표기를 위한 메모</p>\n"
          },
          "platformFee": {
            "$ref": "#/components/schemas/PlatformFeeInput",
            "description": "<p>중개수수료</p>\n"
          },
          "settlementCycle": {
            "$ref": "#/components/schemas/PlatformSettlementCycleInput",
            "description": "<p>정산 주기</p>\n"
          },
          "platformFeeVatPayer": {
            "$ref": "#/components/schemas/PlatformPayer",
            "description": "<p>중개수수료에 대한 부가세 부담 주체</p>\n"
          }
        },
        "description": "<p>계약 객체 생성을 위한 입력 정보</p>\n"
      },
      "CreatePlatformContractError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformContractAlreadyExistsError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_CONTRACT_ALREADY_EXISTS": "#/components/schemas/PlatformContractAlreadyExistsError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "CreatePlatformContractResponse": {
        "required": [
          "contract"
        ],
        "type": "object",
        "properties": {
          "contract": {
            "$ref": "#/components/schemas/PlatformContract",
            "description": "<p>생성된 계약 객체</p>\n"
          }
        },
        "description": "<p>계약 객체 생성 성공 응답</p>\n"
      },
      "CreatePlatformDiscountSharePolicyBody": {
        "required": [
          "partnerShareRate"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "<p>할인 분담에 부여할 고유 아이디 명시하지 않는 경우 포트원이 임의의 아이디를 발급해드립니다.</p>\n"
          },
          "partnerShareRate": {
            "type": "integer",
            "format": "int32",
            "description": "<p>할인 분담율. 파트너가 분담할 할인금액의 비율을 의미하는 밀리 퍼센트 단위 (10^-5) 의 음이 아닌 정수이며, 파트너가 부담할 금액은 <code>할인금액 * partnerShareRate * 10^5</code> 로 책정합니다.</p>\n"
          },
          "memo": {
            "type": "string",
            "description": "<p>해당 할인 분담에 대한 메모 ex) 파트너 브랜드 쿠폰</p>\n"
          }
        },
        "description": "<p>할인 분담 정책 생성을 위한 입력 정보</p>\n"
      },
      "CreatePlatformDiscountSharePolicyError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformDiscountSharePolicyAlreadyExistsError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_DISCOUNT_SHARE_POLICY_ALREADY_EXISTS": "#/components/schemas/PlatformDiscountSharePolicyAlreadyExistsError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "CreatePlatformDiscountSharePolicyResponse": {
        "required": [
          "discountSharePolicy"
        ],
        "type": "object",
        "properties": {
          "discountSharePolicy": {
            "$ref": "#/components/schemas/PlatformDiscountSharePolicy",
            "description": "<p>생성된 할인 분담 정책</p>\n"
          }
        },
        "description": "<p>할인 분담 정책 생성 성공 응답</p>\n"
      },
      "CreatePlatformManualTransferBody": {
        "required": [
          "partnerId",
          "settlementAmount",
          "settlementDate"
        ],
        "type": "object",
        "properties": {
          "partnerId": {
            "type": "string"
          },
          "memo": {
            "type": "string"
          },
          "settlementAmount": {
            "type": "integer",
            "format": "int64"
          },
          "settlementDate": {
            "type": "string",
            "description": "<p>날짜를 나타내는 문자열로, <code>yyyy-MM-dd</code> 형식을 따릅니다.</p>\n"
          },
          "isForTest": {
            "type": "boolean"
          }
        }
      },
      "CreatePlatformManualTransferError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/PlatformPartnerNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformUnavailableSettlementDateError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "PLATFORM_PARTNER_NOT_FOUND": "#/components/schemas/PlatformPartnerNotFoundError",
            "PLATFORM_UNAVAILABLE_SETTLEMENT_DATE": "#/components/schemas/PlatformUnavailableSettlementDateError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "CreatePlatformOrderCancelTransferBody": {
        "required": [
          "partnerId",
          "paymentId",
          "cancellationId",
          "discounts"
        ],
        "type": "object",
        "properties": {
          "partnerId": {
            "type": "string"
          },
          "paymentId": {
            "type": "string"
          },
          "cancellationId": {
            "type": "string"
          },
          "memo": {
            "type": "string"
          },
          "orderDetail": {
            "$ref": "#/components/schemas/CreatePlatformOrderCancelTransferBodyOrderDetail"
          },
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreatePlatformOrderCancelTransferBodyDiscount"
            }
          },
          "settlementStartDate": {
            "type": "string",
            "description": "<p>날짜를 나타내는 문자열로, <code>yyyy-MM-dd</code> 형식을 따릅니다.</p>\n"
          },
          "externalCancellationDetail": {
            "$ref": "#/components/schemas/CreatePlatformOrderCancelTransferBodyExternalCancellationDetail"
          },
          "isForTest": {
            "type": "boolean"
          }
        }
      },
      "CreatePlatformOrderCancelTransferBodyDiscount": {
        "required": [
          "sharePolicyId",
          "amount"
        ],
        "type": "object",
        "properties": {
          "sharePolicyId": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CreatePlatformOrderCancelTransferBodyExternalCancellationDetail": {
        "type": "object",
        "properties": {
          "cancelledAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreatePlatformOrderCancelTransferBodyOrderDetail": {
        "type": "object",
        "properties": {
          "orderAmount": {
            "type": "integer",
            "format": "int64"
          },
          "orderLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreatePlatformOrderCancelTransferBodyOrderLine"
            }
          },
          "all": {
            "$ref": "#/components/schemas/CreatePlatformOrderCancelTransferBodyOrderDetailAll"
          }
        }
      },
      "CreatePlatformOrderCancelTransferBodyOrderDetailAll": {
        "type": "object"
      },
      "CreatePlatformOrderCancelTransferBodyOrderLine": {
        "required": [
          "productId",
          "quantity",
          "discounts"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreatePlatformOrderCancelTransferBodyDiscount"
            }
          }
        }
      },
      "CreatePlatformOrderCancelTransferError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformCancellableAmountExceededError"
          },
          {
            "$ref": "#/components/schemas/PlatformCancellableDiscountAmountExceededError"
          },
          {
            "$ref": "#/components/schemas/PlatformCancellableProductQuantityExceededError"
          },
          {
            "$ref": "#/components/schemas/PlatformCancellationAndPaymentTypeMismatchedError"
          },
          {
            "$ref": "#/components/schemas/PlatformCancellationNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformDiscountCancelExceededOrderCancelAmountError"
          },
          {
            "$ref": "#/components/schemas/PlatformDiscountSharePolicyIdDuplicatedError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/PlatformOrderDetailMismatchedError"
          },
          {
            "$ref": "#/components/schemas/PlatformOrderTransferAlreadyCancelledError"
          },
          {
            "$ref": "#/components/schemas/PlatformPaymentNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformProductIdDuplicatedError"
          },
          {
            "$ref": "#/components/schemas/PlatformProductIdNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformSettlementCancelAmountExceededPortOneCancelError"
          },
          {
            "$ref": "#/components/schemas/PlatformTransferAlreadyExistsError"
          },
          {
            "$ref": "#/components/schemas/PlatformTransferDiscountSharePolicyNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformTransferNotFoundError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_CANCELLABLE_AMOUNT_EXCEEDED": "#/components/schemas/PlatformCancellableAmountExceededError",
            "PLATFORM_CANCELLABLE_DISCOUNT_AMOUNT_EXCEEDED": "#/components/schemas/PlatformCancellableDiscountAmountExceededError",
            "PLATFORM_CANCELLABLE_PRODUCT_QUANTITY_EXCEEDED": "#/components/schemas/PlatformCancellableProductQuantityExceededError",
            "PLATFORM_CANCELLATION_AND_PAYMENT_TYPE_MISMATCHED": "#/components/schemas/PlatformCancellationAndPaymentTypeMismatchedError",
            "PLATFORM_CANCELLATION_NOT_FOUND": "#/components/schemas/PlatformCancellationNotFoundError",
            "PLATFORM_DISCOUNT_CANCEL_EXCEEDED_ORDER_CANCEL_AMOUNT": "#/components/schemas/PlatformDiscountCancelExceededOrderCancelAmountError",
            "PLATFORM_DISCOUNT_SHARE_POLICY_ID_DUPLICATED": "#/components/schemas/PlatformDiscountSharePolicyIdDuplicatedError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "PLATFORM_ORDER_DETAIL_MISMATCHED": "#/components/schemas/PlatformOrderDetailMismatchedError",
            "PLATFORM_ORDER_TRANSFER_ALREADY_CANCELLED": "#/components/schemas/PlatformOrderTransferAlreadyCancelledError",
            "PLATFORM_PAYMENT_NOT_FOUND": "#/components/schemas/PlatformPaymentNotFoundError",
            "PLATFORM_PRODUCT_ID_DUPLICATED": "#/components/schemas/PlatformProductIdDuplicatedError",
            "PLATFORM_PRODUCT_ID_NOT_FOUND": "#/components/schemas/PlatformProductIdNotFoundError",
            "PLATFORM_SETTLEMENT_CANCEL_AMOUNT_EXCEEDED_PORT_ONE_CANCEL": "#/components/schemas/PlatformSettlementCancelAmountExceededPortOneCancelError",
            "PLATFORM_TRANSFER_ALREADY_EXISTS": "#/components/schemas/PlatformTransferAlreadyExistsError",
            "PLATFORM_TRANSFER_DISCOUNT_SHARE_POLICY_NOT_FOUND": "#/components/schemas/PlatformTransferDiscountSharePolicyNotFoundError",
            "PLATFORM_TRANSFER_NOT_FOUND": "#/components/schemas/PlatformTransferNotFoundError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "CreatePlatformOrderTransferBody": {
        "required": [
          "partnerId",
          "paymentId",
          "orderDetail",
          "discounts",
          "additionalFees"
        ],
        "type": "object",
        "properties": {
          "partnerId": {
            "type": "string"
          },
          "contractId": {
            "type": "string"
          },
          "memo": {
            "type": "string"
          },
          "paymentId": {
            "type": "string"
          },
          "orderDetail": {
            "$ref": "#/components/schemas/CreatePlatformOrderTransferBodyOrderDetail"
          },
          "settlementStartDate": {
            "type": "string",
            "description": "<p>날짜를 나타내는 문자열로, <code>yyyy-MM-dd</code> 형식을 따릅니다.</p>\n"
          },
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreatePlatformOrderTransferBodyDiscount"
            }
          },
          "additionalFees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreatePlatformOrderTransferBodyAdditionalFee"
            }
          },
          "externalPaymentDetail": {
            "$ref": "#/components/schemas/CreatePlatformOrderTransferBodyExternalPaymentDetail"
          },
          "isForTest": {
            "type": "boolean"
          }
        }
      },
      "CreatePlatformOrderTransferBodyAdditionalFee": {
        "required": [
          "policyId"
        ],
        "type": "object",
        "properties": {
          "policyId": {
            "type": "string"
          }
        }
      },
      "CreatePlatformOrderTransferBodyDiscount": {
        "required": [
          "sharePolicyId",
          "amount"
        ],
        "type": "object",
        "properties": {
          "sharePolicyId": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CreatePlatformOrderTransferBodyExternalPaymentDetail": {
        "required": [
          "currency"
        ],
        "type": "object",
        "properties": {
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "orderName": {
            "type": "string"
          },
          "paidAt": {
            "type": "string",
            "format": "date-time"
          },
          "method": {
            "$ref": "#/components/schemas/PlatformPaymentMethodInput"
          }
        }
      },
      "CreatePlatformOrderTransferBodyOrderDetail": {
        "type": "object",
        "properties": {
          "orderAmount": {
            "type": "integer",
            "format": "int64"
          },
          "orderLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreatePlatformOrderTransferBodyOrderLine"
            }
          }
        }
      },
      "CreatePlatformOrderTransferBodyOrderLine": {
        "required": [
          "product",
          "quantity",
          "discounts",
          "additionalFees"
        ],
        "type": "object",
        "properties": {
          "product": {
            "$ref": "#/components/schemas/CreatePlatformOrderTransferBodyProduct"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreatePlatformOrderTransferBodyDiscount"
            }
          },
          "additionalFees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreatePlatformOrderTransferBodyAdditionalFee"
            }
          }
        }
      },
      "CreatePlatformOrderTransferBodyProduct": {
        "required": [
          "id",
          "name",
          "amount"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "tag": {
            "type": "string"
          }
        }
      },
      "CreatePlatformOrderTransferError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformAdditionalFeePoliciesNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformAdditionalFixedAmountFeeCurrencyAndSettlementCurrencyMismatchedError"
          },
          {
            "$ref": "#/components/schemas/PlatformContractNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformContractPlatformFixedAmountFeeCurrencyAndSettlementCurrencyMismatchedError"
          },
          {
            "$ref": "#/components/schemas/PlatformDiscountExceededOrderAmountError"
          },
          {
            "$ref": "#/components/schemas/PlatformDiscountSharePoliciesNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/PlatformPartnerNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformPaymentNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformProductIdDuplicatedError"
          },
          {
            "$ref": "#/components/schemas/PlatformSettlementPaymentAmountExceededPortOnePaymentError"
          },
          {
            "$ref": "#/components/schemas/PlatformTransferAlreadyExistsError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_ADDITIONAL_FEE_POLICIES_NOT_FOUND": "#/components/schemas/PlatformAdditionalFeePoliciesNotFoundError",
            "PLATFORM_CONTRACT_NOT_FOUND": "#/components/schemas/PlatformContractNotFoundError",
            "PLATFORM_CONTRACT_PLATFORM_FIXED_AMOUNT_FEE_CURRENCY_AND_SETTLEMENT_CURRENCY_MISMATCHED": "#/components/schemas/PlatformAdditionalFixedAmountFeeCurrencyAndSettlementCurrencyMismatchedError",
            "PLATFORM_DISCOUNT_EXCEEDED_ORDER_AMOUNT": "#/components/schemas/PlatformDiscountExceededOrderAmountError",
            "PLATFORM_DISCOUNT_SHARE_POLICIES_NOT_FOUND": "#/components/schemas/PlatformDiscountSharePoliciesNotFoundError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "PLATFORM_PARTNER_NOT_FOUND": "#/components/schemas/PlatformPartnerNotFoundError",
            "PLATFORM_PAYMENT_NOT_FOUND": "#/components/schemas/PlatformPaymentNotFoundError",
            "PLATFORM_PRODUCT_ID_DUPLICATED": "#/components/schemas/PlatformProductIdDuplicatedError",
            "PLATFORM_SETTLEMENT_PAYMENT_AMOUNT_EXCEEDED_PORT_ONE_PAYMENT": "#/components/schemas/PlatformSettlementPaymentAmountExceededPortOnePaymentError",
            "PLATFORM_TRANSFER_ALREADY_EXISTS": "#/components/schemas/PlatformTransferAlreadyExistsError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "CreatePlatformPartnerBody": {
        "required": [
          "name",
          "email",
          "account",
          "defaultContractId",
          "tags"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "<p>파트너에 부여할 고유 아이디. 가맹점 서버에 등록된 파트너 지칭 아이디와 동일하게 설정하는 것을 권장합니다. 명시하지 않는 경우 포트원이 임의의 아이디를 발급해드립니다.</p>\n"
          },
          "name": {
            "type": "string",
            "description": "<p>파트너 법인명 혹은 이름</p>\n"
          },
          "email": {
            "type": "string",
            "description": "<p>파트너 이메일</p>\n"
          },
          "businessRegistrationNumber": {
            "type": "string",
            "description": "<p>파트너의 사업자등록번호가 존재하는 경우 명시합니다. 별도로 검증하지는 않으며, 번호와 기호 모두 입력 가능합니다.</p>\n"
          },
          "account": {
            "$ref": "#/components/schemas/CreatePlatformAccountBody",
            "description": "<p>정산 계좌</p>\n"
          },
          "defaultContractId": {
            "type": "string",
            "description": "<p>기본 계약 아이디로, 이미 존재하는 계약객체의 아이디를 등록해야 합니다.</p>\n"
          },
          "memo": {
            "type": "string",
            "description": "<p>파트너에 대한 메모로, 총 256자까지 입력할 수 있습니다.</p>\n"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "<p>파트너에 부여할 태그 리스트로, 최대 10개까지 입력할 수 있습니다.</p>\n"
          }
        },
        "description": "<p>파트너 생성을 위한 입력 정보</p>\n"
      },
      "CreatePlatformPartnerError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformContractNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/PlatformPartnerIdAlreadyExistsError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_CONTRACT_NOT_FOUND": "#/components/schemas/PlatformContractNotFoundError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "PLATFORM_PARTNER_ID_ALREADY_EXISTS": "#/components/schemas/PlatformPartnerIdAlreadyExistsError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "CreatePlatformPartnerResponse": {
        "required": [
          "partner"
        ],
        "type": "object",
        "properties": {
          "partner": {
            "$ref": "#/components/schemas/PlatformPartner",
            "description": "<p>생성된 파트너</p>\n"
          }
        },
        "description": "<p>파트너 생성 성공 응답</p>\n"
      },
      "CreatePlatformPartnersBody": {
        "required": [
          "partners"
        ],
        "type": "object",
        "properties": {
          "partners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreatePlatformPartnerBody"
            },
            "description": "<p>생성할 파트너 리스트 정보</p>\n"
          }
        },
        "description": "<p>파트너 다건 생성을 위한 입력 정보</p>\n"
      },
      "CreatePlatformPartnersError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformContractsNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/PlatformPartnerIdsAlreadyExistError"
          },
          {
            "$ref": "#/components/schemas/PlatformPartnerIdsDuplicatedError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_CONTRACTS_NOT_FOUND": "#/components/schemas/PlatformContractsNotFoundError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "PLATFORM_PARTNER_IDS_ALREADY_EXISTS": "#/components/schemas/PlatformPartnerIdsAlreadyExistError",
            "PLATFORM_PARTNER_IDS_DUPLICATED": "#/components/schemas/PlatformPartnerIdsDuplicatedError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "CreatePlatformPartnersResponse": {
        "required": [
          "partners"
        ],
        "type": "object",
        "properties": {
          "partners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformPartner"
            },
            "description": "<p>생성된 파트너 리스트</p>\n"
          }
        },
        "description": "<p>파트너 다건 생성 성공 응답</p>\n"
      },
      "CreatePlatformPayoutBody": {
        "required": [
          "filter"
        ],
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/PlatformPartnerSettlementFilterInput"
          }
        }
      },
      "CreatePlatformPayoutError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ForbiddenError"
          },
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/PlatformOngoingPayoutExistsError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "FORBIDDEN": "#/components/schemas/ForbiddenError",
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "PLATFORM_ONGOING_PAYOUT_EXISTS": "#/components/schemas/PlatformOngoingPayoutExistsError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "CreatePlatformPayoutResponse": {
        "required": [
          "payout"
        ],
        "type": "object",
        "properties": {
          "payout": {
            "$ref": "#/components/schemas/PlatformPayout"
          }
        }
      },
      "Currency": {
        "type": "string",
        "description": "<p>통화 단위</p>\n",
        "enum": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BOV",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHE",
          "CHF",
          "CHW",
          "CLF",
          "CLP",
          "CNY",
          "COP",
          "COU",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRU",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MXV",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLE",
          "SLL",
          "SOS",
          "SRD",
          "SSP",
          "STN",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "USN",
          "UYI",
          "UYU",
          "UYW",
          "UZS",
          "VED",
          "VES",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XAG",
          "XAU",
          "XBA",
          "XBB",
          "XBC",
          "XBD",
          "XCD",
          "XDR",
          "XOF",
          "XPD",
          "XPF",
          "XPT",
          "XSU",
          "XTS",
          "XUA",
          "XXX",
          "YER",
          "ZAR",
          "ZMW",
          "ZWL"
        ],
        "x-portone-cases": [
          {
            "case": "KRW",
            "x-portone-name": "대한민국 원화"
          },
          {
            "case": "USD",
            "x-portone-name": "미국 달러"
          },
          {
            "case": "JPY",
            "x-portone-name": "일본 엔화"
          },
          {
            "case": "EUR"
          },
          {
            "case": "CNY"
          },
          {
            "case": "VND"
          },
          {
            "case": "THB"
          },
          {
            "case": "SGD"
          },
          {
            "case": "AUD"
          },
          {
            "case": "HKD"
          },
          {
            "case": "AED"
          },
          {
            "case": "AFN"
          },
          {
            "case": "ALL"
          },
          {
            "case": "AMD"
          },
          {
            "case": "ANG"
          },
          {
            "case": "AOA"
          },
          {
            "case": "ARS"
          },
          {
            "case": "AWG"
          },
          {
            "case": "AZN"
          },
          {
            "case": "BAM"
          },
          {
            "case": "BBD"
          },
          {
            "case": "BDT"
          },
          {
            "case": "BGN"
          },
          {
            "case": "BHD"
          },
          {
            "case": "BIF"
          },
          {
            "case": "BMD"
          },
          {
            "case": "BND"
          },
          {
            "case": "BOB"
          },
          {
            "case": "BOV"
          },
          {
            "case": "BRL"
          },
          {
            "case": "BSD"
          },
          {
            "case": "BTN"
          },
          {
            "case": "BWP"
          },
          {
            "case": "BYN"
          },
          {
            "case": "BZD"
          },
          {
            "case": "CAD"
          },
          {
            "case": "CDF"
          },
          {
            "case": "CHE"
          },
          {
            "case": "CHF"
          },
          {
            "case": "CHW"
          },
          {
            "case": "CLF"
          },
          {
            "case": "CLP"
          },
          {
            "case": "COP"
          },
          {
            "case": "COU"
          },
          {
            "case": "CRC"
          },
          {
            "case": "CUC"
          },
          {
            "case": "CUP"
          },
          {
            "case": "CVE"
          },
          {
            "case": "CZK"
          },
          {
            "case": "DJF"
          },
          {
            "case": "DKK"
          },
          {
            "case": "DOP"
          },
          {
            "case": "DZD"
          },
          {
            "case": "EGP"
          },
          {
            "case": "ERN"
          },
          {
            "case": "ETB"
          },
          {
            "case": "FJD"
          },
          {
            "case": "FKP"
          },
          {
            "case": "GBP"
          },
          {
            "case": "GEL"
          },
          {
            "case": "GHS"
          },
          {
            "case": "GIP"
          },
          {
            "case": "GMD"
          },
          {
            "case": "GNF"
          },
          {
            "case": "GTQ"
          },
          {
            "case": "GYD"
          },
          {
            "case": "HNL"
          },
          {
            "case": "HRK"
          },
          {
            "case": "HTG"
          },
          {
            "case": "HUF"
          },
          {
            "case": "IDR"
          },
          {
            "case": "ILS"
          },
          {
            "case": "INR"
          },
          {
            "case": "IQD"
          },
          {
            "case": "IRR"
          },
          {
            "case": "ISK"
          },
          {
            "case": "JMD"
          },
          {
            "case": "JOD"
          },
          {
            "case": "KES"
          },
          {
            "case": "KGS"
          },
          {
            "case": "KHR"
          },
          {
            "case": "KMF"
          },
          {
            "case": "KPW"
          },
          {
            "case": "KWD"
          },
          {
            "case": "KYD"
          },
          {
            "case": "KZT"
          },
          {
            "case": "LAK"
          },
          {
            "case": "LBP"
          },
          {
            "case": "LKR"
          },
          {
            "case": "LRD"
          },
          {
            "case": "LSL"
          },
          {
            "case": "LYD"
          },
          {
            "case": "MAD"
          },
          {
            "case": "MDL"
          },
          {
            "case": "MGA"
          },
          {
            "case": "MKD"
          },
          {
            "case": "MMK"
          },
          {
            "case": "MNT"
          },
          {
            "case": "MOP"
          },
          {
            "case": "MRU"
          },
          {
            "case": "MUR"
          },
          {
            "case": "MVR"
          },
          {
            "case": "MWK"
          },
          {
            "case": "MXN"
          },
          {
            "case": "MXV"
          },
          {
            "case": "MYR"
          },
          {
            "case": "MZN"
          },
          {
            "case": "NAD"
          },
          {
            "case": "NGN"
          },
          {
            "case": "NIO"
          },
          {
            "case": "NOK"
          },
          {
            "case": "NPR"
          },
          {
            "case": "NZD"
          },
          {
            "case": "OMR"
          },
          {
            "case": "PAB"
          },
          {
            "case": "PEN"
          },
          {
            "case": "PGK"
          },
          {
            "case": "PHP"
          },
          {
            "case": "PKR"
          },
          {
            "case": "PLN"
          },
          {
            "case": "PYG"
          },
          {
            "case": "QAR"
          },
          {
            "case": "RON"
          },
          {
            "case": "RSD"
          },
          {
            "case": "RUB"
          },
          {
            "case": "RWF"
          },
          {
            "case": "SAR"
          },
          {
            "case": "SBD"
          },
          {
            "case": "SCR"
          },
          {
            "case": "SDG"
          },
          {
            "case": "SEK"
          },
          {
            "case": "SHP"
          },
          {
            "case": "SLE"
          },
          {
            "case": "SLL"
          },
          {
            "case": "SOS"
          },
          {
            "case": "SRD"
          },
          {
            "case": "SSP"
          },
          {
            "case": "STN"
          },
          {
            "case": "SVC"
          },
          {
            "case": "SYP"
          },
          {
            "case": "SZL"
          },
          {
            "case": "TJS"
          },
          {
            "case": "TMT"
          },
          {
            "case": "TND"
          },
          {
            "case": "TOP"
          },
          {
            "case": "TRY"
          },
          {
            "case": "TTD"
          },
          {
            "case": "TWD"
          },
          {
            "case": "TZS"
          },
          {
            "case": "UAH"
          },
          {
            "case": "UGX"
          },
          {
            "case": "USN"
          },
          {
            "case": "UYI"
          },
          {
            "case": "UYU"
          },
          {
            "case": "UYW"
          },
          {
            "case": "UZS"
          },
          {
            "case": "VED"
          },
          {
            "case": "VES"
          },
          {
            "case": "VUV"
          },
          {
            "case": "WST"
          },
          {
            "case": "XAF"
          },
          {
            "case": "XAG"
          },
          {
            "case": "XAU"
          },
          {
            "case": "XBA"
          },
          {
            "case": "XBB"
          },
          {
            "case": "XBC"
          },
          {
            "case": "XBD"
          },
          {
            "case": "XCD"
          },
          {
            "case": "XDR"
          },
          {
            "case": "XOF"
          },
          {
            "case": "XPD"
          },
          {
            "case": "XPF"
          },
          {
            "case": "XPT"
          },
          {
            "case": "XSU"
          },
          {
            "case": "XTS"
          },
          {
            "case": "XUA"
          },
          {
            "case": "XXX"
          },
          {
            "case": "YER"
          },
          {
            "case": "ZAR"
          },
          {
            "case": "ZMW"
          },
          {
            "case": "ZWL"
          }
        ]
      },
      "DateRange": {
        "required": [
          "from",
          "until"
        ],
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "description": "<p>날짜를 나타내는 문자열로, <code>yyyy-MM-dd</code> 형식을 따릅니다.</p>\n"
          },
          "until": {
            "type": "string",
            "description": "<p>날짜를 나타내는 문자열로, <code>yyyy-MM-dd</code> 형식을 따릅니다.</p>\n"
          }
        }
      },
      "DayOfWeek": {
        "type": "string",
        "description": "<p>요일을 나타내는 enum</p>\n",
        "enum": [
          "FRI",
          "MON",
          "SAT",
          "SUN",
          "THU",
          "TUE",
          "WED"
        ],
        "x-portone-cases": [
          {
            "case": "SUN"
          },
          {
            "case": "MON"
          },
          {
            "case": "TUE"
          },
          {
            "case": "WED"
          },
          {
            "case": "THU"
          },
          {
            "case": "FRI"
          },
          {
            "case": "SAT"
          }
        ]
      },
      "DeletePlatformPayoutError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ForbiddenError"
          },
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/PlatformPayoutAlreadyCompletedError"
          },
          {
            "$ref": "#/components/schemas/PlatformPayoutCreatorMismatchedError"
          },
          {
            "$ref": "#/components/schemas/PlatformPayoutNotFoundError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "FORBIDDEN": "#/components/schemas/ForbiddenError",
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "PLATFORM_PAYOUT_ALREADY_COMPLETED": "#/components/schemas/PlatformPayoutAlreadyCompletedError",
            "PLATFORM_PAYOUT_CREATOR_MISMATCHED": "#/components/schemas/PlatformPayoutCreatorMismatchedError",
            "PLATFORM_PAYOUT_NOT_FOUND": "#/components/schemas/PlatformPayoutNotFoundError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "DeletePlatformPayoutResponse": {
        "type": "object"
      },
      "DownloadPlatformPayoutSheetError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/PlatformPayoutNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformPayoutSheetNotFoundError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "PLATFORM_PAYOUT_NOT_FOUND": "#/components/schemas/PlatformPayoutNotFoundError",
            "PLATFORM_PAYOUT_SHEET_NOT_FOUND": "#/components/schemas/PlatformPayoutSheetNotFoundError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "EasyPayMethodType": {
        "type": "string",
        "description": "<p>간편 결제 수단</p>\n",
        "enum": [
          "CARD",
          "CHARGE",
          "TRANSFER"
        ],
        "x-portone-cases": [
          {
            "case": "CARD"
          },
          {
            "case": "TRANSFER"
          },
          {
            "case": "CHARGE"
          }
        ]
      },
      "EasyPayProvider": {
        "type": "string",
        "description": "<p>간편 결제 PG사</p>\n",
        "enum": [
          "APPLEPAY",
          "CHAI",
          "KAKAOPAY",
          "KPAY",
          "LGPAY",
          "LPAY",
          "NAVERPAY",
          "PAYCO",
          "PINPAY",
          "SAMSUNGPAY",
          "SKPAY",
          "SSGPAY",
          "TOSSPAY",
          "TOSS_BRANDPAY"
        ],
        "x-portone-cases": [
          {
            "case": "SAMSUNGPAY"
          },
          {
            "case": "KAKAOPAY"
          },
          {
            "case": "NAVERPAY"
          },
          {
            "case": "PAYCO"
          },
          {
            "case": "SSGPAY"
          },
          {
            "case": "CHAI"
          },
          {
            "case": "LPAY"
          },
          {
            "case": "KPAY"
          },
          {
            "case": "TOSSPAY"
          },
          {
            "case": "LGPAY"
          },
          {
            "case": "PINPAY"
          },
          {
            "case": "APPLEPAY"
          },
          {
            "case": "SKPAY"
          },
          {
            "case": "TOSS_BRANDPAY"
          }
        ]
      },
      "FailedIdentityVerification": {
        "required": [
          "status",
          "id",
          "requestedCustomer",
          "requestedAt",
          "updatedAt",
          "statusChangedAt"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "<p>본인인증 상태</p>\n"
          },
          "id": {
            "type": "string",
            "description": "<p>본인인증 건 아이디</p>\n"
          },
          "channel": {
            "$ref": "#/components/schemas/SelectedChannel",
            "description": "<p>채널 정보</p>\n"
          },
          "requestedCustomer": {
            "$ref": "#/components/schemas/IdentityVerificationRequestedCustomer",
            "description": "<p>요청 시 고객 정보</p>\n"
          },
          "customData": {
            "type": "string",
            "description": "<p>사용자 지정 데이터</p>\n"
          },
          "requestedAt": {
            "type": "string",
            "format": "date-time",
            "description": "<p>본인인증 요청 시각</p>\n"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "<p>업데이트 시각</p>\n"
          },
          "statusChangedAt": {
            "type": "string",
            "format": "date-time",
            "description": "<p>상태 업데이트 시각</p>\n"
          }
        },
        "description": "<p>본인인증 실패 상태 건</p>\n"
      },
      "ForbiddenError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "description": "<p>요청이 거절된 경우</p>\n"
      },
      "Gender": {
        "type": "string",
        "description": "<p>성별</p>\n",
        "enum": [
          "FEMALE",
          "MALE",
          "OTHER"
        ],
        "x-portone-cases": [
          {
            "case": "MALE",
            "x-portone-name": "남성"
          },
          {
            "case": "FEMALE",
            "x-portone-name": "여성"
          },
          {
            "case": "OTHER",
            "x-portone-name": "그 외"
          }
        ]
      },
      "GetAnalyticsAverageAmountChartBody": {
        "required": [
          "from",
          "until",
          "currency",
          "excludeCancelled",
          "timeGranularity"
        ],
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time",
            "description": "<p>조회할 평균 거래액 현황의 시작 시간</p>\n"
          },
          "until": {
            "type": "string",
            "format": "date-time",
            "description": "<p>조회할 평균 거래액 현황의 끝 시간</p>\n"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency",
            "description": "<p>조회할 결제 통화. 입력된 통화로 발생한 결제내역만 응답에 포함됩니다.</p>\n"
          },
          "excludeCancelled": {
            "type": "boolean",
            "description": "<p>결제취소건 제외 여부. true 이면 결제취소내역은 응답에 포함 및 반영되지 않습니다. false 또는 값을 명시하지 않은 경우 결제취소내역이 응답에 반영됩니다.</p>\n"
          },
          "timeGranularity": {
            "$ref": "#/components/schemas/AnalyticsTimeGranularity",
            "description": "<p>평균 거래액 현황 조회 단위 - 시간별 / 월별</p>\n"
          }
        },
        "description": "<p>가맹점의 평균 거래액 현황 조회를 위한 입력 정보</p>\n"
      },
      "GetAnalyticsCardChartBody": {
        "required": [
          "from",
          "until",
          "currency",
          "excludeCancelled",
          "timeGranularity"
        ],
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time",
            "description": "<p>조회할 카드결제 현황의 시작 시간</p>\n"
          },
          "until": {
            "type": "string",
            "format": "date-time",
            "description": "<p>조회할 카드결제 현황의 끝 시간</p>\n"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency",
            "description": "<p>조회할 결제 통화. 입력된 통화로 발생한 결제내역만 응답에 포함됩니다.</p>\n"
          },
          "excludeCancelled": {
            "type": "boolean",
            "description": "<p>결제취소건 제외 여부. true 이면 결제취소내역은 응답에 포함 및 반영되지 않습니다. false 또는 값을 명시하지 않은 경우 결제취소내역이 응답에 반영됩니다.</p>\n"
          },
          "timeGranularity": {
            "$ref": "#/components/schemas/AnalyticsTimeGranularity",
            "description": "<p>카드결제 현황 조회 단위 - 시간별 / 월별</p>\n"
          }
        },
        "description": "<p>가맹점의 카드결제 현황 조회를 위한 입력 정보</p>\n"
      },
      "GetAnalyticsCardChartError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ForbiddenError"
          },
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "FORBIDDEN": "#/components/schemas/ForbiddenError",
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetAnalyticsCardCompanyChartBody": {
        "required": [
          "from",
          "until",
          "currency",
          "excludeCancelled",
          "timeGranularity",
          "cardCompanies"
        ],
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time",
            "description": "<p>조회할 카드사별 결제 현황의 시작 시간</p>\n"
          },
          "until": {
            "type": "string",
            "format": "date-time",
            "description": "<p>조회할 카드사별 결제 현황의 끝 시간</p>\n"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency",
            "description": "<p>조회할 결제 통화. 입력된 통화로 발생한 결제내역만 응답에 포함됩니다.</p>\n"
          },
          "excludeCancelled": {
            "type": "boolean",
            "description": "<p>결제취소건 제외 여부. true 이면 결제취소내역은 응답에 포함 및 반영되지 않습니다. false 또는 값을 명시하지 않은 경우 결제취소내역이 응답에 반영됩니다.</p>\n"
          },
          "timeGranularity": {
            "$ref": "#/components/schemas/AnalyticsTimeGranularity",
            "description": "<p>카드사별 결제 현황 조회 단위 - 시간별 / 월별</p>\n"
          },
          "cardCompanies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardCompany"
            },
            "description": "<p>조회할 카드사</p>\n"
          }
        },
        "description": "<p>가맹점의 카드사별 결제 현황 조회를 위한 입력 정보</p>\n"
      },
      "GetAnalyticsCardCompanyChartError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ForbiddenError"
          },
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "FORBIDDEN": "#/components/schemas/ForbiddenError",
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetAnalyticsEasyPayChartBody": {
        "required": [
          "from",
          "until",
          "currency",
          "excludeCancelled",
          "timeGranularity"
        ],
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time",
            "description": "<p>조회할 간편결제 현황의 시작 시간</p>\n"
          },
          "until": {
            "type": "string",
            "format": "date-time",
            "description": "<p>조회할 간편결제 현황의 끝 시간</p>\n"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency",
            "description": "<p>조회할 결제 통화. 입력된 통화로 발생한 결제내역만 응답에 포함됩니다.</p>\n"
          },
          "excludeCancelled": {
            "type": "boolean",
            "description": "<p>결제취소건 제외 여부. true 이면 결제취소내역은 응답에 포함 및 반영되지 않습니다. false 또는 값을 명시하지 않은 경우 결제취소내역이 응답에 반영됩니다.</p>\n"
          },
          "timeGranularity": {
            "$ref": "#/components/schemas/AnalyticsTimeGranularity",
            "description": "<p>간편결제 현황 조회 단위 - 시간별 / 월별</p>\n"
          }
        },
        "description": "<p>가맹점의 간편결제 현황 조회를 위한 입력 정보</p>\n"
      },
      "GetAnalyticsEasyPayChartError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ForbiddenError"
          },
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "FORBIDDEN": "#/components/schemas/ForbiddenError",
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetAnalyticsEasyPayProviderChartBody": {
        "required": [
          "from",
          "until",
          "currency",
          "excludeCancelled",
          "timeGranularity",
          "easyPayProviders"
        ],
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time",
            "description": "<p>조회할 간편결제사별 결제 현황의 시작 시간</p>\n"
          },
          "until": {
            "type": "string",
            "format": "date-time",
            "description": "<p>조회할 간편결제사별 결제 현황의 끝 시간</p>\n"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency",
            "description": "<p>조회할 결제 통화. 입력된 통화로 발생한 결제내역만 응답에 포함됩니다.</p>\n"
          },
          "excludeCancelled": {
            "type": "boolean",
            "description": "<p>결제취소건 제외 여부. true 이면 결제취소내역은 응답에 포함 및 반영되지 않습니다. false 또는 값을 명시하지 않은 경우 결제취소내역이 응답에 반영됩니다.</p>\n"
          },
          "timeGranularity": {
            "$ref": "#/components/schemas/AnalyticsTimeGranularity",
            "description": "<p>간편결제사별 결제 현황 조회 단위 - 시간별 / 월별</p>\n"
          },
          "easyPayProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EasyPayProvider"
            },
            "description": "<p>조회할 간편결제사</p>\n"
          }
        },
        "description": "<p>가맹점의 간편결제사별 결제 현황 조회를 위한 입력 정보</p>\n"
      },
      "GetAnalyticsEasyPayProviderChartError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ForbiddenError"
          },
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "FORBIDDEN": "#/components/schemas/ForbiddenError",
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetAnalyticsPaymentChartBody": {
        "required": [
          "from",
          "until",
          "currency",
          "timeGranularity"
        ],
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time",
            "description": "<p>조회할 결제 현황의 시작 시간</p>\n"
          },
          "until": {
            "type": "string",
            "format": "date-time",
            "description": "<p>조회할 결제 현황의 끝 시간</p>\n"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency",
            "description": "<p>조회할 결제 통화. 입력된 통화로 발생한 결제내역만 응답에 포함됩니다.</p>\n"
          },
          "excludeCancelled": {
            "type": "boolean",
            "description": "<p>결제취소건 제외 여부. true 이면 결제취소내역은 응답에 포함 및 반영되지 않습니다. false 또는 값을 명시하지 않은 경우 결제취소내역이 응답에 반영됩니다.</p>\n"
          },
          "timeGranularity": {
            "$ref": "#/components/schemas/AnalyticsTimeGranularity",
            "description": "<p>결제 현황 조회 단위 - 시간별 / 월별</p>\n"
          }
        },
        "description": "<p>가맹점의 결제 현황 조회를 위한 입력 정보</p>\n"
      },
      "GetAnalyticsPaymentChartError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ForbiddenError"
          },
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "FORBIDDEN": "#/components/schemas/ForbiddenError",
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetAnalyticsPaymentMethodChartBody": {
        "required": [
          "from",
          "until",
          "currency",
          "excludeCancelled"
        ],
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time",
            "description": "<p>조회할 결제수단 현황의 시작 시간</p>\n"
          },
          "until": {
            "type": "string",
            "format": "date-time",
            "description": "<p>조회할 결제수단 현황의 끝 시간</p>\n"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency",
            "description": "<p>조회할 결제 통화. 입력된 통화로 발생한 결제내역만 응답에 포함됩니다.</p>\n"
          },
          "excludeCancelled": {
            "type": "boolean",
            "description": "<p>결제취소건 제외 여부. true 이면 결제취소내역은 응답에 포함 및 반영되지 않습니다. false 또는 값을 명시하지 않은 경우 결제취소내역이 응답에 반영됩니다.</p>\n"
          }
        },
        "description": "<p>가맹점의 결제수단 현황 조회를 위한 입력 정보</p>\n"
      },
      "GetAnalyticsPaymentMethodTrendChartBody": {
        "required": [
          "from",
          "until",
          "currency",
          "excludeCancelled",
          "timeGranularity"
        ],
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time",
            "description": "<p>조회할 결제수단 트렌드의 시작 시간</p>\n"
          },
          "until": {
            "type": "string",
            "format": "date-time",
            "description": "<p>조회할 결제수단 트렌드의 끝 시간</p>\n"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency",
            "description": "<p>조회할 결제 통화. 입력된 통화로 발생한 결제내역만 응답에 포함됩니다.</p>\n"
          },
          "excludeCancelled": {
            "type": "boolean",
            "description": "<p>결제취소건 제외 여부. true 이면 결제취소내역은 응답에 포함 및 반영되지 않습니다. false 또는 값을 명시하지 않은 경우 결제취소내역이 응답에 반영됩니다.</p>\n"
          },
          "timeGranularity": {
            "$ref": "#/components/schemas/AnalyticsTimeGranularity",
            "description": "<p>결제 결제수단 트렌드 조회 단위 - 시간별 / 월별</p>\n"
          }
        },
        "description": "<p>가맹점의 결제수단 트렌드 조회를 위한 입력 정보</p>\n"
      },
      "GetAnalyticsPgProviderChartBody": {
        "required": [
          "from",
          "until",
          "currency",
          "excludeCancelled"
        ],
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time",
            "description": "<p>조회할 결제대행사 현황의 시작 시간</p>\n"
          },
          "until": {
            "type": "string",
            "format": "date-time",
            "description": "<p>조회할 결제대행사 현황의 끝 시간</p>\n"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency",
            "description": "<p>조회할 결제 통화. 입력된 통화로 발생한 결제내역만 응답에 포함됩니다.</p>\n"
          },
          "excludeCancelled": {
            "type": "boolean",
            "description": "<p>결제취소건 제외 여부. true 이면 결제취소내역은 응답에 포함 및 반영되지 않습니다. false 또는 값을 명시하지 않은 경우 결제취소내역이 응답에 반영됩니다.</p>\n"
          }
        },
        "description": "<p>가맹점의 결제대행사 현황 조회를 위한 입력 정보</p>\n"
      },
      "GetAnalyticsPgProviderTrendChartBody": {
        "required": [
          "from",
          "until",
          "currency",
          "excludeCancelled",
          "timeGranularity",
          "pgProviders"
        ],
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time",
            "description": "<p>조회할 결제대행사별 거래 추이의 시작 시간</p>\n"
          },
          "until": {
            "type": "string",
            "format": "date-time",
            "description": "<p>조회할 결제대행사별 거래 추이의 끝 시간</p>\n"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency",
            "description": "<p>조회할 결제 통화. 입력된 통화로 발생한 결제내역만 응답에 포함됩니다.</p>\n"
          },
          "excludeCancelled": {
            "type": "boolean",
            "description": "<p>결제취소건 제외 여부. true 이면 결제취소내역은 응답에 포함 및 반영되지 않습니다. false 또는 값을 명시하지 않은 경우 결제취소내역이 응답에 반영됩니다.</p>\n"
          },
          "timeGranularity": {
            "$ref": "#/components/schemas/AnalyticsTimeGranularity",
            "description": "<p>결제 결제대행사별 거래 추이 조회 단위 - 시간별 / 월별</p>\n"
          },
          "pgProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PgProvider"
            },
            "description": "<p>조회할 결제대행사</p>\n"
          }
        },
        "description": "<p>가맹점의 결제대행사별 거래 추이 조회를 위한 입력 정보</p>\n"
      },
      "GetAverageAmountChartError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ForbiddenError"
          },
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "FORBIDDEN": "#/components/schemas/ForbiddenError",
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetIdentityVerificationError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ForbiddenError"
          },
          {
            "$ref": "#/components/schemas/IdentityVerificationNotFoundError"
          },
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "FORBIDDEN": "#/components/schemas/ForbiddenError",
            "IDENTITY_VERIFICATION_NOT_FOUND": "#/components/schemas/IdentityVerificationNotFoundError",
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetMerchantError": {
        "description": "<p>인증 정보가 올바르지 않은 경우</p>\n",
        "oneOf": [
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetPaymentMethodChartError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ForbiddenError"
          },
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "FORBIDDEN": "#/components/schemas/ForbiddenError",
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetPaymentMethodTrendChartError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ForbiddenError"
          },
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "FORBIDDEN": "#/components/schemas/ForbiddenError",
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetPgProviderChartError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ForbiddenError"
          },
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "FORBIDDEN": "#/components/schemas/ForbiddenError",
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetPgProviderTrendChartError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ForbiddenError"
          },
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "FORBIDDEN": "#/components/schemas/ForbiddenError",
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetPlatformAdditionalFeePoliciesBody": {
        "required": [
          "page"
        ],
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/PageInput",
            "description": "<p>요청할 페이지 정보</p>\n"
          },
          "filter": {
            "$ref": "#/components/schemas/PlatformAdditionalFeePolicyFilterInput",
            "description": "<p>조회할 추가 수수료 정책 조건 필터</p>\n"
          }
        },
        "description": "<p>추가 수수료 정책 다건 조회를 위한 입력 정보</p>\n"
      },
      "GetPlatformAdditionalFeePoliciesError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetPlatformAdditionalFeePoliciesResponse": {
        "required": [
          "items",
          "page"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformAdditionalFeePolicy"
            },
            "description": "<p>조회된 추가 수수료 정책 리스트</p>\n"
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo",
            "description": "<p>조회된 페이지 정보</p>\n"
          }
        },
        "description": "<p>추가 수수료 정책 다건 조회 성공 응답 정보</p>\n"
      },
      "GetPlatformAdditionalFeePolicyError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformAdditionalFeePolicyNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_ADDITIONAL_FEE_POLICY_NOT_FOUND": "#/components/schemas/PlatformAdditionalFeePolicyNotFoundError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetPlatformAdditionalFeePolicyFilterOptionsError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetPlatformAdditionalFeePolicyScheduleError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformAdditionalFeePolicyNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_ADDITIONAL_FEE_POLICY_NOT_FOUND": "#/components/schemas/PlatformAdditionalFeePolicyNotFoundError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetPlatformContractError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformContractNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_CONTRACT_NOT_FOUND": "#/components/schemas/PlatformContractNotFoundError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetPlatformContractFilterOptionsError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetPlatformContractScheduleError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformContractNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_CONTRACT_NOT_FOUND": "#/components/schemas/PlatformContractNotFoundError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetPlatformContractsBody": {
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/PageInput",
            "description": "<p>요청할 페이지 정보</p>\n"
          },
          "filter": {
            "$ref": "#/components/schemas/PlatformContractFilterInput",
            "description": "<p>조회할 계약 조건 필터</p>\n"
          }
        },
        "description": "<p>계약 다건 조회를 위한 입력 정보</p>\n"
      },
      "GetPlatformContractsError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetPlatformContractsResponse": {
        "required": [
          "items",
          "page"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformContract"
            },
            "description": "<p>조회된 계약 리스트</p>\n"
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo",
            "description": "<p>조회된 페이지 정보</p>\n"
          }
        },
        "description": "<p>계약 다건 조회 성공 응답</p>\n"
      },
      "GetPlatformDiscountSharePoliciesBody": {
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/PageInput",
            "description": "<p>요청할 페이지 정보</p>\n"
          },
          "filter": {
            "$ref": "#/components/schemas/PlatformDiscountSharePolicyFilterInput",
            "description": "<p>조회할 할인 분담 정책 조건 필터</p>\n"
          }
        },
        "description": "<p>할인 분담 정책 다건 조회를 위한 입력 정보</p>\n"
      },
      "GetPlatformDiscountSharePoliciesError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetPlatformDiscountSharePoliciesResponse": {
        "required": [
          "items",
          "page"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformDiscountSharePolicy"
            },
            "description": "<p>조회된 할인 분담 정책 리스트</p>\n"
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo",
            "description": "<p>조회된 페이지 정보</p>\n"
          }
        },
        "description": "<p>할인 분담 정책 다건 조회 성공 응답 정보</p>\n"
      },
      "GetPlatformDiscountSharePolicyError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformDiscountSharePolicyNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_DISCOUNT_SHARE_POLICY_NOT_FOUND": "#/components/schemas/PlatformDiscountSharePolicyNotFoundError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetPlatformDiscountSharePolicyFilterOptionsError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetPlatformDiscountSharePolicyScheduleError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformDiscountSharePolicyNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_DISCOUNT_SHARE_POLICY_NOT_FOUND": "#/components/schemas/PlatformDiscountSharePolicyNotFoundError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetPlatformError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetPlatformPartnerDashboardBody": {
        "type": "object",
        "properties": {
          "includeHidden": {
            "type": "boolean",
            "description": "<p>true 이면 숨김 처리된 파트너까지 조회하고, false 이면 숨김 처리되지 않은 파트너만 조회합니다. 아무 값도 넘기지 않을 경우 기본값은 false 입니다.</p>\n"
          },
          "isForTest": {
            "type": "boolean"
          }
        },
        "description": "<p>파트너 현황 조회를 위한 입력 정보</p>\n"
      },
      "GetPlatformPartnerDashboardError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetPlatformPartnerError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/PlatformPartnerNotFoundError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "PLATFORM_PARTNER_NOT_FOUND": "#/components/schemas/PlatformPartnerNotFoundError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetPlatformPartnerFilterOptionsError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetPlatformPartnerScheduleError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/PlatformPartnerNotFoundError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "PLATFORM_PARTNER_NOT_FOUND": "#/components/schemas/PlatformPartnerNotFoundError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetPlatformPartnerSettlementFilterOptionsError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetPlatformPartnerSettlementsBody": {
        "required": [
          "filter"
        ],
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/PageInput",
            "description": "<p>요청할 페이지 정보</p>\n"
          },
          "filter": {
            "$ref": "#/components/schemas/PlatformPartnerSettlementFilterInput",
            "description": "<p>조회할 정산내역 조건 필터</p>\n"
          }
        },
        "description": "<p>정산내역 다건 조회를 위한 입력 정보</p>\n"
      },
      "GetPlatformPartnerSettlementsError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetPlatformPartnerSettlementsResponse": {
        "required": [
          "items",
          "page"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformPartnerSettlement"
            },
            "description": "<p>조회된 정산내역 리스트</p>\n"
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo",
            "description": "<p>조회된 페이지 정보</p>\n"
          }
        },
        "description": "<p>정산내역 다건 조회 성공 응답 정보</p>\n"
      },
      "GetPlatformPartnersBody": {
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/PageInput",
            "description": "<p>요청할 페이지 정보</p>\n"
          },
          "filter": {
            "$ref": "#/components/schemas/PlatformPartnerFilterInput",
            "description": "<p>조회할 파트너 조건 필터</p>\n"
          }
        },
        "description": "<p>파트너 다건 조회를 위한 입력 정보</p>\n"
      },
      "GetPlatformPartnersError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetPlatformPartnersResponse": {
        "required": [
          "items",
          "page"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformPartner"
            },
            "description": "<p>조회된 파트너 리스트</p>\n"
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo",
            "description": "<p>조회된 페이지 정보</p>\n"
          }
        },
        "description": "<p>파트너 다건 조회 성공 응답 정보</p>\n"
      },
      "GetPlatformPayableSettlementDatesError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetPlatformPayableSettlementDatesResponse": {
        "required": [
          "settlementDates"
        ],
        "type": "object",
        "properties": {
          "settlementDates": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "<p>날짜를 나타내는 문자열로, <code>yyyy-MM-dd</code> 형식을 따릅니다.</p>\n"
            },
            "description": "<p>IN_PROCESS, SETTLED 상태의 Transfer가 등록되어 있는 정산일 리스트</p>\n"
          }
        },
        "description": "<p>지급 가능한 정산일 리스트 조회 성공 응답 정보</p>\n"
      },
      "GetPlatformPayoutError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/PlatformPayoutNotFoundError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "PLATFORM_PAYOUT_NOT_FOUND": "#/components/schemas/PlatformPayoutNotFoundError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetPlatformPayoutPartnerSettlementsBody": {
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/PageInput"
          }
        }
      },
      "GetPlatformPayoutPartnerSettlementsError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/PlatformPayoutNotFoundError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "PLATFORM_PAYOUT_NOT_FOUND": "#/components/schemas/PlatformPayoutNotFoundError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetPlatformPayoutSheetsError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/PlatformPayoutNotFoundError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "PLATFORM_PAYOUT_NOT_FOUND": "#/components/schemas/PlatformPayoutNotFoundError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetPlatformPayoutSheetsResponse": {
        "required": [
          "items"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PayoutSheet"
            }
          }
        }
      },
      "GetPlatformPayoutsBody": {
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/PageInput"
          },
          "filter": {
            "$ref": "#/components/schemas/PlatformPayoutFilterInput"
          }
        }
      },
      "GetPlatformPayoutsError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetPlatformPayoutsResponse": {
        "required": [
          "items",
          "page"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformPayout"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "GetPlatformTransferDashboardBody": {
        "required": [
          "settlementDate"
        ],
        "type": "object",
        "properties": {
          "settlementDate": {
            "type": "string",
            "description": "<p>날짜를 나타내는 문자열로, <code>yyyy-MM-dd</code> 형식을 따릅니다.</p>\n"
          },
          "settlementCurrencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Currency"
            }
          },
          "isForTest": {
            "type": "boolean"
          }
        }
      },
      "GetPlatformTransferDashboardError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetPlatformTransferError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/PlatformTransferNotFoundError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "PLATFORM_TRANSFER_NOT_FOUND": "#/components/schemas/PlatformTransferNotFoundError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetPlatformTransferFilterOptionsError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetPlatformTransferSummariesBody": {
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/PageInput"
          },
          "filter": {
            "$ref": "#/components/schemas/PlatformTransferFilterInput"
          }
        }
      },
      "GetPlatformTransferSummariesError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "GetPlatformTransferSummariesResponse": {
        "required": [
          "transferSummaries",
          "page"
        ],
        "type": "object",
        "properties": {
          "transferSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformTransferSummary"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "IdentityVerification": {
        "description": "<p>본인인증 건</p>\n",
        "oneOf": [
          {
            "$ref": "#/components/schemas/FailedIdentityVerification"
          },
          {
            "$ref": "#/components/schemas/ReadyIdentityVerification"
          },
          {
            "$ref": "#/components/schemas/VerifiedIdentityVerification"
          }
        ],
        "discriminator": {
          "propertyName": "status",
          "mapping": {
            "FAILED": "#/components/schemas/FailedIdentityVerification",
            "READY": "#/components/schemas/ReadyIdentityVerification",
            "VERIFIED": "#/components/schemas/VerifiedIdentityVerification"
          }
        },
        "x-portone-cases": [
          {
            "case": "READY",
            "x-portone-name": "본인인증 준비 상태 건"
          },
          {
            "case": "VERIFIED",
            "x-portone-name": "본인인증 완료 상태 건"
          },
          {
            "case": "FAILED",
            "x-portone-name": "본인인증 실패 상태 건"
          }
        ]
      },
      "IdentityVerificationAlreadySentError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "description": "<p>본인인증 건이 이미 API로 요청된 상태인 경우</p>\n"
      },
      "IdentityVerificationAlreadyVerifiedError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "description": "<p>본인인증 건이 이미 인증 완료된 상태인 경우</p>\n"
      },
      "IdentityVerificationMethod": {
        "type": "string",
        "description": "<p>본인인증 방식</p>\n",
        "enum": [
          "APP",
          "SMS"
        ],
        "x-portone-cases": [
          {
            "case": "SMS",
            "x-portone-name": "SMS"
          },
          {
            "case": "APP",
            "x-portone-name": "APP"
          }
        ]
      },
      "IdentityVerificationNotFoundError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "description": "<p>요청된 본인인증 건이 존재하지 않는 경우</p>\n"
      },
      "IdentityVerificationNotSentError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "description": "<p>본인인증 건이 API로 요청된 상태가 아닌 경우</p>\n"
      },
      "IdentityVerificationOperator": {
        "type": "string",
        "description": "<p>본인인증 통신사</p>\n",
        "enum": [
          "KT",
          "KT_MVNO",
          "LGU",
          "LGU_MVNO",
          "SKT",
          "SKT_MVNO"
        ],
        "x-portone-cases": [
          {
            "case": "SKT",
            "x-portone-name": "SKT"
          },
          {
            "case": "KT",
            "x-portone-name": "KT"
          },
          {
            "case": "LGU",
            "x-portone-name": "LGU"
          },
          {
            "case": "SKT_MVNO",
            "x-portone-name": "SKT 알뜰폰"
          },
          {
            "case": "KT_MVNO",
            "x-portone-name": "KT 알뜰폰"
          },
          {
            "case": "LGU_MVNO",
            "x-portone-name": "LGU 알뜰폰"
          }
        ]
      },
      "IdentityVerificationRequestedCustomer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "<p>식별 아이디</p>\n"
          },
          "name": {
            "type": "string",
            "description": "<p>이름</p>\n"
          },
          "phoneNumber": {
            "type": "string",
            "description": "<p>핸드폰 번호. 특수 문자(-) 없이 숫자로만 이루어진 번호 형식</p>\n"
          }
        },
        "description": "<p>요청 시 고객 정보</p>\n"
      },
      "IdentityVerificationVerifiedCustomer": {
        "required": [
          "name",
          "birthDate",
          "gender",
          "ci",
          "di"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "<p>식별 아이디</p>\n"
          },
          "name": {
            "type": "string",
            "description": "<p>이름</p>\n"
          },
          "phoneNumber": {
            "type": "string",
            "description": "<p>핸드폰 번호. 특수 문자(-) 없이 숫자로만 이루어진 번호 형식</p>\n"
          },
          "birthDate": {
            "type": "string",
            "description": "<p>생년월일 (yyyy-MM-dd)</p>\n"
          },
          "gender": {
            "$ref": "#/components/schemas/Gender",
            "description": "<p>성별</p>\n"
          },
          "isForeigner": {
            "type": "boolean",
            "description": "<p>외국인 여부</p>\n"
          },
          "ci": {
            "type": "string",
            "description": "<p>ci (개인 고유 식별키)</p>\n"
          },
          "di": {
            "type": "string",
            "description": "<p>di (사이트별 개인 고유 식별키)</p>\n"
          }
        },
        "description": "<p>인증된 고객 정보</p>\n"
      },
      "InvalidRequestError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "description": "<p>요청된 입력 정보가 유효하지 않은 경우. 허가되지 않은 값, 올바르지 않은 형식의 요청 등이 모두 해당됩니다.</p>\n"
      },
      "LoginViaApiKeyBody": {
        "required": [
          "apiKey"
        ],
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "<p>발급받은 API key</p>\n"
          }
        },
        "description": "<p>API key 로그인을 위한 입력 정보</p>\n"
      },
      "LoginViaApiKeyError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "LoginViaApiKeyResponse": {
        "required": [
          "accessToken",
          "refreshToken"
        ],
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "<p>인증에 사용하는 엑세스 토큰. 하루의 유효기간을 가지고 있습니다.</p>\n"
          },
          "refreshToken": {
            "type": "string",
            "description": "<p>토큰 재발급 및 유효기간 연장을 위해 사용하는 리프레시 토큰. 일주일의 유효기간을 가지고 있으며, 리프레시 토큰을 통해 유효기간이 연장된 새로운 엑세스 토큰을 발급받을 수 있습니다.</p>\n"
          }
        },
        "description": "<p>API key 로그인 성공 응답</p>\n"
      },
      "Merchant": {
        "required": [
          "id",
          "graphqlId",
          "analytics"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "<p>가맹점 아이디</p>\n"
          },
          "graphqlId": {
            "type": "string"
          },
          "analytics": {
            "$ref": "#/components/schemas/Analytics"
          }
        },
        "description": "<p>가맹점 정보</p>\n"
      },
      "MonthDay": {
        "required": [
          "month",
          "day"
        ],
        "type": "object",
        "properties": {
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "day": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "<p>월 및 일자 정보</p>\n"
      },
      "PageInfo": {
        "required": [
          "number",
          "size",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "format": "int32",
            "description": "<p>요청된 페이지 번호</p>\n"
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "description": "<p>요청된 페이지 당 객체 수</p>\n"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "description": "<p>실제 반환된 객체 수</p>\n"
          }
        },
        "description": "<p>반환된 페이지 결과 정보</p>\n"
      },
      "PageInput": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "format": "int32",
            "description": "<p>페이지 번호. 0 부터 시작합니다.</p>\n"
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "description": "<p>각 페이지 당 포함할 객체 수</p>\n"
          }
        },
        "description": "<p>다건 조회 API 에 사용되는 페이지 입력 정보</p>\n"
      },
      "PaymentMethodType": {
        "type": "string",
        "enum": [
          "CARD",
          "EASY_PAY",
          "GIFT_CERTIFICATE",
          "MOBILE",
          "TRANSFER",
          "VIRTUAL_ACCOUNT"
        ],
        "x-portone-cases": [
          {
            "case": "CARD"
          },
          {
            "case": "TRANSFER"
          },
          {
            "case": "VIRTUAL_ACCOUNT"
          },
          {
            "case": "GIFT_CERTIFICATE"
          },
          {
            "case": "MOBILE"
          },
          {
            "case": "EASY_PAY"
          }
        ]
      },
      "PaymentPreRegistrationAlreadyExistsError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PaymentPreRegistrationNotFoundError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PayoutPartnerSettlementsResponse": {
        "required": [
          "items",
          "page"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformPayoutPartnerSettlement"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "PayoutSheet": {
        "required": [
          "payoutId",
          "settlementCurrency",
          "payoutCurrency",
          "name"
        ],
        "type": "object",
        "properties": {
          "payoutId": {
            "type": "string"
          },
          "contractId": {
            "type": "string"
          },
          "settlementCurrency": {
            "$ref": "#/components/schemas/Currency"
          },
          "payoutCurrency": {
            "$ref": "#/components/schemas/Currency"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "PgCompany": {
        "type": "string",
        "description": "<p>PG사</p>\n",
        "enum": [
          "ALIPAY",
          "BLUEWALNUT",
          "CHAI",
          "DANAL",
          "DAOU",
          "EXIMBAY",
          "GALAXIA",
          "INICIS",
          "KAKAO",
          "KAKAOPAY",
          "KCP",
          "KICC",
          "KSNET",
          "MOBILIANS",
          "NAVERCO",
          "NAVERPAY",
          "NICE",
          "PAYCO",
          "PAYMENTWALL",
          "PAYPAL",
          "PAYPLE",
          "SETTLE",
          "SMARTRO",
          "SMILEPAY",
          "SYRUP",
          "TOSSPAY",
          "TOSSPAYMENTS"
        ],
        "x-portone-cases": [
          {
            "case": "INICIS"
          },
          {
            "case": "NICE"
          },
          {
            "case": "KCP"
          },
          {
            "case": "DANAL"
          },
          {
            "case": "TOSSPAYMENTS"
          },
          {
            "case": "MOBILIANS"
          },
          {
            "case": "NAVERCO"
          },
          {
            "case": "KICC"
          },
          {
            "case": "SMARTRO"
          },
          {
            "case": "DAOU"
          },
          {
            "case": "BLUEWALNUT"
          },
          {
            "case": "PAYPAL"
          },
          {
            "case": "ALIPAY"
          },
          {
            "case": "EXIMBAY"
          },
          {
            "case": "PAYMENTWALL"
          },
          {
            "case": "SETTLE"
          },
          {
            "case": "GALAXIA"
          },
          {
            "case": "NAVERPAY"
          },
          {
            "case": "KAKAOPAY"
          },
          {
            "case": "SMILEPAY"
          },
          {
            "case": "TOSSPAY"
          },
          {
            "case": "CHAI"
          },
          {
            "case": "PAYCO"
          },
          {
            "case": "PAYPLE"
          },
          {
            "case": "SYRUP"
          },
          {
            "case": "KAKAO"
          },
          {
            "case": "KSNET"
          }
        ]
      },
      "PgProvider": {
        "type": "string",
        "description": "<p>PG사 결제 모듈</p>\n",
        "enum": [
          "ALIPAY",
          "BLUEWALNUT",
          "CHAI",
          "DANAL",
          "DANAL_TPAY",
          "DAOU",
          "EXIMBAY",
          "GALAXIA",
          "HTML5_INICIS",
          "INICIS",
          "INICIS_UNIFIED",
          "JTNET",
          "KAKAO",
          "KAKAOPAY",
          "KCP",
          "KCP_BILLING",
          "KCP_DIRECT",
          "KCP_QUICK",
          "KICC",
          "KSNET",
          "MOBILIANS",
          "NAVERCO",
          "NAVERPAY",
          "NICE",
          "NICE_V2",
          "PAYCO",
          "PAYMENTWALL",
          "PAYPAL",
          "PAYPAL_V2",
          "PAYPLE",
          "PINPAY",
          "SETTLE",
          "SETTLE_ACC",
          "SETTLE_FIRM",
          "SMARTRO",
          "SMARTRO_V2",
          "SMILEPAY",
          "SYRUP",
          "TOSSPAY",
          "TOSSPAYMENTS",
          "TOSS_BRANDPAY",
          "UPLUS"
        ],
        "x-portone-cases": [
          {
            "case": "HTML5_INICIS"
          },
          {
            "case": "PAYPAL"
          },
          {
            "case": "PAYPAL_V2"
          },
          {
            "case": "INICIS"
          },
          {
            "case": "DANAL"
          },
          {
            "case": "NICE"
          },
          {
            "case": "DANAL_TPAY"
          },
          {
            "case": "JTNET"
          },
          {
            "case": "UPLUS"
          },
          {
            "case": "NAVERPAY"
          },
          {
            "case": "KAKAO"
          },
          {
            "case": "SETTLE"
          },
          {
            "case": "KCP"
          },
          {
            "case": "MOBILIANS"
          },
          {
            "case": "KAKAOPAY"
          },
          {
            "case": "NAVERCO"
          },
          {
            "case": "SYRUP"
          },
          {
            "case": "KICC"
          },
          {
            "case": "EXIMBAY"
          },
          {
            "case": "SMILEPAY"
          },
          {
            "case": "PAYCO"
          },
          {
            "case": "KCP_BILLING"
          },
          {
            "case": "ALIPAY"
          },
          {
            "case": "PAYPLE"
          },
          {
            "case": "CHAI"
          },
          {
            "case": "BLUEWALNUT"
          },
          {
            "case": "SMARTRO"
          },
          {
            "case": "SMARTRO_V2"
          },
          {
            "case": "PAYMENTWALL"
          },
          {
            "case": "TOSSPAYMENTS"
          },
          {
            "case": "KCP_QUICK"
          },
          {
            "case": "DAOU"
          },
          {
            "case": "GALAXIA"
          },
          {
            "case": "TOSSPAY"
          },
          {
            "case": "KCP_DIRECT"
          },
          {
            "case": "SETTLE_ACC"
          },
          {
            "case": "SETTLE_FIRM"
          },
          {
            "case": "INICIS_UNIFIED"
          },
          {
            "case": "KSNET"
          },
          {
            "case": "PINPAY"
          },
          {
            "case": "NICE_V2"
          },
          {
            "case": "TOSS_BRANDPAY"
          }
        ]
      },
      "PgProviderError": {
        "required": [
          "type",
          "pgCode",
          "pgMessage"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "pgCode": {
            "type": "string"
          },
          "pgMessage": {
            "type": "string"
          }
        },
        "description": "<p>PG사에서 오류가 발생한 경우</p>\n"
      },
      "Platform": {
        "required": [
          "merchantId",
          "graphqlId",
          "roundType",
          "settlementFormula"
        ],
        "type": "object",
        "properties": {
          "merchantId": {
            "type": "string",
            "description": "<p>해당 플랫폼의 가맹점 아이디</p>\n"
          },
          "graphqlId": {
            "type": "string"
          },
          "roundType": {
            "$ref": "#/components/schemas/PlatformRoundType",
            "description": "<p>파트너 정산금액의 소수점 처리 방식</p>\n"
          },
          "settlementFormula": {
            "$ref": "#/components/schemas/PlatformSettlementFormula",
            "description": "<p>수수료 및 할인 분담 정책 관련 계산식</p>\n"
          }
        },
        "description": "<p>가맹점의 플랫폼 기능 관련 정보</p>\n"
      },
      "PlatformAccount": {
        "required": [
          "bank",
          "currency",
          "number",
          "holder",
          "status"
        ],
        "type": "object",
        "properties": {
          "bank": {
            "$ref": "#/components/schemas/Bank",
            "description": "<p>은행</p>\n"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency",
            "description": "<p>정산에 사용할 통화</p>\n"
          },
          "number": {
            "type": "string",
            "description": "<p>계좌번호</p>\n"
          },
          "holder": {
            "type": "string",
            "description": "<p>예금주명</p>\n"
          },
          "status": {
            "$ref": "#/components/schemas/PlatformAccountStatus",
            "description": "<p>계좌 상태</p>\n"
          }
        },
        "description": "<p>플랫폼 정산 계좌\n<code>currency</code> 가 KRW 일 경우 예금주 조회 API 를 통해 올바른 계좌인지 검증합니다. 그 외의 화폐일 경우 따로 검증하지는 않습니다.</p>\n"
      },
      "PlatformAccountStatus": {
        "type": "string",
        "description": "<p>플랫폼 계좌 상태</p>\n",
        "enum": [
          "EXPIRED",
          "UNKNOWN",
          "VERIFIED",
          "VERIFYING",
          "VERIFY_FAILED"
        ],
        "x-portone-cases": [
          {
            "case": "VERIFYING",
            "x-portone-name": "계좌 인증 중"
          },
          {
            "case": "VERIFIED",
            "x-portone-name": "계좌 인증 완료됨"
          },
          {
            "case": "VERIFY_FAILED",
            "x-portone-name": "계좌 인증 실패함"
          },
          {
            "case": "EXPIRED",
            "x-portone-name": "계좌 인증 만료됨"
          },
          {
            "case": "UNKNOWN",
            "x-portone-name": "알 수 없는 상태"
          }
        ]
      },
      "PlatformAdditionalFeePoliciesNotFoundError": {
        "required": [
          "type",
          "ids",
          "graphqlIds"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "graphqlIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformAdditionalFeePolicy": {
        "required": [
          "id",
          "graphqlId",
          "fee",
          "vatPayer",
          "isHidden",
          "appliedAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "graphqlId": {
            "type": "string"
          },
          "fee": {
            "$ref": "#/components/schemas/PlatformFee",
            "description": "<p>책정 수수료</p>\n"
          },
          "memo": {
            "type": "string",
            "description": "<p>해당 추가 수수료 정책에 대한 메모</p>\n"
          },
          "vatPayer": {
            "$ref": "#/components/schemas/PlatformPayer",
            "description": "<p>부가세를 부담할 주체</p>\n"
          },
          "isHidden": {
            "type": "boolean",
            "description": "<p>숨김 여부</p>\n"
          },
          "appliedAt": {
            "type": "string",
            "format": "date-time",
            "description": "<p>변경 적용 시점</p>\n"
          }
        },
        "description": "<p>추가 수수료 정책는 가맹점의 주문건에 대한 중개수수료에 별도로 추가로 부여되는 수수료입니다. 대표적인 사용 예시로 풀필먼트 수수료, 로켓배송 수수료, 마케팅 채널 수수료등이 있습니다.</p>\n"
      },
      "PlatformAdditionalFeePolicyAlreadyExistsError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformAdditionalFeePolicyFilterInput": {
        "type": "object",
        "properties": {
          "includeHidden": {
            "type": "boolean",
            "description": "<p>true 이면 숨김 처리된 추가 수수료 정책까지 조회하고, false 이면 숨김 처리되지 않은 추가 수수료 정책만 조회합니다. 아무 값도 넘기지 않을 경우 기본값은 false 입니다.</p>\n"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "vatPayers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformPayer"
            }
          }
        },
        "description": "<p>추가 수수료 정책 다건 조회를 위한 필터 조건</p>\n"
      },
      "PlatformAdditionalFeePolicyFilterOptions": {
        "required": [
          "ids"
        ],
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "<p>조회된 추가 수수료 정책 id 리스트</p>\n"
          }
        },
        "description": "<p>추가 수수료 정책 필터 옵션 조회 성공 응답 정보</p>\n"
      },
      "PlatformAdditionalFeePolicyNotFoundError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformAdditionalFeePolicyScheduleAlreadyExistsError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformAdditionalFixedAmountFeeCurrencyAndSettlementCurrencyMismatchedError": {
        "required": [
          "type",
          "id",
          "graphqlId",
          "feeCurrency",
          "settlementCurrency"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "graphqlId": {
            "type": "string"
          },
          "feeCurrency": {
            "$ref": "#/components/schemas/Currency"
          },
          "settlementCurrency": {
            "$ref": "#/components/schemas/Currency"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformCancellableAmountExceededError": {
        "required": [
          "type",
          "cancellableAmount"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "cancellableAmount": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformCancellableDiscountAmountExceededError": {
        "required": [
          "type",
          "discountSharePolicyId",
          "discountSharePolicyGraphqlId",
          "cancellableAmount"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "discountSharePolicyId": {
            "type": "string"
          },
          "discountSharePolicyGraphqlId": {
            "type": "string"
          },
          "cancellableAmount": {
            "type": "integer",
            "format": "int64"
          },
          "productId": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformCancellableProductQuantityExceededError": {
        "required": [
          "type",
          "productId",
          "cancellableQuantity"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "cancellableQuantity": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformCancellationAndPaymentTypeMismatchedError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformCancellationNotFoundError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformCompletedPayout": {
        "required": [
          "status",
          "id",
          "graphqlId",
          "creatorId",
          "settlementDate",
          "summary",
          "filter",
          "createdAt",
          "paidOutAt"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "graphqlId": {
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          },
          "settlementDate": {
            "type": "string",
            "description": "<p>날짜를 나타내는 문자열로, <code>yyyy-MM-dd</code> 형식을 따릅니다.</p>\n"
          },
          "summary": {
            "$ref": "#/components/schemas/PlatformPayoutSummary"
          },
          "filter": {
            "$ref": "#/components/schemas/PlatformPartnerSettlementFilter"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "paidOutAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PlatformContract": {
        "required": [
          "id",
          "graphqlId",
          "platformFee",
          "settlementCycle",
          "platformFeeVatPayer",
          "isHidden",
          "appliedAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "<p>계약 고유 아이디</p>\n"
          },
          "graphqlId": {
            "type": "string"
          },
          "memo": {
            "type": "string",
            "description": "<p>계약 내부 표기를 위한 메모</p>\n"
          },
          "platformFee": {
            "$ref": "#/components/schemas/PlatformFee",
            "description": "<p>중개수수료</p>\n"
          },
          "settlementCycle": {
            "$ref": "#/components/schemas/PlatformSettlementCycle",
            "description": "<p>정산 주기</p>\n"
          },
          "platformFeeVatPayer": {
            "$ref": "#/components/schemas/PlatformPayer",
            "description": "<p>중개수수료에 대한 부가세 부담 주체</p>\n"
          },
          "isHidden": {
            "type": "boolean",
            "description": "<p>숨김 여부</p>\n"
          },
          "appliedAt": {
            "type": "string",
            "format": "date-time",
            "description": "<p>변경 적용 시점</p>\n"
          }
        },
        "description": "<p>계약은 플랫폼 가맹점이 파트너에게 정산해줄 대금과 정산일을 계산하는 데 적용되는 정보입니다.\n가맹점의 플랫폼에서 재화 및 서비스를 판매하기 위한 중개수수료와 판매금에 대한 정산일로 구성되어 있습니다.</p>\n"
      },
      "PlatformContractAlreadyExistsError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformContractFilterInput": {
        "type": "object",
        "properties": {
          "platformFees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformFeeInput"
            },
            "description": "<p>하나 이상의 값이 존재하는 경우 해당 리스트에 포함되는 중개 수수료를 가진 계약만 조회합니다.</p>\n"
          },
          "platformFeePayers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformPayer"
            },
            "description": "<p>하나 이상의 값이 존재하는 경우 해당 리스트에 포함되는 수수료 부담 주체를 가진 계약만 조회합니다.</p>\n"
          },
          "cycleTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformSettlementCycleType"
            },
            "description": "<p>하나 이상의 값이 존재하는 경우 해당 리스트에 포함되는 정산 주기 계산 방식을 가진 계약만 조회합니다.</p>\n"
          },
          "datePolicies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformSettlementCycleDatePolicy"
            },
            "description": "<p>하나 이상의 값이 존재하는 경우 해당 리스트에 포함되는 정산 기준일을 가진 계약만 조회합니다.</p>\n"
          },
          "includeHidden": {
            "type": "boolean",
            "description": "<p>true 이면 숨김 처리된 계약까지 조회하고, false 이면 숨김 처리되지 않은 계약만 조회합니다. 아무 값도 넘기지 않을 경우 기본값은 false 입니다.</p>\n"
          },
          "keyword": {
            "$ref": "#/components/schemas/PlatformContractFilterInputKeyword",
            "description": "<p>검색 키워드 적용을 위한 옵션으로, 명시된 키워드를 포함하는 계약만 조회합니다. 하나의 하위 필드에만 값을 명시하여 요청합니다.</p>\n"
          }
        },
        "description": "<p>계약 다건 조회를 위한 필터 조건</p>\n"
      },
      "PlatformContractFilterInputKeyword": {
        "type": "object",
        "properties": {
          "all": {
            "type": "string",
            "description": "<p>해당 키워드가 포함된 정보를 가진 계약만 조회합니다.</p>\n"
          },
          "id": {
            "type": "string",
            "description": "<p>해당 값이 포함된 id 를 가진 계약만 조회합니다.</p>\n"
          },
          "memo": {
            "type": "string",
            "description": "<p>해당 값이 포함된 메모를 가진 계약만 조회합니다.</p>\n"
          }
        },
        "description": "<p>검색 키워드 적용을 위한 옵션으로, 명시된 키워드를 포함하는 계약만 조회합니다. 하나의 하위 필드에만 값을 명시하여 요청합니다.</p>\n"
      },
      "PlatformContractFilterOptions": {
        "required": [
          "platformFees"
        ],
        "type": "object",
        "properties": {
          "platformFees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformFee"
            },
            "description": "<p>조회된 중개 수수료 리스트</p>\n"
          }
        },
        "description": "<p>계약 필터 옵션 조회 성공 응답 정보</p>\n"
      },
      "PlatformContractNotFoundError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformContractPlatformFixedAmountFeeCurrencyAndSettlementCurrencyMismatchedError": {
        "required": [
          "type",
          "id",
          "graphqlId",
          "feeCurrency",
          "settlementCurrency"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "graphqlId": {
            "type": "string"
          },
          "feeCurrency": {
            "$ref": "#/components/schemas/Currency"
          },
          "settlementCurrency": {
            "$ref": "#/components/schemas/Currency"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformContractScheduleAlreadyExistsError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformContractsNotFoundError": {
        "required": [
          "type",
          "ids",
          "graphqlIds"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "graphqlIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformDiscountCancelExceededOrderCancelAmountError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformDiscountExceededOrderAmountError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformDiscountSharePoliciesNotFoundError": {
        "required": [
          "type",
          "ids",
          "graphqlIds"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "graphqlIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformDiscountSharePolicy": {
        "required": [
          "id",
          "graphqlId",
          "partnerShareRate",
          "isHidden",
          "appliedAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "graphqlId": {
            "type": "string"
          },
          "partnerShareRate": {
            "type": "integer",
            "format": "int32",
            "description": "<p>할인 분담율. 파트너가 분담할 할인금액의 비율을 의미하는 밀리 퍼센트 단위 (10^-5) 의 음이 아닌 정수이며, 파트너가 부담할 금액은 <code>할인금액 * partnerShareRate * 10^5</code> 로 책정합니다.</p>\n"
          },
          "memo": {
            "type": "string",
            "description": "<p>해당 할인 분담에 대한 메모</p>\n"
          },
          "isHidden": {
            "type": "boolean",
            "description": "<p>숨김 여부</p>\n"
          },
          "appliedAt": {
            "type": "string",
            "format": "date-time",
            "description": "<p>변경 적용 시점</p>\n"
          }
        },
        "description": "<p>할인 분담은 가맹점의 주문건에 쿠폰 및 포인트와 같은 할인금액이 적용될 때, 파트너 정산 시 할인금액에 대한 분담 정책을 가지는 객체입니다.\n할인 유형에 대한 아이디와 메모, 그리고 파트너 분담율을 가집니다.</p>\n"
      },
      "PlatformDiscountSharePolicyAlreadyExistsError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformDiscountSharePolicyFilterInput": {
        "type": "object",
        "properties": {
          "includeHidden": {
            "type": "boolean",
            "description": "<p>true 이면 숨김 처리된 할인 분담까지 조회하고, false 이면 숨김 처리되지 않은 할인 분담만 조회합니다. 아무 값도 넘기지 않을 경우 기본값은 false 입니다.</p>\n"
          },
          "partnerShareRates": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "<p>하나 이상의 값이 존재하는 경우 해당 리스트에 포함되는 파트너 분담율을 가진 할인 분담만 조회합니다.</p>\n"
          },
          "keyword": {
            "$ref": "#/components/schemas/PlatformDiscountSharePolicyFilterInputKeyword",
            "description": "<p>검색 키워드 적용을 위한 옵션으로, 명시된 키워드를 포함하는 파트너만 조회합니다. 하위 필드는 명시된 값 중 한 가지만 적용됩니다.</p>\n"
          }
        },
        "description": "<p>할인 분담 정책 다건 조회를 위한 필터 조건</p>\n"
      },
      "PlatformDiscountSharePolicyFilterInputKeyword": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "<p>해당 값이 포함된 id 를 가진 할인 분담만 조회합니다.</p>\n"
          },
          "memo": {
            "type": "string",
            "description": "<p>해당 값이 포함된 메모를 가진 할인 분담만 조회합니다.</p>\n"
          },
          "all": {
            "type": "string",
            "description": "<p>해당 키워드가 포함된 정보를 가진 할인 분담만 조회합니다.</p>\n"
          }
        },
        "description": "<p>검색 키워드 적용을 위한 옵션으로, 명시된 키워드를 포함하는 파트너만 조회합니다. 하위 필드는 명시된 값 중 한 가지만 적용됩니다.</p>\n"
      },
      "PlatformDiscountSharePolicyFilterOptions": {
        "required": [
          "partnerShareRates"
        ],
        "type": "object",
        "properties": {
          "partnerShareRates": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "<p>조회된 파트너 분담율 리스트</p>\n"
          }
        },
        "description": "<p>할인 분담 정책 필터 옵션 조회 성공 응답 정보</p>\n"
      },
      "PlatformDiscountSharePolicyIdDuplicatedError": {
        "required": [
          "type",
          "id",
          "graphqlId"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "graphqlId": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformDiscountSharePolicyNotFoundError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformDiscountSharePolicyScheduleAlreadyExistsError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformExternalPayment": {
        "required": [
          "type",
          "id",
          "currency"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "orderName": {
            "type": "string"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "method": {
            "$ref": "#/components/schemas/PlatformPaymentMethod"
          },
          "paidAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PlatformFee": {
        "description": "<p>플랫폼 중개수수료 정보</p>\n",
        "oneOf": [
          {
            "$ref": "#/components/schemas/PlatformFixedAmountFee"
          },
          {
            "$ref": "#/components/schemas/PlatformFixedRateFee"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "FIXED_AMOUNT": "#/components/schemas/PlatformFixedAmountFee",
            "FIXED_RATE": "#/components/schemas/PlatformFixedRateFee"
          }
        },
        "x-portone-cases": [
          {
            "case": "FIXED_RATE",
            "x-portone-name": "정률 수수료로, 총 금액에 정해진 비율을 곱한 만큼의 수수료를 책정합니다."
          },
          {
            "case": "FIXED_AMOUNT",
            "x-portone-name": "정액 수수료로, 총 금액에 무관하게 정해진 수수료 금액을 책정합니다."
          }
        ]
      },
      "PlatformFeeInput": {
        "type": "object",
        "properties": {
          "fixedRate": {
            "type": "integer",
            "format": "int32",
            "description": "<p>정률 수수료로, 총 금액에 정해진 비율을 곱한 만큼의 수수료를 책정합니다.</p>\n"
          },
          "fixedAmount": {
            "type": "integer",
            "format": "int64",
            "description": "<p>정액 수수료로, 총 금액에 무관하게 정해진 수수료 금액을 책정합니다.</p>\n"
          }
        },
        "description": "<p>수수료 계산 방식을 특정하기 위한 입력 정보입니다.\n정률 수수료를 설정하고 싶은 경우 <code>fixedRate</code> 필드에, 정액 수수료를 설정하고 싶은 경우 <code>fixedAmount</code> 필드에 값을 명시해 요청합니다.\n두 필드 모두 값이 들어있지 않은 경우 요청이 거절됩니다.</p>\n"
      },
      "PlatformFixedAmountFee": {
        "required": [
          "type",
          "amount"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int64",
            "description": "<p>고정된 수수료 금액</p>\n"
          }
        },
        "description": "<p>정액 수수료로, 총 금액에 무관하게 정해진 수수료 금액을 책정합니다.</p>\n"
      },
      "PlatformFixedRateFee": {
        "required": [
          "type",
          "rate"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "rate": {
            "type": "integer",
            "format": "int32",
            "description": "<p>총 금액 대비 수수료 비율을 의미하며, 밀리 퍼센트 단위 (10^-5) 의 음이 아닌 정수입니다. <code>총 금액 * rate * 10^5</code> (<code>rate * 10^3 %</code>) 만큼 수수료를 책정합니다.</p>\n"
          }
        },
        "description": "<p>정률 수수료로, 총 금액에 정해진 비율을 곱한 만큼의 수수료를 책정합니다.</p>\n"
      },
      "PlatformInvalidSettlementFormulaError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "platformFee": {
            "$ref": "#/components/schemas/PlatformSettlementFormulaError"
          },
          "discountShare": {
            "$ref": "#/components/schemas/PlatformSettlementFormulaError"
          },
          "additionalFee": {
            "$ref": "#/components/schemas/PlatformSettlementFormulaError"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformManualTransfer": {
        "required": [
          "type",
          "id",
          "graphqlId",
          "partner",
          "status",
          "settlementDate",
          "settlementCurrency",
          "isForTest",
          "settlementAmount"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "graphqlId": {
            "type": "string"
          },
          "partner": {
            "$ref": "#/components/schemas/PlatformPartner"
          },
          "status": {
            "$ref": "#/components/schemas/PlatformTransferStatus"
          },
          "memo": {
            "type": "string"
          },
          "settlementDate": {
            "type": "string",
            "description": "<p>날짜를 나타내는 문자열로, <code>yyyy-MM-dd</code> 형식을 따릅니다.</p>\n"
          },
          "settlementCurrency": {
            "$ref": "#/components/schemas/Currency"
          },
          "payoutId": {
            "type": "string"
          },
          "payoutGraphqlId": {
            "type": "string"
          },
          "isForTest": {
            "type": "boolean"
          },
          "settlementAmount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PlatformManualTransferSummary": {
        "required": [
          "type",
          "id",
          "graphqlId",
          "partner",
          "status",
          "settlementDate",
          "settlementCurrency",
          "isForTest",
          "settlementAmount"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "graphqlId": {
            "type": "string"
          },
          "partner": {
            "$ref": "#/components/schemas/PlatformTransferSummaryPartner"
          },
          "status": {
            "$ref": "#/components/schemas/PlatformTransferStatus"
          },
          "memo": {
            "type": "string"
          },
          "settlementDate": {
            "type": "string",
            "description": "<p>날짜를 나타내는 문자열로, <code>yyyy-MM-dd</code> 형식을 따릅니다.</p>\n"
          },
          "settlementCurrency": {
            "$ref": "#/components/schemas/Currency"
          },
          "isForTest": {
            "type": "boolean"
          },
          "settlementAmount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PlatformNotEnabledError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "description": "<p>플랫폼 기능이 활성화되지 않아 요청을 처리할 수 없는 경우</p>\n"
      },
      "PlatformOngoingPayout": {
        "required": [
          "status",
          "id",
          "graphqlId",
          "creatorId",
          "settlementDate",
          "summary",
          "filter",
          "createdAt"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "graphqlId": {
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          },
          "settlementDate": {
            "type": "string",
            "description": "<p>날짜를 나타내는 문자열로, <code>yyyy-MM-dd</code> 형식을 따릅니다.</p>\n"
          },
          "summary": {
            "$ref": "#/components/schemas/PlatformPayoutSummary"
          },
          "filter": {
            "$ref": "#/components/schemas/PlatformPartnerSettlementFilter"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PlatformOngoingPayoutExistsError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformOrderCancelTransfer": {
        "required": [
          "type",
          "id",
          "graphqlId",
          "partner",
          "status",
          "settlementDate",
          "settlementCurrency",
          "isForTest",
          "amount",
          "contract",
          "payment",
          "settlementStartDate",
          "orderLines",
          "additionalFees",
          "discounts",
          "cancellation"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "graphqlId": {
            "type": "string"
          },
          "partner": {
            "$ref": "#/components/schemas/PlatformPartner"
          },
          "status": {
            "$ref": "#/components/schemas/PlatformTransferStatus"
          },
          "memo": {
            "type": "string"
          },
          "settlementDate": {
            "type": "string",
            "description": "<p>날짜를 나타내는 문자열로, <code>yyyy-MM-dd</code> 형식을 따릅니다.</p>\n"
          },
          "settlementCurrency": {
            "$ref": "#/components/schemas/Currency"
          },
          "payoutId": {
            "type": "string"
          },
          "payoutGraphqlId": {
            "type": "string"
          },
          "isForTest": {
            "type": "boolean"
          },
          "amount": {
            "$ref": "#/components/schemas/PlatformOrderSettlementAmount"
          },
          "contract": {
            "$ref": "#/components/schemas/PlatformContract"
          },
          "payment": {
            "$ref": "#/components/schemas/PlatformPayment"
          },
          "settlementStartDate": {
            "type": "string",
            "description": "<p>날짜를 나타내는 문자열로, <code>yyyy-MM-dd</code> 형식을 따릅니다.</p>\n"
          },
          "orderLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformOrderTransferOrderLine"
            }
          },
          "additionalFees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformOrderTransferAdditionalFee"
            }
          },
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformOrderTransferDiscount"
            }
          },
          "cancellation": {
            "$ref": "#/components/schemas/PlatformOrderTransferCancellation"
          }
        }
      },
      "PlatformOrderCancelTransferSummary": {
        "required": [
          "type",
          "id",
          "graphqlId",
          "storeId",
          "partner",
          "status",
          "settlementDate",
          "settlementCurrency",
          "isForTest",
          "amount",
          "payment",
          "settlementStartDate"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "graphqlId": {
            "type": "string"
          },
          "storeId": {
            "type": "string"
          },
          "partner": {
            "$ref": "#/components/schemas/PlatformTransferSummaryPartner"
          },
          "status": {
            "$ref": "#/components/schemas/PlatformTransferStatus"
          },
          "memo": {
            "type": "string"
          },
          "settlementDate": {
            "type": "string",
            "description": "<p>날짜를 나타내는 문자열로, <code>yyyy-MM-dd</code> 형식을 따릅니다.</p>\n"
          },
          "settlementCurrency": {
            "$ref": "#/components/schemas/Currency"
          },
          "isForTest": {
            "type": "boolean"
          },
          "amount": {
            "$ref": "#/components/schemas/PlatformOrderSettlementAmount"
          },
          "payment": {
            "$ref": "#/components/schemas/PlatformTransferSummaryPayment"
          },
          "settlementStartDate": {
            "type": "string",
            "description": "<p>날짜를 나타내는 문자열로, <code>yyyy-MM-dd</code> 형식을 따릅니다.</p>\n"
          }
        }
      },
      "PlatformOrderDetailMismatchedError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformOrderSettlementAmount": {
        "required": [
          "settlement",
          "payment",
          "order",
          "platformFee",
          "platformFeeVat",
          "additionalFee",
          "additionalFeeVat",
          "discount",
          "discountShare"
        ],
        "type": "object",
        "properties": {
          "settlement": {
            "type": "integer",
            "format": "int64"
          },
          "payment": {
            "type": "integer",
            "format": "int64"
          },
          "order": {
            "type": "integer",
            "format": "int64"
          },
          "platformFee": {
            "type": "integer",
            "format": "int64"
          },
          "platformFeeVat": {
            "type": "integer",
            "format": "int64"
          },
          "additionalFee": {
            "type": "integer",
            "format": "int64"
          },
          "additionalFeeVat": {
            "type": "integer",
            "format": "int64"
          },
          "discount": {
            "type": "integer",
            "format": "int64"
          },
          "discountShare": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PlatformOrderTransfer": {
        "required": [
          "type",
          "id",
          "graphqlId",
          "partner",
          "status",
          "settlementDate",
          "settlementCurrency",
          "isForTest",
          "amount",
          "contract",
          "payment",
          "settlementStartDate",
          "orderLines",
          "additionalFees",
          "discounts"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "graphqlId": {
            "type": "string"
          },
          "partner": {
            "$ref": "#/components/schemas/PlatformPartner"
          },
          "status": {
            "$ref": "#/components/schemas/PlatformTransferStatus"
          },
          "memo": {
            "type": "string"
          },
          "settlementDate": {
            "type": "string",
            "description": "<p>날짜를 나타내는 문자열로, <code>yyyy-MM-dd</code> 형식을 따릅니다.</p>\n"
          },
          "settlementCurrency": {
            "$ref": "#/components/schemas/Currency"
          },
          "payoutId": {
            "type": "string"
          },
          "payoutGraphqlId": {
            "type": "string"
          },
          "isForTest": {
            "type": "boolean"
          },
          "amount": {
            "$ref": "#/components/schemas/PlatformOrderSettlementAmount"
          },
          "contract": {
            "$ref": "#/components/schemas/PlatformContract"
          },
          "payment": {
            "$ref": "#/components/schemas/PlatformPayment"
          },
          "settlementStartDate": {
            "type": "string",
            "description": "<p>날짜를 나타내는 문자열로, <code>yyyy-MM-dd</code> 형식을 따릅니다.</p>\n"
          },
          "orderLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformOrderTransferOrderLine"
            }
          },
          "additionalFees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformOrderTransferAdditionalFee"
            }
          },
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformOrderTransferDiscount"
            }
          }
        }
      },
      "PlatformOrderTransferAdditionalFee": {
        "required": [
          "policy",
          "amount",
          "vat"
        ],
        "type": "object",
        "properties": {
          "policy": {
            "$ref": "#/components/schemas/PlatformAdditionalFeePolicy"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "vat": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PlatformOrderTransferAlreadyCancelledError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformOrderTransferCancellation": {
        "required": [
          "id",
          "cancelledAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "cancelledAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PlatformOrderTransferDiscount": {
        "required": [
          "sharePolicy",
          "amount",
          "shareAmount"
        ],
        "type": "object",
        "properties": {
          "sharePolicy": {
            "$ref": "#/components/schemas/PlatformDiscountSharePolicy"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "shareAmount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PlatformOrderTransferOrderLine": {
        "required": [
          "product",
          "quantity",
          "discounts",
          "additionalFees",
          "amount"
        ],
        "type": "object",
        "properties": {
          "product": {
            "$ref": "#/components/schemas/PlatformOrderTransferProduct"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformOrderTransferDiscount"
            }
          },
          "additionalFees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformOrderTransferAdditionalFee"
            }
          },
          "amount": {
            "$ref": "#/components/schemas/PlatformOrderSettlementAmount"
          }
        }
      },
      "PlatformOrderTransferProduct": {
        "required": [
          "id",
          "name",
          "amount"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "tag": {
            "type": "string"
          }
        }
      },
      "PlatformOrderTransferSummary": {
        "required": [
          "type",
          "id",
          "graphqlId",
          "storeId",
          "partner",
          "status",
          "settlementDate",
          "settlementCurrency",
          "isForTest",
          "amount",
          "payment",
          "settlementStartDate"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "graphqlId": {
            "type": "string"
          },
          "storeId": {
            "type": "string"
          },
          "partner": {
            "$ref": "#/components/schemas/PlatformTransferSummaryPartner"
          },
          "status": {
            "$ref": "#/components/schemas/PlatformTransferStatus"
          },
          "memo": {
            "type": "string"
          },
          "settlementDate": {
            "type": "string",
            "description": "<p>날짜를 나타내는 문자열로, <code>yyyy-MM-dd</code> 형식을 따릅니다.</p>\n"
          },
          "settlementCurrency": {
            "$ref": "#/components/schemas/Currency"
          },
          "isForTest": {
            "type": "boolean"
          },
          "amount": {
            "$ref": "#/components/schemas/PlatformOrderSettlementAmount"
          },
          "payment": {
            "$ref": "#/components/schemas/PlatformTransferSummaryPayment"
          },
          "settlementStartDate": {
            "type": "string",
            "description": "<p>날짜를 나타내는 문자열로, <code>yyyy-MM-dd</code> 형식을 따릅니다.</p>\n"
          }
        }
      },
      "PlatformPartner": {
        "required": [
          "id",
          "graphqlId",
          "name",
          "email",
          "account",
          "status",
          "defaultContractId",
          "tags",
          "isHidden",
          "appliedAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "<p>파트너 고유 아이디</p>\n"
          },
          "graphqlId": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "<p>파트너 법인명 혹은 이름</p>\n"
          },
          "email": {
            "type": "string",
            "description": "<p>파트너 이메일</p>\n"
          },
          "businessRegistrationNumber": {
            "type": "string",
            "description": "<p>파트너의 사업자등록번호. 개인 혹은 법인 사업자일 때만 명시합니다.</p>\n"
          },
          "account": {
            "$ref": "#/components/schemas/PlatformAccount",
            "description": "<p>정산 계좌</p>\n"
          },
          "status": {
            "$ref": "#/components/schemas/PlatformPartnerStatus",
            "description": "<p>파트너의 상태</p>\n"
          },
          "defaultContractId": {
            "type": "string"
          },
          "memo": {
            "type": "string",
            "description": "<p>파트너에 대한 메모</p>\n"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "<p>파트너의 태그 리스트</p>\n"
          },
          "isHidden": {
            "type": "boolean",
            "description": "<p>숨김 여부</p>\n"
          },
          "appliedAt": {
            "type": "string",
            "format": "date-time",
            "description": "<p>변경 적용 시점</p>\n"
          }
        },
        "description": "<p>파트너는 가맹점이 정산해주어야 할 대상입니다.\n기본 사업자 정보와 정산정보, 그리고 적용될 계약의 정보를 등록 및 관리할 수 있습니다.</p>\n"
      },
      "PlatformPartnerDashboard": {
        "required": [
          "totalCount",
          "upcomingSettledCount"
        ],
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "description": "<p>전체 파트너 수</p>\n"
          },
          "upcomingSettledCount": {
            "type": "integer",
            "format": "int32",
            "description": "<p>정산 예정인 파트너 수</p>\n"
          },
          "upcomingSettlementDate": {
            "type": "string",
            "description": "<p>예정된 정산일. 정산이 예정되어 있지 않은 경우 값이 주어지지 않습니다.</p>\n"
          }
        },
        "description": "<p>파트너 현황 조회 성공 응답</p>\n"
      },
      "PlatformPartnerFilterInput": {
        "type": "object",
        "properties": {
          "includeHidden": {
            "type": "boolean",
            "description": "<p>true 이면 숨김 처리된 파트너까지 조회하고, false 이면 숨김 처리되지 않은 파트너만 조회합니다. 아무 값도 넘기지 않을 경우 기본값은 false 입니다.</p>\n"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "<p>하나 이상의 값이 존재하는 경우 해당 리스트에 포함되는 태그를 하나 이상 가지는 파트너만 조회합니다.</p>\n"
          },
          "banks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bank"
            },
            "description": "<p>하나 이상의 값이 존재하는 경우,  해당 리스트에 포함되는 계좌 은행을 가진 파트너만 조회합니다.</p>\n"
          },
          "accountCurrencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Currency"
            },
            "description": "<p>하나 이상의 값이 존재하는 경우,  해당 리스트에 포함되는 계좌 통화를 가진 파트너만 조회합니다.</p>\n"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "<p>하나 이상의 값이 존재하는 경우,  해당 리스트에 포함되는 아이디를 가진 파트너만 조회합니다.</p>\n"
          },
          "keyword": {
            "$ref": "#/components/schemas/PlatformPartnerFilterInputKeyword",
            "description": "<p>검색 키워드 적용을 위한 옵션으로, 명시된 키워드를 포함하는 파트너만 조회합니다. 하나의 하위 필드에만 값을 명시하여 요청합니다.</p>\n"
          }
        },
        "description": "<p>파트너 필터 입력 정보</p>\n"
      },
      "PlatformPartnerFilterInputKeyword": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "<p>해당 값이 포함된 id 를 가진 파트너만 조회합니다.</p>\n"
          },
          "name": {
            "type": "string",
            "description": "<p>해당 값이 포함된 이름 을 가진 파트너만 조회합니다.</p>\n"
          },
          "email": {
            "type": "string",
            "description": "<p>해당 값이 포함된 이메일 주소를 가진 파트너만 조회합니다.</p>\n"
          },
          "businessRegistrationNumber": {
            "type": "string",
            "description": "<p>해당 값이 포함된 사업자등록번호를 가진 파트너만 조회합니다.</p>\n"
          },
          "defaultContractId": {
            "type": "string",
            "description": "<p>해당 값이 포함된 기본 계약 아이디를 가진 파트너만 조회합니다.</p>\n"
          },
          "memo": {
            "type": "string",
            "description": "<p>해당 값이 포함된 메모를 가진 파트너만 조회합니다.</p>\n"
          },
          "accountNumber": {
            "type": "string",
            "description": "<p>해당 값이 포함된 계좌번호를 가진 파트너만 조회합니다.</p>\n"
          },
          "accountHolder": {
            "type": "string",
            "description": "<p>해당 값이 포함된 계좌 예금주명을 가진 파트너만 조회합니다.</p>\n"
          }
        },
        "description": "<p>검색 키워드 적용을 위한 옵션으로, 명시된 키워드를 포함하는 파트너만 조회합니다. 하나의 하위 필드에만 값을 명시하여 요청합니다.</p>\n"
      },
      "PlatformPartnerFilterOptions": {
        "required": [
          "tags"
        ],
        "type": "object",
        "properties": {
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "<p>조회된 태그 리스트</p>\n"
          }
        },
        "description": "<p>파트너 필터 옵션 조회 성공 응답 정보</p>\n"
      },
      "PlatformPartnerIdAlreadyExistsError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformPartnerIdsAlreadyExistError": {
        "required": [
          "type",
          "ids",
          "graphqlIds"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "graphqlIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformPartnerIdsDuplicatedError": {
        "required": [
          "type",
          "ids",
          "graphqlIds"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "graphqlIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformPartnerManualSettlement": {
        "required": [
          "type",
          "partner",
          "settlementDate",
          "settlementAmount",
          "settlementCurrency",
          "payoutCurrency",
          "isForTest"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "partner": {
            "$ref": "#/components/schemas/PlatformPartnerSettlementPartner"
          },
          "settlementDate": {
            "type": "string",
            "description": "<p>날짜를 나타내는 문자열로, <code>yyyy-MM-dd</code> 형식을 따릅니다.</p>\n"
          },
          "settlementAmount": {
            "type": "integer",
            "format": "int64"
          },
          "settlementCurrency": {
            "$ref": "#/components/schemas/Currency"
          },
          "payoutCurrency": {
            "$ref": "#/components/schemas/Currency"
          },
          "isForTest": {
            "type": "boolean"
          }
        }
      },
      "PlatformPartnerNotFoundError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformPartnerOrderSettlement": {
        "required": [
          "type",
          "partner",
          "settlementDate",
          "settlementCurrency",
          "payoutCurrency",
          "contractId",
          "settlementStartDateRange",
          "amount",
          "isForTest"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "partner": {
            "$ref": "#/components/schemas/PlatformPartnerSettlementPartner"
          },
          "settlementDate": {
            "type": "string",
            "description": "<p>날짜를 나타내는 문자열로, <code>yyyy-MM-dd</code> 형식을 따릅니다.</p>\n"
          },
          "settlementCurrency": {
            "$ref": "#/components/schemas/Currency"
          },
          "payoutCurrency": {
            "$ref": "#/components/schemas/Currency"
          },
          "contractId": {
            "type": "string"
          },
          "settlementStartDateRange": {
            "$ref": "#/components/schemas/DateRange"
          },
          "amount": {
            "$ref": "#/components/schemas/PlatformOrderSettlementAmount"
          },
          "isForTest": {
            "type": "boolean"
          }
        }
      },
      "PlatformPartnerScheduleAlreadyExistsError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformPartnerSchedulesAlreadyExistError": {
        "required": [
          "type",
          "ids",
          "graphqlIds"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "graphqlIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformPartnerSettlement": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/PlatformPartnerManualSettlement"
          },
          {
            "$ref": "#/components/schemas/PlatformPartnerOrderSettlement"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "MANUAL": "#/components/schemas/PlatformPartnerManualSettlement",
            "ORDER": "#/components/schemas/PlatformPartnerOrderSettlement"
          }
        },
        "x-portone-cases": [
          {
            "case": "ORDER"
          },
          {
            "case": "MANUAL"
          }
        ]
      },
      "PlatformPartnerSettlementFilter": {
        "required": [
          "settlementDate",
          "settlementStartDateRange",
          "contractIds",
          "transferTypes",
          "transferStatuses",
          "banks",
          "paymentMethodTypes",
          "settlementCurrencies",
          "payoutCurrencies",
          "partnerTags",
          "isForTest"
        ],
        "type": "object",
        "properties": {
          "settlementDate": {
            "type": "string",
            "description": "<p>날짜를 나타내는 문자열로, <code>yyyy-MM-dd</code> 형식을 따릅니다.</p>\n"
          },
          "settlementStartDateRange": {
            "$ref": "#/components/schemas/DateRange"
          },
          "contractIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "transferTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformTransferType"
            }
          },
          "transferStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformTransferStatus"
            }
          },
          "banks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bank"
            }
          },
          "paymentMethodTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentMethodType"
            }
          },
          "settlementCurrencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Currency"
            }
          },
          "payoutCurrencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Currency"
            }
          },
          "partnerTags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "keyword": {
            "$ref": "#/components/schemas/PlatformPartnerSettlementFilterKeyword"
          },
          "isForTest": {
            "type": "boolean"
          }
        }
      },
      "PlatformPartnerSettlementFilterDateOption": {
        "required": [
          "settlementDate",
          "settlementStartDateRange"
        ],
        "type": "object",
        "properties": {
          "settlementDate": {
            "type": "string",
            "description": "<p>날짜를 나타내는 문자열로, <code>yyyy-MM-dd</code> 형식을 따릅니다.</p>\n"
          },
          "settlementStartDateRange": {
            "$ref": "#/components/schemas/DateRange"
          }
        }
      },
      "PlatformPartnerSettlementFilterInput": {
        "required": [
          "settlementDate",
          "settlementStartDateRange"
        ],
        "type": "object",
        "properties": {
          "settlementDate": {
            "type": "string",
            "description": "<p>날짜를 나타내는 문자열로, <code>yyyy-MM-dd</code> 형식을 따릅니다.</p>\n"
          },
          "settlementStartDateRange": {
            "$ref": "#/components/schemas/DateRange"
          },
          "contractIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "transferTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformTransferType"
            }
          },
          "transferStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformTransferStatus"
            }
          },
          "banks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bank"
            }
          },
          "paymentMethodTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentMethodType"
            }
          },
          "settlementCurrencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Currency"
            }
          },
          "payoutCurrencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Currency"
            }
          },
          "partnerTags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "keyword": {
            "$ref": "#/components/schemas/PlatformPartnerSettlementFilterKeywordInput"
          },
          "isForTest": {
            "type": "boolean"
          }
        }
      },
      "PlatformPartnerSettlementFilterKeyword": {
        "required": [
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/PlatformPartnerSettlementFilterKeywordType"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "PlatformPartnerSettlementFilterKeywordInput": {
        "type": "object",
        "properties": {
          "partnerId": {
            "type": "string"
          },
          "partnerEmail": {
            "type": "string"
          },
          "partnerBusinessRegistrationNumber": {
            "type": "string"
          },
          "partnerMemo": {
            "type": "string"
          },
          "platformFee": {
            "type": "string"
          },
          "contractMemo": {
            "type": "string"
          },
          "additionalFeePolicyId": {
            "type": "string"
          },
          "additionalFeePolicyFee": {
            "type": "string"
          },
          "additionalFeePolicyMemo": {
            "type": "string"
          },
          "discountSharePolicyId": {
            "type": "string"
          },
          "discountSharePolicyRate": {
            "type": "string"
          },
          "discountSharePolicyMemo": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          }
        }
      },
      "PlatformPartnerSettlementFilterKeywordType": {
        "type": "string",
        "enum": [
          "ADDITIONAL_FEE_POLICY_FEE",
          "ADDITIONAL_FEE_POLICY_ID",
          "ADDITIONAL_FEE_POLICY_MEMO",
          "CONTRACT_MEMO",
          "DISCOUNT_SHARE_POLICY_ID",
          "DISCOUNT_SHARE_POLICY_MEMO",
          "DISCOUNT_SHARE_POLICY_RATE",
          "PARTNER_BUSINESS_REGISTRATION_NUMBER",
          "PARTNER_EMAIL",
          "PARTNER_ID",
          "PARTNER_MEMO",
          "PLATFORM_FEE",
          "PRODUCT_ID"
        ],
        "x-portone-cases": [
          {
            "case": "PARTNER_ID"
          },
          {
            "case": "PARTNER_EMAIL"
          },
          {
            "case": "PARTNER_BUSINESS_REGISTRATION_NUMBER"
          },
          {
            "case": "PARTNER_MEMO"
          },
          {
            "case": "PLATFORM_FEE"
          },
          {
            "case": "CONTRACT_MEMO"
          },
          {
            "case": "ADDITIONAL_FEE_POLICY_ID"
          },
          {
            "case": "ADDITIONAL_FEE_POLICY_FEE"
          },
          {
            "case": "ADDITIONAL_FEE_POLICY_MEMO"
          },
          {
            "case": "DISCOUNT_SHARE_POLICY_ID"
          },
          {
            "case": "DISCOUNT_SHARE_POLICY_RATE"
          },
          {
            "case": "DISCOUNT_SHARE_POLICY_MEMO"
          },
          {
            "case": "PRODUCT_ID"
          }
        ]
      },
      "PlatformPartnerSettlementFilterOptions": {
        "required": [
          "contractIds",
          "dateOptions",
          "banks",
          "settlementCurrencies",
          "payoutCurrencies",
          "partnerTags"
        ],
        "type": "object",
        "properties": {
          "contractIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dateOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformPartnerSettlementFilterDateOption"
            }
          },
          "banks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bank"
            }
          },
          "settlementCurrencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Currency"
            }
          },
          "payoutCurrencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Currency"
            }
          },
          "partnerTags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PlatformPartnerSettlementPartner": {
        "required": [
          "id",
          "graphqlId",
          "name",
          "bank",
          "accountHolder",
          "accountNumber"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "graphqlId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "bank": {
            "$ref": "#/components/schemas/Bank"
          },
          "accountHolder": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          }
        }
      },
      "PlatformPartnerStatus": {
        "type": "string",
        "description": "<p>플랫폼 파트너 상태</p>\n",
        "enum": [
          "APPROVED",
          "PENDING",
          "REJECTED"
        ],
        "x-portone-cases": [
          {
            "case": "PENDING",
            "x-portone-name": "승인 대기 중"
          },
          {
            "case": "APPROVED",
            "x-portone-name": "승인 완료"
          },
          {
            "case": "REJECTED",
            "x-portone-name": "승인 거절"
          }
        ]
      },
      "PlatformPayer": {
        "type": "string",
        "description": "<p>플랫폼에서 발생한 결제 수수료, 부가세 등 금액을 부담하는 주체를 나타냅니다.</p>\n",
        "enum": [
          "MERCHANT",
          "PARTNER"
        ],
        "x-portone-cases": [
          {
            "case": "PARTNER",
            "x-portone-name": "파트너가 부담하는 경우"
          },
          {
            "case": "MERCHANT",
            "x-portone-name": "가맹점이 부담하는 경우"
          }
        ]
      },
      "PlatformPayment": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/PlatformExternalPayment"
          },
          {
            "$ref": "#/components/schemas/PlatformPortOnePayment"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "EXTERNAL": "#/components/schemas/PlatformExternalPayment",
            "PORT_ONE": "#/components/schemas/PlatformPortOnePayment"
          }
        },
        "x-portone-cases": [
          {
            "case": "PORT_ONE"
          },
          {
            "case": "EXTERNAL"
          }
        ]
      },
      "PlatformPaymentChannel": {
        "required": [
          "id",
          "key",
          "name",
          "pgMerchantId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "pgMerchantId": {
            "type": "string"
          },
          "pgCompany": {
            "$ref": "#/components/schemas/PgCompany"
          }
        }
      },
      "PlatformPaymentMethod": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/PlatformPaymentMethodCard"
          },
          {
            "$ref": "#/components/schemas/PlatformPaymentMethodEasyPay"
          },
          {
            "$ref": "#/components/schemas/PlatformPaymentMethodGiftCertificate"
          },
          {
            "$ref": "#/components/schemas/PlatformPaymentMethodMobile"
          },
          {
            "$ref": "#/components/schemas/PlatformPaymentMethodTransfer"
          },
          {
            "$ref": "#/components/schemas/PlatformPaymentMethodVirtualAccount"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "CARD": "#/components/schemas/PlatformPaymentMethodCard",
            "EASY_PAY": "#/components/schemas/PlatformPaymentMethodEasyPay",
            "GIFT_CERTIFICATE": "#/components/schemas/PlatformPaymentMethodGiftCertificate",
            "MOBILE": "#/components/schemas/PlatformPaymentMethodMobile",
            "TRANSFER": "#/components/schemas/PlatformPaymentMethodTransfer",
            "VIRTUAL_ACCOUNT": "#/components/schemas/PlatformPaymentMethodVirtualAccount"
          }
        },
        "x-portone-cases": [
          {
            "case": "CARD"
          },
          {
            "case": "TRANSFER"
          },
          {
            "case": "VIRTUAL_ACCOUNT"
          },
          {
            "case": "GIFT_CERTIFICATE"
          },
          {
            "case": "MOBILE"
          },
          {
            "case": "EASY_PAY"
          }
        ]
      },
      "PlatformPaymentMethodCard": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        }
      },
      "PlatformPaymentMethodCardInput": {
        "type": "object"
      },
      "PlatformPaymentMethodEasyPay": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "provider": {
            "$ref": "#/components/schemas/EasyPayProvider"
          },
          "methodType": {
            "$ref": "#/components/schemas/EasyPayMethodType"
          }
        }
      },
      "PlatformPaymentMethodEasyPayInput": {
        "type": "object",
        "properties": {
          "provider": {
            "$ref": "#/components/schemas/EasyPayProvider"
          },
          "methodType": {
            "$ref": "#/components/schemas/EasyPayMethodType"
          }
        }
      },
      "PlatformPaymentMethodGiftCertificate": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        }
      },
      "PlatformPaymentMethodGiftCertificateInput": {
        "type": "object"
      },
      "PlatformPaymentMethodInput": {
        "type": "object",
        "properties": {
          "card": {
            "$ref": "#/components/schemas/PlatformPaymentMethodCardInput"
          },
          "transfer": {
            "$ref": "#/components/schemas/PlatformPaymentMethodTransferInput"
          },
          "virtualAccount": {
            "$ref": "#/components/schemas/PlatformPaymentMethodVirtualAccountInput"
          },
          "giftCertificate": {
            "$ref": "#/components/schemas/PlatformPaymentMethodGiftCertificateInput"
          },
          "mobile": {
            "$ref": "#/components/schemas/PlatformPaymentMethodMobileInput"
          },
          "easyPay": {
            "$ref": "#/components/schemas/PlatformPaymentMethodEasyPayInput"
          }
        }
      },
      "PlatformPaymentMethodMobile": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        }
      },
      "PlatformPaymentMethodMobileInput": {
        "type": "object"
      },
      "PlatformPaymentMethodTransfer": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        }
      },
      "PlatformPaymentMethodTransferInput": {
        "type": "object"
      },
      "PlatformPaymentMethodVirtualAccount": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        }
      },
      "PlatformPaymentMethodVirtualAccountInput": {
        "type": "object"
      },
      "PlatformPaymentNotFoundError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformPayout": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/PlatformCompletedPayout"
          },
          {
            "$ref": "#/components/schemas/PlatformOngoingPayout"
          }
        ],
        "discriminator": {
          "propertyName": "status",
          "mapping": {
            "COMPLETED": "#/components/schemas/PlatformCompletedPayout",
            "ONGOING": "#/components/schemas/PlatformOngoingPayout"
          }
        },
        "x-portone-cases": [
          {
            "case": "ONGOING"
          },
          {
            "case": "COMPLETED"
          }
        ]
      },
      "PlatformPayoutAlreadyCompletedError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformPayoutCreatorMismatchedError": {
        "required": [
          "type",
          "creatorId"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformPayoutFilterInput": {
        "type": "object",
        "properties": {
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformPayoutStatus"
            }
          },
          "isForTest": {
            "type": "boolean"
          }
        }
      },
      "PlatformPayoutNotFoundError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformPayoutPartnerSettlement": {
        "required": [
          "id",
          "graphqlId",
          "payoutId",
          "payoutGraphqlId",
          "status",
          "partnerSettlement"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "graphqlId": {
            "type": "string"
          },
          "payoutId": {
            "type": "string"
          },
          "payoutGraphqlId": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/PlatformPayoutPartnerSettlementStatus"
          },
          "partnerSettlement": {
            "$ref": "#/components/schemas/PlatformPartnerSettlement"
          }
        }
      },
      "PlatformPayoutPartnerSettlementAlreadyPaidOutError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformPayoutPartnerSettlementNotFoundError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformPayoutPartnerSettlementStatus": {
        "type": "string",
        "enum": [
          "PAID_OUT",
          "WITHHELD"
        ],
        "x-portone-cases": [
          {
            "case": "PAID_OUT"
          },
          {
            "case": "WITHHELD"
          }
        ]
      },
      "PlatformPayoutSheetNotFoundError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformPayoutStatus": {
        "type": "string",
        "enum": [
          "COMPLETED",
          "ONGOING"
        ],
        "x-portone-cases": [
          {
            "case": "ONGOING"
          },
          {
            "case": "COMPLETED"
          }
        ]
      },
      "PlatformPayoutSummary": {
        "required": [
          "partnerCount",
          "totalSettlementAmount",
          "paidOutPartnerSettlementCount",
          "totalPartnerSettlementCount"
        ],
        "type": "object",
        "properties": {
          "partnerCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalSettlementAmount": {
            "type": "integer",
            "format": "int64"
          },
          "paidOutPartnerSettlementCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPartnerSettlementCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PlatformPortOnePayment": {
        "required": [
          "type",
          "id",
          "storeId",
          "channelKey",
          "orderName",
          "currency",
          "paidAt"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "storeId": {
            "type": "string"
          },
          "channelKey": {
            "type": "string"
          },
          "orderName": {
            "type": "string"
          },
          "method": {
            "$ref": "#/components/schemas/PlatformPaymentMethod"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "paidAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PlatformProductIdDuplicatedError": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformProductIdNotFoundError": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformRoundType": {
        "type": "string",
        "description": "<p>금액에 대한 소수점 처리 방식을 나타냅니다.</p>\n",
        "enum": [
          "DOWN",
          "OFF",
          "UP"
        ],
        "x-portone-cases": [
          {
            "case": "OFF",
            "x-portone-name": "소수점 반올림"
          },
          {
            "case": "DOWN",
            "x-portone-name": "소수점 내림"
          },
          {
            "case": "UP",
            "x-portone-name": "소수점 올림"
          }
        ]
      },
      "PlatformSettlementCancelAmountExceededPortOneCancelError": {
        "required": [
          "type",
          "registeredSettlementCancelAmount",
          "requestSettlementCancelAmount",
          "portOneCancelAmount"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "registeredSettlementCancelAmount": {
            "type": "integer",
            "format": "int64"
          },
          "requestSettlementCancelAmount": {
            "type": "integer",
            "format": "int64"
          },
          "portOneCancelAmount": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformSettlementCycle": {
        "required": [
          "lagDays",
          "datePolicy",
          "method"
        ],
        "type": "object",
        "properties": {
          "lagDays": {
            "type": "integer",
            "format": "int32",
            "description": "<p>지체일(d+n 의 n). 정산시작일(통상 주문완료일)로부터 더해진 다음 날짜로부터 가장 가까운 날에 정산이 됩니다. 최소 1 에서 최대 10 까지 지정할 수 있습니다.</p>\n"
          },
          "datePolicy": {
            "$ref": "#/components/schemas/PlatformSettlementCycleDatePolicy",
            "description": "<p>기준일로, 정산일 계산 시 공휴일을 고려하기 위한 정보입니다.</p>\n"
          },
          "method": {
            "$ref": "#/components/schemas/PlatformSettlementCycleMethod",
            "description": "<p>정산 주기 계산 방식</p>\n"
          }
        },
        "description": "<p>정산 주기. 지체일, 정산일, 기준일로 구성되며, 해당 요소들의 조합으로 실제 정산일을 계산합니다.</p>\n"
      },
      "PlatformSettlementCycleDatePolicy": {
        "type": "string",
        "description": "<p>플랫폼 정산 기준일</p>\n",
        "enum": [
          "CALENDAR_DAY",
          "HOLIDAY_AFTER",
          "HOLIDAY_BEFORE"
        ],
        "x-portone-cases": [
          {
            "case": "HOLIDAY_BEFORE",
            "x-portone-name": "공휴일 전 영업일"
          },
          {
            "case": "HOLIDAY_AFTER",
            "x-portone-name": "공휴일 후 영업일"
          },
          {
            "case": "CALENDAR_DAY",
            "x-portone-name": "달력일"
          }
        ]
      },
      "PlatformSettlementCycleInput": {
        "required": [
          "lagDays",
          "datePolicy",
          "method"
        ],
        "type": "object",
        "properties": {
          "lagDays": {
            "type": "integer",
            "format": "int32",
            "description": "<p>지체일(d+n 의 n). 정산시작일(통상 주문완료일)로부터 더해진 다음 날짜로부터 가장 가까운 날에 정산이 됩니다. 최소 1 에서 최대 10 까지 지정할 수 있습니다.</p>\n"
          },
          "datePolicy": {
            "$ref": "#/components/schemas/PlatformSettlementCycleDatePolicy",
            "description": "<p>기준일로, 정산일 계산 시 공휴일을 고려하기 위한 정보입니다.</p>\n"
          },
          "method": {
            "$ref": "#/components/schemas/PlatformSettlementCycleMethodInput",
            "description": "<p>정산 주기 계산 방식</p>\n"
          }
        },
        "description": "<p>플랫폼 정산 주기 입력 정보</p>\n"
      },
      "PlatformSettlementCycleMethod": {
        "description": "<p>플랫폼 정산 주기 계산 방식</p>\n",
        "oneOf": [
          {
            "$ref": "#/components/schemas/PlatformSettlementCycleMethodDaily"
          },
          {
            "$ref": "#/components/schemas/PlatformSettlementCycleMethodManualDates"
          },
          {
            "$ref": "#/components/schemas/PlatformSettlementCycleMethodMonthly"
          },
          {
            "$ref": "#/components/schemas/PlatformSettlementCycleMethodWeekly"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "DAILY": "#/components/schemas/PlatformSettlementCycleMethodDaily",
            "MANUAL_DATES": "#/components/schemas/PlatformSettlementCycleMethodManualDates",
            "MONTHLY": "#/components/schemas/PlatformSettlementCycleMethodMonthly",
            "WEEKLY": "#/components/schemas/PlatformSettlementCycleMethodWeekly"
          }
        },
        "x-portone-cases": [
          {
            "case": "DAILY",
            "x-portone-name": "매일 정산"
          },
          {
            "case": "WEEKLY",
            "x-portone-name": "매주 정해진 요일에 정산"
          },
          {
            "case": "MONTHLY",
            "x-portone-name": "매월 정해진 날(일)에 정산"
          },
          {
            "case": "MANUAL_DATES",
            "x-portone-name": "정해진 날짜(월, 일)에 정산"
          }
        ]
      },
      "PlatformSettlementCycleMethodDaily": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "description": "<p>매일 정산</p>\n"
      },
      "PlatformSettlementCycleMethodDailyInput": {
        "type": "object"
      },
      "PlatformSettlementCycleMethodInput": {
        "type": "object",
        "properties": {
          "daily": {
            "$ref": "#/components/schemas/PlatformSettlementCycleMethodDailyInput",
            "description": "<p>매일 정산</p>\n"
          },
          "weekly": {
            "$ref": "#/components/schemas/PlatformSettlementCycleMethodWeeklyInput",
            "description": "<p>매주 정해진 요일에 정산</p>\n"
          },
          "monthly": {
            "$ref": "#/components/schemas/PlatformSettlementCycleMethodMonthlyInput",
            "description": "<p>매월 정해진 날(일)에 정산</p>\n"
          },
          "manualDates": {
            "$ref": "#/components/schemas/PlatformSettlementCycleMethodManualDatesInput",
            "description": "<p>정해진 날짜(월, 일)에 정산</p>\n"
          }
        },
        "description": "<p>플랫폼 정산 주기 계산 방식 입력 정보. 하나의 하위 필드에만 값을 명시하여 요청합니다.</p>\n"
      },
      "PlatformSettlementCycleMethodManualDates": {
        "required": [
          "type",
          "dates"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "dates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MonthDay"
            }
          }
        },
        "description": "<p>정해진 날짜(월, 일)에 정산</p>\n"
      },
      "PlatformSettlementCycleMethodManualDatesInput": {
        "required": [
          "dates"
        ],
        "type": "object",
        "properties": {
          "dates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MonthDay"
            }
          }
        }
      },
      "PlatformSettlementCycleMethodMonthly": {
        "required": [
          "type",
          "daysOfMonth"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "daysOfMonth": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "description": "<p>매월 정해진 날(일)에 정산</p>\n"
      },
      "PlatformSettlementCycleMethodMonthlyInput": {
        "required": [
          "daysOfMonth"
        ],
        "type": "object",
        "properties": {
          "daysOfMonth": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "PlatformSettlementCycleMethodWeekly": {
        "required": [
          "type",
          "daysOfWeek"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "daysOfWeek": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DayOfWeek"
            }
          }
        },
        "description": "<p>매주 정해진 요일에 정산</p>\n"
      },
      "PlatformSettlementCycleMethodWeeklyInput": {
        "required": [
          "daysOfWeek"
        ],
        "type": "object",
        "properties": {
          "daysOfWeek": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DayOfWeek"
            }
          }
        }
      },
      "PlatformSettlementCycleType": {
        "type": "string",
        "description": "<p>플랫폼 정산 주기 계산 방식</p>\n",
        "enum": [
          "DAILY",
          "MANUAL_DATES",
          "MONTHLY",
          "WEEKLY"
        ],
        "x-portone-cases": [
          {
            "case": "DAILY",
            "x-portone-name": "매일 정산"
          },
          {
            "case": "WEEKLY",
            "x-portone-name": "매주 정해진 요일에 정산"
          },
          {
            "case": "MONTHLY",
            "x-portone-name": "매월 정해진 날(일)에 정산"
          },
          {
            "case": "MANUAL_DATES",
            "x-portone-name": "정해진 날짜(월, 일)에 정산"
          }
        ]
      },
      "PlatformSettlementFormula": {
        "required": [
          "platformFee",
          "discountShare",
          "additionalFee"
        ],
        "type": "object",
        "properties": {
          "platformFee": {
            "type": "string",
            "description": "<p>플랫폼 수수료 계산식</p>\n"
          },
          "discountShare": {
            "type": "string",
            "description": "<p>할인 분담액 계산식</p>\n"
          },
          "additionalFee": {
            "type": "string",
            "description": "<p>추가 수수료 계산식</p>\n"
          }
        },
        "description": "<p>플랫폼 내 발생하는 여러 수수료 및 할인 분담에 관한 계산식 정보</p>\n"
      },
      "PlatformSettlementFormulaError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/PlatformSettlementFormulaInvalidFunction"
          },
          {
            "$ref": "#/components/schemas/PlatformSettlementFormulaInvalidOperator"
          },
          {
            "$ref": "#/components/schemas/PlatformSettlementFormulaInvalidSyntax"
          },
          {
            "$ref": "#/components/schemas/PlatformSettlementFormulaInvalidVariable"
          },
          {
            "$ref": "#/components/schemas/PlatformSettlementFormulaUnexpectedFunctionArguments"
          },
          {
            "$ref": "#/components/schemas/PlatformSettlementFormulaUnknownError"
          },
          {
            "$ref": "#/components/schemas/PlatformSettlementFormulaUnsupportedVariable"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_FUNCTION": "#/components/schemas/PlatformSettlementFormulaInvalidFunction",
            "INVALID_OPERATOR": "#/components/schemas/PlatformSettlementFormulaInvalidOperator",
            "INVALID_SYNTAX": "#/components/schemas/PlatformSettlementFormulaInvalidSyntax",
            "INVALID_VARIABLE": "#/components/schemas/PlatformSettlementFormulaInvalidVariable",
            "UNEXPECTED_FUNCTION_ARGUMENTS": "#/components/schemas/PlatformSettlementFormulaUnexpectedFunctionArguments",
            "UNKNOWN_ERROR": "#/components/schemas/PlatformSettlementFormulaUnknownError",
            "UNSUPPORTED_VARIABLE": "#/components/schemas/PlatformSettlementFormulaUnsupportedVariable"
          }
        },
        "x-portone-cases": [
          {
            "case": "INVALID_VARIABLE"
          },
          {
            "case": "INVALID_OPERATOR"
          },
          {
            "case": "INVALID_FUNCTION"
          },
          {
            "case": "INVALID_SYNTAX"
          },
          {
            "case": "UNEXPECTED_FUNCTION_ARGUMENTS"
          },
          {
            "case": "UNSUPPORTED_VARIABLE"
          },
          {
            "case": "UNKNOWN_ERROR"
          }
        ]
      },
      "PlatformSettlementFormulaInvalidFunction": {
        "required": [
          "type",
          "name",
          "position"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "position": {
            "$ref": "#/components/schemas/PlatformSettlementFormulaPosition"
          }
        }
      },
      "PlatformSettlementFormulaInvalidOperator": {
        "required": [
          "type",
          "operator",
          "position"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "operator": {
            "type": "string"
          },
          "position": {
            "$ref": "#/components/schemas/PlatformSettlementFormulaPosition"
          }
        }
      },
      "PlatformSettlementFormulaInvalidSyntax": {
        "required": [
          "type",
          "syntax",
          "position"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "syntax": {
            "type": "string"
          },
          "position": {
            "$ref": "#/components/schemas/PlatformSettlementFormulaPosition"
          }
        }
      },
      "PlatformSettlementFormulaInvalidVariable": {
        "required": [
          "type",
          "name",
          "position"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "position": {
            "$ref": "#/components/schemas/PlatformSettlementFormulaPosition"
          }
        }
      },
      "PlatformSettlementFormulaPosition": {
        "required": [
          "startLine",
          "startIndex",
          "endLine",
          "endIndex"
        ],
        "type": "object",
        "properties": {
          "startLine": {
            "type": "integer",
            "format": "int32"
          },
          "startIndex": {
            "type": "integer",
            "format": "int32"
          },
          "endLine": {
            "type": "integer",
            "format": "int32"
          },
          "endIndex": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PlatformSettlementFormulaUnexpectedFunctionArguments": {
        "required": [
          "type",
          "functionName",
          "expectedCount",
          "currentCount",
          "position"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "functionName": {
            "type": "string"
          },
          "expectedCount": {
            "type": "integer",
            "format": "int32"
          },
          "currentCount": {
            "type": "integer",
            "format": "int32"
          },
          "position": {
            "$ref": "#/components/schemas/PlatformSettlementFormulaPosition"
          }
        }
      },
      "PlatformSettlementFormulaUnknownError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        }
      },
      "PlatformSettlementFormulaUnsupportedVariable": {
        "required": [
          "type",
          "name",
          "position"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "position": {
            "$ref": "#/components/schemas/PlatformSettlementFormulaPosition"
          }
        }
      },
      "PlatformSettlementPaymentAmountExceededPortOnePaymentError": {
        "required": [
          "type",
          "registeredSettlementPaymentAmount",
          "requestSettlementPaymentAmount",
          "portOnePaymentAmount"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "registeredSettlementPaymentAmount": {
            "type": "integer",
            "format": "int64"
          },
          "requestSettlementPaymentAmount": {
            "type": "integer",
            "format": "int64"
          },
          "portOnePaymentAmount": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformTransfer": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/PlatformManualTransfer"
          },
          {
            "$ref": "#/components/schemas/PlatformOrderCancelTransfer"
          },
          {
            "$ref": "#/components/schemas/PlatformOrderTransfer"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "MANUAL": "#/components/schemas/PlatformManualTransfer",
            "ORDER": "#/components/schemas/PlatformOrderTransfer",
            "ORDER_CANCEL": "#/components/schemas/PlatformOrderCancelTransfer"
          }
        },
        "x-portone-cases": [
          {
            "case": "MANUAL"
          },
          {
            "case": "ORDER"
          },
          {
            "case": "ORDER_CANCEL"
          }
        ]
      },
      "PlatformTransferAlreadyExistsError": {
        "required": [
          "type",
          "transferId",
          "transferGraphqlId"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "transferId": {
            "type": "string"
          },
          "transferGraphqlId": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformTransferDashboard": {
        "required": [
          "totalSettlementAmount",
          "totalFeeAmount",
          "totalOrderAmount"
        ],
        "type": "object",
        "properties": {
          "totalSettlementAmount": {
            "type": "integer",
            "format": "int64"
          },
          "totalFeeAmount": {
            "type": "integer",
            "format": "int64"
          },
          "totalOrderAmount": {
            "type": "integer",
            "format": "int64"
          },
          "settlementStartDateRange": {
            "$ref": "#/components/schemas/DateRange"
          }
        }
      },
      "PlatformTransferDiscountSharePolicyNotFoundError": {
        "required": [
          "type",
          "discountSharePolicyId",
          "discountSharePolicyGraphqlId"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "discountSharePolicyId": {
            "type": "string"
          },
          "discountSharePolicyGraphqlId": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformTransferFilterInput": {
        "type": "object",
        "properties": {
          "settlementStartDateRange": {
            "$ref": "#/components/schemas/DateRange"
          },
          "settlementDateRange": {
            "$ref": "#/components/schemas/DateRange"
          },
          "partnerTags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contractIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "discountSharePolicyIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "additionalFeePolicyIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "paymentMethodTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentMethodType"
            }
          },
          "channelKeys": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformTransferType"
            }
          },
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformTransferStatus"
            }
          },
          "keyword": {
            "$ref": "#/components/schemas/PlatformTransferFilterInputKeyword"
          },
          "isForTest": {
            "type": "boolean"
          }
        }
      },
      "PlatformTransferFilterInputKeyword": {
        "type": "object",
        "properties": {
          "all": {
            "type": "string"
          },
          "paymentId": {
            "type": "string"
          },
          "transferId": {
            "type": "string"
          },
          "transferMemo": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "partnerId": {
            "type": "string"
          },
          "partnerName": {
            "type": "string"
          },
          "partnerMemo": {
            "type": "string"
          }
        }
      },
      "PlatformTransferFilterOptions": {
        "required": [
          "partnerTags",
          "contractIds",
          "additionalFeePolicyIds",
          "discountSharePolicyIds",
          "paymentChannels"
        ],
        "type": "object",
        "properties": {
          "partnerTags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contractIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "additionalFeePolicyIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "discountSharePolicyIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "paymentChannels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformPaymentChannel"
            }
          }
        }
      },
      "PlatformTransferNotFoundError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PlatformTransferStatus": {
        "type": "string",
        "enum": [
          "IN_PAYOUT",
          "IN_PROCESS",
          "PAID_OUT",
          "SCHEDULED",
          "SETTLED"
        ],
        "x-portone-cases": [
          {
            "case": "SCHEDULED"
          },
          {
            "case": "IN_PROCESS"
          },
          {
            "case": "SETTLED"
          },
          {
            "case": "IN_PAYOUT"
          },
          {
            "case": "PAID_OUT"
          }
        ]
      },
      "PlatformTransferSummary": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/PlatformManualTransferSummary"
          },
          {
            "$ref": "#/components/schemas/PlatformOrderCancelTransferSummary"
          },
          {
            "$ref": "#/components/schemas/PlatformOrderTransferSummary"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "MANUAL": "#/components/schemas/PlatformManualTransferSummary",
            "ORDER": "#/components/schemas/PlatformOrderTransferSummary",
            "ORDER_CANCEL": "#/components/schemas/PlatformOrderCancelTransferSummary"
          }
        },
        "x-portone-cases": [
          {
            "case": "MANUAL"
          },
          {
            "case": "ORDER"
          },
          {
            "case": "ORDER_CANCEL"
          }
        ]
      },
      "PlatformTransferSummaryExternalPayment": {
        "required": [
          "type",
          "id",
          "currency"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "orderName": {
            "type": "string"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "methodType": {
            "$ref": "#/components/schemas/PaymentMethodType"
          }
        }
      },
      "PlatformTransferSummaryPartner": {
        "required": [
          "id",
          "graphqlId",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "graphqlId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "PlatformTransferSummaryPayment": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/PlatformTransferSummaryExternalPayment"
          },
          {
            "$ref": "#/components/schemas/PlatformTransferSummaryPortOnePayment"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "EXTERNAL": "#/components/schemas/PlatformTransferSummaryExternalPayment",
            "PORT_ONE": "#/components/schemas/PlatformTransferSummaryPortOnePayment"
          }
        },
        "x-portone-cases": [
          {
            "case": "PORT_ONE"
          },
          {
            "case": "EXTERNAL"
          }
        ]
      },
      "PlatformTransferSummaryPortOnePayment": {
        "required": [
          "type",
          "id",
          "orderName",
          "currency"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "orderName": {
            "type": "string"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "methodType": {
            "$ref": "#/components/schemas/PaymentMethodType"
          }
        }
      },
      "PlatformTransferType": {
        "type": "string",
        "enum": [
          "MANUAL",
          "ORDER",
          "ORDER_CANCEL"
        ],
        "x-portone-cases": [
          {
            "case": "ORDER"
          },
          {
            "case": "ORDER_CANCEL"
          },
          {
            "case": "MANUAL"
          }
        ]
      },
      "PlatformUnavailableSettlementDateError": {
        "required": [
          "type",
          "settlementDate"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "settlementDate": {
            "type": "string",
            "description": "<p>날짜를 나타내는 문자열로, <code>yyyy-MM-dd</code> 형식을 따릅니다.</p>\n"
          },
          "message": {
            "type": "string"
          }
        },
        "description": "<p>사용할 수 없는 정산일이 요청된 경우. 요청한 정산일에 이체되지 않은 주문 정산 건이 없을 때 발생합니다.</p>\n"
      },
      "PreRegisterPaymentBody": {
        "required": [
          "paymentId"
        ],
        "type": "object",
        "properties": {
          "storeId": {
            "type": "string",
            "description": "<p>상점 아이디 (접근 권한이 있는 상점 아이디 입력 가능, 미 입력시 토큰에 담긴 상점 아이디를 사용)</p>\n"
          },
          "paymentId": {
            "type": "string",
            "description": "<p>결제건 아이디</p>\n"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency",
            "description": "<p>통화 단위</p>\n"
          },
          "totalAmount": {
            "type": "integer",
            "format": "int64",
            "description": "<p>결제 총 금액</p>\n"
          },
          "taxFreeAmount": {
            "type": "integer",
            "format": "int64",
            "description": "<p>결제 면세 금액</p>\n"
          }
        },
        "description": "<p>결제 정보 사전 등록 입력 정보</p>\n"
      },
      "PreRegisterPaymentError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ForbiddenError"
          },
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PaymentPreRegistrationAlreadyExistsError"
          },
          {
            "$ref": "#/components/schemas/PaymentPreRegistrationNotFoundError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "FORBIDDEN": "#/components/schemas/ForbiddenError",
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PAYMENT_PRE_REGISTRATION_ALREADY_EXISTS": "#/components/schemas/PaymentPreRegistrationAlreadyExistsError",
            "PAYMENT_PRE_REGISTRATION_NOT_FOUND": "#/components/schemas/PaymentPreRegistrationNotFoundError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "PreRegisterPaymentResponse": {
        "type": "object",
        "description": "<p>결제 사전 등록 성공 응답</p>\n"
      },
      "ReadyIdentityVerification": {
        "required": [
          "status",
          "id",
          "requestedCustomer",
          "requestedAt",
          "updatedAt",
          "statusChangedAt"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "<p>본인인증 상태</p>\n"
          },
          "id": {
            "type": "string",
            "description": "<p>본인인증 건 아이디</p>\n"
          },
          "channel": {
            "$ref": "#/components/schemas/SelectedChannel",
            "description": "<p>채널 정보</p>\n"
          },
          "requestedCustomer": {
            "$ref": "#/components/schemas/IdentityVerificationRequestedCustomer",
            "description": "<p>요청 시 고객 정보</p>\n"
          },
          "customData": {
            "type": "string",
            "description": "<p>사용자 지정 데이터</p>\n"
          },
          "requestedAt": {
            "type": "string",
            "format": "date-time",
            "description": "<p>본인인증 요청 시각</p>\n"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "<p>업데이트 시각</p>\n"
          },
          "statusChangedAt": {
            "type": "string",
            "format": "date-time",
            "description": "<p>상태 업데이트 시각</p>\n"
          }
        },
        "description": "<p>본인인증 준비 상태 건</p>\n"
      },
      "RefreshTokenBody": {
        "required": [
          "refreshToken"
        ],
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "<p>리프레시 토큰</p>\n"
          }
        },
        "description": "<p>토큰 재발급을 위한 입력 정보</p>\n"
      },
      "RefreshTokenError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "RefreshTokenResponse": {
        "required": [
          "accessToken",
          "refreshToken"
        ],
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "<p>인증에 사용하는 엑세스 토큰. 하루의 유효기간을 가지고 있습니다.</p>\n"
          },
          "refreshToken": {
            "type": "string",
            "description": "<p>토큰 재발급 및 유효기간 연장을 위해 사용하는 리프레시 토큰. 일주일의 유효기간을 가지고 있으며, 리프레시 토큰을 통해 유효기간이 연장된 새로운 엑세스 토큰을 발급받을 수 있습니다.</p>\n"
          }
        },
        "description": "<p>토큰 재발급 성공 응답</p>\n"
      },
      "RejectPlatformPartnerBody": {
        "type": "object",
        "properties": {
          "memo": {
            "type": "string",
            "description": "<p>파트너 메모. 값이 명시되지 않은 경우 업데이트하지 않습니다.</p>\n"
          }
        },
        "description": "<p>파트너 상태를 승인 거절로 변경하기 위한 입력 정보</p>\n"
      },
      "RejectPlatformPartnerError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/PlatformPartnerNotFoundError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "PLATFORM_PARTNER_NOT_FOUND": "#/components/schemas/PlatformPartnerNotFoundError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "RejectPlatformPartnerResponse": {
        "required": [
          "partner"
        ],
        "type": "object",
        "properties": {
          "partner": {
            "$ref": "#/components/schemas/PlatformPartner",
            "description": "<p>거절된 파트너</p>\n"
          }
        },
        "description": "<p>파트너 거절 성공 응답</p>\n"
      },
      "RescheduleAdditionalFeePolicyError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformAdditionalFeePolicyNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_ADDITIONAL_FEE_POLICY_NOT_FOUND": "#/components/schemas/PlatformAdditionalFeePolicyNotFoundError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "RescheduleContractError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformContractNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_CONTRACT_NOT_FOUND": "#/components/schemas/PlatformContractNotFoundError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "RescheduleDiscountSharePolicyError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformDiscountSharePolicyNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_DISCOUNT_SHARE_POLICY_NOT_FOUND": "#/components/schemas/PlatformDiscountSharePolicyNotFoundError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "ReschedulePartnerError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformContractNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/PlatformPartnerNotFoundError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_CONTRACT_NOT_FOUND": "#/components/schemas/PlatformContractNotFoundError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "PLATFORM_PARTNER_NOT_FOUND": "#/components/schemas/PlatformPartnerNotFoundError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "ReschedulePlatformAdditionalFeePolicyBody": {
        "required": [
          "update",
          "appliedAt"
        ],
        "type": "object",
        "properties": {
          "update": {
            "$ref": "#/components/schemas/UpdatePlatformAdditionalFeePolicyBody",
            "description": "<p>반영할 업데이트 내용</p>\n"
          },
          "appliedAt": {
            "type": "string",
            "format": "date-time",
            "description": "<p>업데이트 적용 시점</p>\n"
          }
        },
        "description": "<p>추가 수수료 정책 예약 업데이트 재설정을 위한 입력 정보</p>\n"
      },
      "ReschedulePlatformAdditionalFeePolicyResponse": {
        "required": [
          "scheduledAdditionalFeePolicy"
        ],
        "type": "object",
        "properties": {
          "scheduledAdditionalFeePolicy": {
            "$ref": "#/components/schemas/PlatformAdditionalFeePolicy",
            "description": "<p>예약된 추가 수수료 정책</p>\n"
          }
        },
        "description": "<p>추가 수수료 정책 예약 업데이트 재설정 성공 응답</p>\n"
      },
      "ReschedulePlatformContractBody": {
        "required": [
          "update",
          "appliedAt"
        ],
        "type": "object",
        "properties": {
          "update": {
            "$ref": "#/components/schemas/UpdatePlatformContractBody",
            "description": "<p>반영할 업데이트 내용</p>\n"
          },
          "appliedAt": {
            "type": "string",
            "format": "date-time",
            "description": "<p>업데이트 적용 시점</p>\n"
          }
        },
        "description": "<p>계약 예약 업데이트 재설정을 위한 입력 정보</p>\n"
      },
      "ReschedulePlatformContractResponse": {
        "required": [
          "scheduledContract"
        ],
        "type": "object",
        "properties": {
          "scheduledContract": {
            "$ref": "#/components/schemas/PlatformContract",
            "description": "<p>예약된 계약 정보</p>\n"
          }
        },
        "description": "<p>계약 예약 업데이트 재설정 성공 응답</p>\n"
      },
      "ReschedulePlatformDiscountSharePolicyBody": {
        "required": [
          "update",
          "appliedAt"
        ],
        "type": "object",
        "properties": {
          "update": {
            "$ref": "#/components/schemas/UpdatePlatformDiscountSharePolicyBody",
            "description": "<p>반영할 업데이트 내용</p>\n"
          },
          "appliedAt": {
            "type": "string",
            "format": "date-time",
            "description": "<p>업데이트 적용 시점</p>\n"
          }
        },
        "description": "<p>할인 분담 정책 예약 업데이트 재설정을 위한 입력 정보</p>\n"
      },
      "ReschedulePlatformDiscountSharePolicyResponse": {
        "required": [
          "scheduledDiscountSharePolicy"
        ],
        "type": "object",
        "properties": {
          "scheduledDiscountSharePolicy": {
            "$ref": "#/components/schemas/PlatformDiscountSharePolicy",
            "description": "<p>예약된 할인 분담 정보</p>\n"
          }
        },
        "description": "<p>할인 분담 정책 예약 업데이트 재설정 성공 응답</p>\n"
      },
      "ReschedulePlatformPartnerBody": {
        "required": [
          "update",
          "appliedAt"
        ],
        "type": "object",
        "properties": {
          "update": {
            "$ref": "#/components/schemas/UpdatePlatformPartnerBody",
            "description": "<p>반영할 업데이트 내용</p>\n"
          },
          "appliedAt": {
            "type": "string",
            "format": "date-time",
            "description": "<p>업데이트 적용 시점</p>\n"
          }
        },
        "description": "<p>파트너 예약 업데이트 재설정을 위한 입력 정보</p>\n"
      },
      "ReschedulePlatformPartnerResponse": {
        "required": [
          "scheduledPartner"
        ],
        "type": "object",
        "properties": {
          "scheduledPartner": {
            "$ref": "#/components/schemas/PlatformPartner",
            "description": "<p>예약된 파트너 정보</p>\n"
          }
        },
        "description": "<p>파트너 예약 업데이트 재설정 성공 응답</p>\n"
      },
      "ResendIdentityVerificationBody": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "storeId": {
            "type": "string",
            "description": "<p>상점 아이디 (접근 권한이 있는 상점 아이디 입력 가능, 미 입력시 토큰에 담긴 상점 아이디를 사용)</p>\n"
          },
          "id": {
            "type": "string",
            "description": "<p>본인인증 아이디</p>\n"
          }
        },
        "description": "<p>본인인증 요청 재전송을 위한 입력 정보</p>\n"
      },
      "ResendIdentityVerificationError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ForbiddenError"
          },
          {
            "$ref": "#/components/schemas/IdentityVerificationAlreadyVerifiedError"
          },
          {
            "$ref": "#/components/schemas/IdentityVerificationNotFoundError"
          },
          {
            "$ref": "#/components/schemas/IdentityVerificationNotSentError"
          },
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PgProviderError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "FORBIDDEN": "#/components/schemas/ForbiddenError",
            "IDENTITY_VERIFICATION_ALREADY_VERIFIED": "#/components/schemas/IdentityVerificationAlreadyVerifiedError",
            "IDENTITY_VERIFICATION_NOT_FOUND": "#/components/schemas/IdentityVerificationNotFoundError",
            "IDENTITY_VERIFICATION_NOT_SENT": "#/components/schemas/IdentityVerificationNotSentError",
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PG_PROVIDER": "#/components/schemas/PgProviderError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "ResendIdentityVerificationResponse": {
        "type": "object",
        "description": "<p>본인인증 요청 재전송 성공 응답</p>\n"
      },
      "ScheduleAdditionalFeePolicyError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformAdditionalFeePolicyNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformAdditionalFeePolicyScheduleAlreadyExistsError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_ADDITIONAL_FEE_POLICY_NOT_FOUND": "#/components/schemas/PlatformAdditionalFeePolicyNotFoundError",
            "PLATFORM_ADDITIONAL_FEE_POLICY_SCHEDULE_ALREADY_EXISTS": "#/components/schemas/PlatformAdditionalFeePolicyScheduleAlreadyExistsError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "ScheduleContractError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformContractNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformContractScheduleAlreadyExistsError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_CONTRACT_NOT_FOUND": "#/components/schemas/PlatformContractNotFoundError",
            "PLATFORM_CONTRACT_SCHEDULE_ALREADY_EXISTS": "#/components/schemas/PlatformContractScheduleAlreadyExistsError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "ScheduleDiscountSharePolicyError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformDiscountSharePolicyNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformDiscountSharePolicyScheduleAlreadyExistsError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_DISCOUNT_SHARE_POLICY_NOT_FOUND": "#/components/schemas/PlatformDiscountSharePolicyNotFoundError",
            "PLATFORM_DISCOUNT_SHARE_POLICY_SCHEDULE_ALREADY_EXISTS": "#/components/schemas/PlatformDiscountSharePolicyScheduleAlreadyExistsError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "SchedulePartnerError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformContractNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/PlatformPartnerNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformPartnerScheduleAlreadyExistsError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_CONTRACT_NOT_FOUND": "#/components/schemas/PlatformContractNotFoundError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "PLATFORM_PARTNER_NOT_FOUND": "#/components/schemas/PlatformPartnerNotFoundError",
            "PLATFORM_PARTNER_SCHEDULE_ALREADY_EXISTS": "#/components/schemas/PlatformPartnerScheduleAlreadyExistsError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "SchedulePlatformAdditionalFeePolicyBody": {
        "required": [
          "update",
          "appliedAt"
        ],
        "type": "object",
        "properties": {
          "update": {
            "$ref": "#/components/schemas/UpdatePlatformAdditionalFeePolicyBody",
            "description": "<p>반영할 업데이트 내용</p>\n"
          },
          "appliedAt": {
            "type": "string",
            "format": "date-time",
            "description": "<p>업데이트 적용 시점</p>\n"
          }
        },
        "description": "<p>추가 수수료 정책 업데이트 예약을 위한 입력 정보</p>\n"
      },
      "SchedulePlatformAdditionalFeePolicyResponse": {
        "required": [
          "scheduledAdditionalFeePolicy"
        ],
        "type": "object",
        "properties": {
          "scheduledAdditionalFeePolicy": {
            "$ref": "#/components/schemas/PlatformAdditionalFeePolicy",
            "description": "<p>예약된 추가 수수료 정책</p>\n"
          }
        },
        "description": "<p>추가 수수료 정책 업데이트 예약 성공 응답</p>\n"
      },
      "SchedulePlatformContractBody": {
        "required": [
          "update",
          "appliedAt"
        ],
        "type": "object",
        "properties": {
          "update": {
            "$ref": "#/components/schemas/UpdatePlatformContractBody",
            "description": "<p>반영할 업데이트 내용</p>\n"
          },
          "appliedAt": {
            "type": "string",
            "format": "date-time",
            "description": "<p>업데이트 적용 시점</p>\n"
          }
        },
        "description": "<p>계약 업데이트 예약을 위한 입력 정보</p>\n"
      },
      "SchedulePlatformContractResponse": {
        "required": [
          "scheduledContract"
        ],
        "type": "object",
        "properties": {
          "scheduledContract": {
            "$ref": "#/components/schemas/PlatformContract",
            "description": "<p>예약된 계약 정보</p>\n"
          }
        },
        "description": "<p>계약 업데이트 예약 성공 응답</p>\n"
      },
      "SchedulePlatformDiscountSharePolicyBody": {
        "required": [
          "update",
          "appliedAt"
        ],
        "type": "object",
        "properties": {
          "update": {
            "$ref": "#/components/schemas/UpdatePlatformDiscountSharePolicyBody",
            "description": "<p>반영할 업데이트 내용</p>\n"
          },
          "appliedAt": {
            "type": "string",
            "format": "date-time",
            "description": "<p>업데이트 적용 시점</p>\n"
          }
        },
        "description": "<p>할인 분담 정책 업데이트 예약을 위한 입력 정보</p>\n"
      },
      "SchedulePlatformDiscountSharePolicyResponse": {
        "required": [
          "scheduledDiscountSharePolicy"
        ],
        "type": "object",
        "properties": {
          "scheduledDiscountSharePolicy": {
            "$ref": "#/components/schemas/PlatformDiscountSharePolicy",
            "description": "<p>예약된 할인 분담 정보</p>\n"
          }
        },
        "description": "<p>할인 분담 정책 업데이트 예약 성공 응답</p>\n"
      },
      "SchedulePlatformPartnerBody": {
        "required": [
          "update",
          "appliedAt"
        ],
        "type": "object",
        "properties": {
          "update": {
            "$ref": "#/components/schemas/UpdatePlatformPartnerBody",
            "description": "<p>반영할 업데이트 내용</p>\n"
          },
          "appliedAt": {
            "type": "string",
            "format": "date-time",
            "description": "<p>업데이트 적용 시점</p>\n"
          }
        },
        "description": "<p>파트너 업데이트 예약을 위한 입력 정보</p>\n"
      },
      "SchedulePlatformPartnerBodyUpdateAccount": {
        "required": [
          "bank",
          "currency",
          "number",
          "holder"
        ],
        "type": "object",
        "properties": {
          "bank": {
            "$ref": "#/components/schemas/Bank",
            "description": "<p>은행</p>\n"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency",
            "description": "<p>정산에 사용할 통화</p>\n"
          },
          "number": {
            "type": "string",
            "description": "<p>계좌번호</p>\n"
          },
          "holder": {
            "type": "string",
            "description": "<p>예금주명</p>\n"
          }
        },
        "description": "<p>파트너 계좌 업데이트를 위한 입력 정보</p>\n"
      },
      "SchedulePlatformPartnerResponse": {
        "required": [
          "scheduledPartner"
        ],
        "type": "object",
        "properties": {
          "scheduledPartner": {
            "$ref": "#/components/schemas/PlatformPartner",
            "description": "<p>예약된 파트너 정보</p>\n"
          }
        },
        "description": "<p>파트너 업데이트 예약 성공 응답</p>\n"
      },
      "SchedulePlatformPartnersBody": {
        "required": [
          "update",
          "appliedAt"
        ],
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/PlatformPartnerFilterInput"
          },
          "update": {
            "$ref": "#/components/schemas/SchedulePlatformPartnersBodyUpdate"
          },
          "appliedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SchedulePlatformPartnersBodyUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "businessRegistrationNumber": {
            "type": "string"
          },
          "account": {
            "$ref": "#/components/schemas/SchedulePlatformPartnerBodyUpdateAccount"
          },
          "defaultContractId": {
            "type": "string"
          },
          "memo": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isHidden": {
            "type": "boolean"
          }
        }
      },
      "SchedulePlatformPartnersError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformContractNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/PlatformPartnerSchedulesAlreadyExistError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_CONTRACT_NOT_FOUND": "#/components/schemas/PlatformContractNotFoundError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "PLATFORM_PARTNER_SCHEDULES_ALREADY_EXIST": "#/components/schemas/PlatformPartnerSchedulesAlreadyExistError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "SchedulePlatformPartnersResponse": {
        "type": "object"
      },
      "SelectedChannel": {
        "required": [
          "type",
          "pgProvider",
          "pgMerchantId"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SelectedChannelType",
            "description": "<p>채널 타입</p>\n"
          },
          "id": {
            "type": "string",
            "description": "<p>채널 아이디</p>\n"
          },
          "key": {
            "type": "string",
            "description": "<p>채널 키</p>\n"
          },
          "name": {
            "type": "string",
            "description": "<p>채널 명</p>\n"
          },
          "pgProvider": {
            "$ref": "#/components/schemas/PgProvider",
            "description": "<p>PG사</p>\n"
          },
          "pgMerchantId": {
            "type": "string",
            "description": "<p>PG사 가맹점 식별 아이디</p>\n"
          }
        },
        "description": "<p>(결제, 본인인증 등에) 선택된 채널 정보</p>\n"
      },
      "SelectedChannelType": {
        "type": "string",
        "description": "<p>채널 타입</p>\n",
        "enum": [
          "LIVE",
          "TEST"
        ],
        "x-portone-cases": [
          {
            "case": "LIVE",
            "x-portone-name": "실 연동 채널"
          },
          {
            "case": "TEST",
            "x-portone-name": "테스트 연동 채널"
          }
        ]
      },
      "SendIdentityVerificationBody": {
        "required": [
          "id",
          "channelKey",
          "customer",
          "operator",
          "method"
        ],
        "type": "object",
        "properties": {
          "storeId": {
            "type": "string",
            "description": "<p>상점 아이디 (접근 권한이 있는 상점 아이디 입력 가능, 미 입력시 토큰에 담긴 상점 아이디를 사용)</p>\n"
          },
          "id": {
            "type": "string",
            "description": "<p>본인인증 아이디</p>\n"
          },
          "channelKey": {
            "type": "string",
            "description": "<p>채널 키</p>\n"
          },
          "customer": {
            "$ref": "#/components/schemas/SendIdentityVerificationBodyCustomer",
            "description": "<p>고객 정보</p>\n"
          },
          "customData": {
            "type": "string",
            "description": "<p>사용자 정의 데이터</p>\n"
          },
          "bypass": {
            "type": "string",
            "description": "<p>PG사 별 추가 데이터</p>\n"
          },
          "operator": {
            "$ref": "#/components/schemas/IdentityVerificationOperator",
            "description": "<p>통신사</p>\n"
          },
          "method": {
            "$ref": "#/components/schemas/IdentityVerificationMethod",
            "description": "<p>본인인증 수단</p>\n"
          }
        },
        "description": "<p>본인인증 요청 양식</p>\n"
      },
      "SendIdentityVerificationBodyCustomer": {
        "required": [
          "name",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "<p>식별 아이디</p>\n"
          },
          "name": {
            "type": "string",
            "description": "<p>고객 성명</p>\n"
          },
          "phoneNumber": {
            "type": "string",
            "description": "<p>핸드폰 번호. 특수 문자(-) 없이 숫자로만 이루어진 번호 형식</p>\n"
          },
          "identityNumber": {
            "type": "string",
            "description": "<p>주민등록번호 앞 7자리 (SMS 방식의 경우 필수 입력)</p>\n"
          }
        },
        "description": "<p>고객 정보 입력 형식</p>\n"
      },
      "SendIdentityVerificationError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ChannelNotFoundError"
          },
          {
            "$ref": "#/components/schemas/ForbiddenError"
          },
          {
            "$ref": "#/components/schemas/IdentityVerificationAlreadySentError"
          },
          {
            "$ref": "#/components/schemas/IdentityVerificationAlreadyVerifiedError"
          },
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PgProviderError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "CHANNEL_NOT_FOUND": "#/components/schemas/ChannelNotFoundError",
            "FORBIDDEN": "#/components/schemas/ForbiddenError",
            "IDENTITY_VERIFICATION_ALREADY_SENT": "#/components/schemas/IdentityVerificationAlreadySentError",
            "IDENTITY_VERIFICATION_ALREADY_VERIFIED": "#/components/schemas/IdentityVerificationAlreadyVerifiedError",
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PG_PROVIDER": "#/components/schemas/PgProviderError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "SendIdentityVerificationResponse": {
        "type": "object",
        "description": "<p>본인인증 요청 전송 성공 응답</p>\n"
      },
      "UnauthorizedError": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "description": "<p>인증 정보가 올바르지 않은 경우</p>\n"
      },
      "UpdatePayoutAllPartnerSettlementsBody": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/PlatformPayoutPartnerSettlementStatus"
          }
        }
      },
      "UpdatePayoutAllPartnerSettlementsError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ForbiddenError"
          },
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/PlatformPayoutAlreadyCompletedError"
          },
          {
            "$ref": "#/components/schemas/PlatformPayoutCreatorMismatchedError"
          },
          {
            "$ref": "#/components/schemas/PlatformPayoutNotFoundError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "FORBIDDEN": "#/components/schemas/ForbiddenError",
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "PLATFORM_PAYOUT_ALREADY_COMPLETED": "#/components/schemas/PlatformPayoutAlreadyCompletedError",
            "PLATFORM_PAYOUT_CREATOR_MISMATCHED": "#/components/schemas/PlatformPayoutCreatorMismatchedError",
            "PLATFORM_PAYOUT_NOT_FOUND": "#/components/schemas/PlatformPayoutNotFoundError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "UpdatePayoutAllPartnerSettlementsResponse": {
        "required": [
          "payout"
        ],
        "type": "object",
        "properties": {
          "payout": {
            "$ref": "#/components/schemas/PlatformPayout"
          }
        }
      },
      "UpdatePlatformAdditionalFeePolicyBody": {
        "type": "object",
        "properties": {
          "fee": {
            "$ref": "#/components/schemas/PlatformFeeInput",
            "description": "<p>책정 수수료</p>\n"
          },
          "memo": {
            "type": "string",
            "description": "<p>해당 추가 수수료 정책에 대한 메모</p>\n"
          },
          "vatPayer": {
            "$ref": "#/components/schemas/PlatformPayer",
            "description": "<p>부가세를 부담할 주체</p>\n"
          },
          "isHidden": {
            "type": "boolean",
            "description": "<p>숨김 여부</p>\n"
          }
        },
        "description": "<p>추가 수수료 정책 업데이트를 위한 입력 정보. 값이 명시하지 않은 필드는 업데이트되지 않습니다.</p>\n"
      },
      "UpdatePlatformAdditionalFeePolicyError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformAdditionalFeePolicyNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_ADDITIONAL_FEE_POLICY_NOT_FOUND": "#/components/schemas/PlatformAdditionalFeePolicyNotFoundError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "UpdatePlatformAdditionalFeePolicyResponse": {
        "required": [
          "additionalFeePolicy"
        ],
        "type": "object",
        "properties": {
          "additionalFeePolicy": {
            "$ref": "#/components/schemas/PlatformAdditionalFeePolicy",
            "description": "<p>업데이트된 추가 수수료 정책</p>\n"
          }
        },
        "description": "<p>추가 수수료 정책 업데이트 성공 응답</p>\n"
      },
      "UpdatePlatformBody": {
        "type": "object",
        "properties": {
          "roundType": {
            "$ref": "#/components/schemas/PlatformRoundType",
            "description": "<p>파트너 정산금액의 소수점 처리 방식</p>\n"
          },
          "settlementFormula": {
            "$ref": "#/components/schemas/UpdatePlatformBodySettlementFormula",
            "description": "<p>수수료 및 할인 분담 정책 관련 계산식</p>\n"
          }
        },
        "description": "<p>플랫폼 업데이트를 위한 입력 정보입니다. 값이 명시되지 않은 필드는 업데이트하지 않습니다.</p>\n"
      },
      "UpdatePlatformBodySettlementFormula": {
        "type": "object",
        "properties": {
          "platformFee": {
            "type": "string",
            "description": "<p>플랫폼 수수료 계산식</p>\n"
          },
          "discountShare": {
            "type": "string",
            "description": "<p>할인 분담액 계산식</p>\n"
          },
          "additionalFee": {
            "type": "string",
            "description": "<p>추가 수수료 계산식</p>\n"
          }
        },
        "description": "<p>플랫폼 업데이트 시 변경할 계산식 정보입니다. 값이 명시되지 않은 필드는 업데이트하지 않습니다.</p>\n"
      },
      "UpdatePlatformContractBody": {
        "type": "object",
        "properties": {
          "memo": {
            "type": "string",
            "description": "<p>계약 내부 표기를 위한 메모</p>\n"
          },
          "platformFee": {
            "$ref": "#/components/schemas/PlatformFeeInput",
            "description": "<p>중개수수료</p>\n"
          },
          "settlementCycle": {
            "$ref": "#/components/schemas/PlatformSettlementCycleInput",
            "description": "<p>정산 주기</p>\n"
          },
          "platformFeeVatPayer": {
            "$ref": "#/components/schemas/PlatformPayer",
            "description": "<p>중개수수료에 대한 부가세 부담 주체</p>\n"
          },
          "isHidden": {
            "type": "boolean",
            "description": "<p>숨김 여부</p>\n"
          }
        },
        "description": "<p>계약 업데이트를 위한 입력 정보. 값이 명시되지 않은 필드는 업데이트되지 않습니다.</p>\n"
      },
      "UpdatePlatformContractError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformContractNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_CONTRACT_NOT_FOUND": "#/components/schemas/PlatformContractNotFoundError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "UpdatePlatformContractResponse": {
        "required": [
          "contract"
        ],
        "type": "object",
        "properties": {
          "contract": {
            "$ref": "#/components/schemas/PlatformContract",
            "description": "<p>업데이트된 계약 객체</p>\n"
          }
        },
        "description": "<p>계약 객체 업데이트 성공 응답</p>\n"
      },
      "UpdatePlatformDiscountSharePolicyBody": {
        "type": "object",
        "properties": {
          "partnerShareRate": {
            "type": "integer",
            "format": "int32",
            "description": "<p>할인 분담율. 파트너가 분담할 할인금액의 비율을 의미하는 밀리 퍼센트 단위 (10^-5) 의 음이 아닌 정수이며, 파트너가 부담할 금액은 <code>할인금액 * partnerShareRate * 10^5</code> 로 책정합니다.</p>\n"
          },
          "memo": {
            "type": "string",
            "description": "<p>해당 할인 분담에 대한 메모</p>\n"
          },
          "isHidden": {
            "type": "boolean",
            "description": "<p>숨김 여부</p>\n"
          }
        },
        "description": "<p>할인 분담 정책 업데이트를 위한 입력 정보. 값이 명시되지 않은 필드는 업데이트하지 않습니다.</p>\n"
      },
      "UpdatePlatformDiscountSharePolicyError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformDiscountSharePolicyNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_DISCOUNT_SHARE_POLICY_NOT_FOUND": "#/components/schemas/PlatformDiscountSharePolicyNotFoundError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "UpdatePlatformDiscountSharePolicyResponse": {
        "required": [
          "discountSharePolicy"
        ],
        "type": "object",
        "properties": {
          "discountSharePolicy": {
            "$ref": "#/components/schemas/PlatformDiscountSharePolicy",
            "description": "<p>업데이트된 할인 분담 정책</p>\n"
          }
        },
        "description": "<p>할인 분담 정책 업데이트 성공 응답</p>\n"
      },
      "UpdatePlatformError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformInvalidSettlementFormulaError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_INVALID_SETTLEMENT_FORMULA": "#/components/schemas/PlatformInvalidSettlementFormulaError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "UpdatePlatformPartnerBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "<p>파트너 법인명 혹은 이름</p>\n"
          },
          "email": {
            "type": "string",
            "description": "<p>파트너 이메일</p>\n"
          },
          "businessRegistrationNumber": {
            "type": "string",
            "description": "<p>파트너의 사업자등록번호. 개인 혹은 법인 사업자일 때만 명시합니다.</p>\n"
          },
          "account": {
            "$ref": "#/components/schemas/UpdatePlatformPartnerBodyAccount",
            "description": "<p>정산 계좌</p>\n"
          },
          "defaultContractId": {
            "type": "string",
            "description": "<p>파트너에 설정된 기본 계약 아이디</p>\n"
          },
          "memo": {
            "type": "string",
            "description": "<p>파트너에 대한 메모</p>\n"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "<p>파트너의 태그 리스트</p>\n"
          },
          "isHidden": {
            "type": "boolean",
            "description": "<p>숨김 여부</p>\n"
          }
        },
        "description": "<p>파트너 업데이트를 위한 입력 정보입니다. 값이 명시되지 않은 필드는 업데이트되지 않습니다.</p>\n"
      },
      "UpdatePlatformPartnerBodyAccount": {
        "required": [
          "bank",
          "currency",
          "number",
          "holder"
        ],
        "type": "object",
        "properties": {
          "bank": {
            "$ref": "#/components/schemas/Bank",
            "description": "<p>은행</p>\n"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency",
            "description": "<p>정산에 사용할 통화</p>\n"
          },
          "number": {
            "type": "string",
            "description": "<p>계좌번호</p>\n"
          },
          "holder": {
            "type": "string",
            "description": "<p>예금주명</p>\n"
          }
        },
        "description": "<p>파트너 계좌 업데이트를 위한 입력 정보</p>\n"
      },
      "UpdatePlatformPartnerError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformContractNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/PlatformPartnerNotFoundError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_CONTRACT_NOT_FOUND": "#/components/schemas/PlatformContractNotFoundError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "PLATFORM_PARTNER_NOT_FOUND": "#/components/schemas/PlatformPartnerNotFoundError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "UpdatePlatformPartnerResponse": {
        "required": [
          "partner"
        ],
        "type": "object",
        "properties": {
          "partner": {
            "$ref": "#/components/schemas/PlatformPartner",
            "description": "<p>업데이트된 파트너</p>\n"
          }
        },
        "description": "<p>파트너 업데이트 성공 응답</p>\n"
      },
      "UpdatePlatformPayoutPartnerSettlementBody": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/PlatformPayoutPartnerSettlementStatus"
          }
        }
      },
      "UpdatePlatformPayoutPartnerSettlementError": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ForbiddenError"
          },
          {
            "$ref": "#/components/schemas/InvalidRequestError"
          },
          {
            "$ref": "#/components/schemas/PlatformNotEnabledError"
          },
          {
            "$ref": "#/components/schemas/PlatformPayoutCreatorMismatchedError"
          },
          {
            "$ref": "#/components/schemas/PlatformPayoutNotFoundError"
          },
          {
            "$ref": "#/components/schemas/PlatformPayoutPartnerSettlementAlreadyPaidOutError"
          },
          {
            "$ref": "#/components/schemas/PlatformPayoutPartnerSettlementNotFoundError"
          },
          {
            "$ref": "#/components/schemas/UnauthorizedError"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "FORBIDDEN": "#/components/schemas/ForbiddenError",
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "PLATFORM_NOT_ENABLED": "#/components/schemas/PlatformNotEnabledError",
            "PLATFORM_PAYOUT_CREATOR_MISMATCHED": "#/components/schemas/PlatformPayoutCreatorMismatchedError",
            "PLATFORM_PAYOUT_NOT_FOUND": "#/components/schemas/PlatformPayoutNotFoundError",
            "PLATFORM_PAYOUT_PARTNER_SETTLEMENT_ALREADY_PAID_OUT": "#/components/schemas/PlatformPayoutPartnerSettlementAlreadyPaidOutError",
            "PLATFORM_PAYOUT_PARTNER_SETTLEMENT_NOT_FOUND": "#/components/schemas/PlatformPayoutPartnerSettlementNotFoundError",
            "UNAUTHORIZED": "#/components/schemas/UnauthorizedError"
          }
        }
      },
      "UpdatePlatformPayoutPartnerSettlementResponse": {
        "required": [
          "payoutPartnerSettlement",
          "payout"
        ],
        "type": "object",
        "properties": {
          "payoutPartnerSettlement": {
            "$ref": "#/components/schemas/PlatformPayoutPartnerSettlement"
          },
          "payout": {
            "$ref": "#/components/schemas/PlatformPayout"
          }
        }
      },
      "UpdatePlatformResponse": {
        "required": [
          "platform"
        ],
        "type": "object",
        "properties": {
          "platform": {
            "$ref": "#/components/schemas/Platform",
            "description": "<p>업데이트된 플랫폼 정보</p>\n"
          }
        },
        "description": "<p>플랫폼 업데이트 결과 정보</p>\n"
      },
      "VerifiedIdentityVerification": {
        "required": [
          "status",
          "id",
          "verifiedCustomer",
          "requestedAt",
          "updatedAt",
          "statusChangedAt",
          "verifiedAt",
          "pgTxId",
          "pgRawResponse"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "<p>본인인증 상태</p>\n"
          },
          "id": {
            "type": "string",
            "description": "<p>본인인증 건 아이디</p>\n"
          },
          "channel": {
            "$ref": "#/components/schemas/SelectedChannel",
            "description": "<p>채널 정보</p>\n"
          },
          "verifiedCustomer": {
            "$ref": "#/components/schemas/IdentityVerificationVerifiedCustomer",
            "description": "<p>인증된 고객 정보</p>\n"
          },
          "customData": {
            "type": "string",
            "description": "<p>사용자 지정 데이터</p>\n"
          },
          "requestedAt": {
            "type": "string",
            "format": "date-time",
            "description": "<p>본인인증 요청 시각</p>\n"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "<p>업데이트 시각</p>\n"
          },
          "statusChangedAt": {
            "type": "string",
            "format": "date-time",
            "description": "<p>상태 업데이트 시각</p>\n"
          },
          "verifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "<p>본인인증 완료 시각</p>\n"
          },
          "pgTxId": {
            "type": "string",
            "description": "<p>본인인증 건 PG사 아이디</p>\n"
          },
          "pgRawResponse": {
            "type": "string",
            "description": "<p>PG사 응답 데이터</p>\n"
          }
        },
        "description": "<p>본인인증 완료 상태 건</p>\n"
      }
    },
    "securitySchemes": {
      "bearerJwt": {
        "type": "http",
        "description": "<p>Authorization: Bearer <code>엑세스 토큰</code></p>\n",
        "scheme": "bearer"
      }
    }
  },
  "x-portone-definitions": [
    {
      "name": "x-portone-unstable",
      "description": "<p>값이 true 이면 대상의 하위호환성이 보장되지 않음을 나타냅니다.\nIf true, the target definition does not guarentee backward compatibility.</p>\n"
    },
    {
      "name": "x-portone-hidden",
      "description": "<p>값이 true 이면 대상이 PortOne Public API 지원 대상에 공식적으로 포함되지 않음을 명시합니다.\nIf true, the target definition is excluded from PortOne Public API specification.</p>\n"
    },
    {
      "name": "x-portone-fields",
      "description": "<p>대상 object 의 필드에 관련된 추가 정보를 가집니다.\nContains additional information about the fields of the target object.</p>\n"
    },
    {
      "name": "x-portone-cases",
      "description": "<p>대상 enum 또는 oneof object 의 케이스에 관련된 추가 정보를 가집니다.\nContains additional information about the cases of the target enum or oneof object.</p>\n"
    }
  ]
}