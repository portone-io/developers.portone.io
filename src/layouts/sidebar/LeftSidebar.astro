---
import type { Lang } from "~/type";
import { navMenuAncestorsSignal, navMenuSignal } from "~/state/server-only/nav";
import { navOpenStatesSignal, slugSignal } from "~/state/nav";

import LeftSidebarItem from "./LeftSidebarItem";
import { SearchButton } from "./search";

interface Props {
  lang: Lang;
  slug: string;
}
const { lang, slug } = Astro.props;

const navMenu = navMenuSignal.value;
const navMenuItems = navMenu[lang] || [];
const navMenuAncestors = navMenuAncestorsSignal.value;
const navOpenStates = (navOpenStatesSignal.value = Object.fromEntries([
  ...(navMenuAncestors[slug]?.map((ancestor) => [ancestor, true]) || []),
  [slug, true],
]));
slugSignal.value = slug;
---

<script>
  import { navOpenStatesSignal, slugSignal } from "~/state/nav";
  const leftSidebar = document.getElementById("left-sidebar")!;
  navOpenStatesSignal.value = {
    ...navOpenStatesSignal.value,
    ...JSON.parse(leftSidebar.dataset.navopenstates!),
  };
  slugSignal.value = leftSidebar.dataset.slug!;
  const scrollArea: HTMLElement =
    leftSidebar.querySelector(".overflow-y-scroll")!;
  const activeElement = scrollArea.querySelector("[data-active=active]");
  if (activeElement) {
    scrollArea.scrollTop =
      activeElement.getBoundingClientRect().top -
      scrollArea.getBoundingClientRect().top -
      30;
  }
</script>
<aside
  id="left-sidebar"
  class="w-65 relative hidden shrink-0 text-slate-700 md:block"
  data-slug={slug}
  data-navopenstates={JSON.stringify(navOpenStates)}
>
  <div class="w-inherit flex flex-col fixed h-[calc(100%-3.5rem)] border-r bg-white">
    <div class="flex p-2">
      <SearchButton lang={lang} client:visible />
    </div>
    <nav class="relative flex-1 overflow-y-scroll">
      <ul class="flex flex-col gap-1 p-2 py-4">
        {
          navMenuItems.map((item) => {
            if (item.type === "group") {
              return (
                <li>
                  <h4 class="text-gray mt-4 p-2 text-xs font-bold tracking-widest first:mt-0">
                    {item.label}
                  </h4>
                  <ul class="flex flex-col gap-1">
                    {item.items.map((item) => (
                      <li>
                        <LeftSidebarItem client:visible {...item} />
                      </li>
                    ))}
                  </ul>
                </li>
              );
            }
            if (item.slug === "===") {
              return (
                <li>
                  <hr class="mx-2 my-4" />
                </li>
              );
            }
            return (
              <li>
                <LeftSidebarItem client:visible {...item} />
              </li>
            );
          })
        }
      </ul>
    </nav>
  </div>
</aside>
