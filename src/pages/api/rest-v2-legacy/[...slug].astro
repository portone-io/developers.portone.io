---
import { getCollection } from "astro:content";

import type { Lang } from "~/type";
import * as prose from "~/components/prose";
import LeftSidebar from "~/layouts/sidebar/LeftSidebar.astro";
import RightSidebar, { headingsToToc } from "~/layouts/sidebar/RightSidebar";
import Trackers from "~/layouts/Trackers.astro";
import ArticleStyle from "~/layouts/ArticleStyle.astro";
import TrackingScript from "~/layouts/TrackingScript.astro";
import Logo from "~/layouts/gnb/Logo.astro";
import MobileMenuButton from "~/layouts/gnb/MobileMenuButton";
import { JustLink } from "~/layouts/sidebar/LeftSidebarItem";

export async function getStaticPaths() {
  const docEntries = await getCollection("docs");
  const legacyV2ApiEntries = docEntries.filter((entry) =>
    entry.slug.startsWith("ko/api-v2/")
  );
  return legacyV2ApiEntries.map((entry) => {
    const [_ko, _apiv2, ...fragments] = entry.slug.split("/");
    const slug = fragments.join("/");
    return { params: { slug }, props: { entry, slug } };
  });
}

const lang: Lang = "ko";
const { entry, slug } = Astro.props;
const { title, description } = entry.data;
const mdx = await entry.render();
const Content = mdx.Content;

const toc = headingsToToc("ko", mdx.headings);
---

<html lang={lang}>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <meta name="generator" content={Astro.generator} />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <title>{title}</title>
    <Trackers />
  </head>
  <body>
    <TrackingScript />
    <style is:global>
      :root {
        word-break: break-all;
        overflow-wrap: break-word;
        scroll-behavior: smooth;
      }

      html,
      body {
        height: 100%;
      }
    </style>
    <ArticleStyle />
    <div class="flex h-full flex-col">
      <div class="h-14">
        <header
          class="h-inherit fixed z-10 flex w-full items-center justify-between border-b bg-white pl-6"
        >
          <div class="flex h-full items-center gap-20">
            <a
              class="inline-flex h-full items-center"
              href="/api/rest-v2-legacy"
            >
              <div class="flex items-center gap-2">
                <Logo class="w-22" />
                <span>V2 API - Beta</span>
              </div>
            </a>
          </div>
          <MobileMenuButton client:visible />
        </header>
      </div>
      <main class="min-h-0 flex-1">
        <div class="flex">
          <LeftSidebar>
            <div class="flex flex-col gap-2 p-4 text-center">
              <span class="text-red-5 text-sm"
                >Deprecated 된 API 문서입니다</span
              >
              <a
                href="/api/rest-v2"
                class="hover:bg-slate-1 mx-4 rounded border p-2 font-bold"
                >최신 문서 보기</a
              >
            </div>
            <hr class="mb-4 mt-2" />
            <div class="flex flex-col gap-1 p-2">
              {
                [
                  { title: "V2 API 시작하기", slug: "v2-api" },
                  { title: "인증 관련 API", slug: "authorization" },
                  { title: "채널 관련 API", slug: "channel" },
                  { title: "결제 관련 API", slug: "payment" },
                  { title: "본인인증 관련 API", slug: "identity-verification" },
                  { title: "현금영수증 관련 API", slug: "cash_receipt" },
                  { title: "정기결제 관련 API", slug: "schedule" },
                  { title: "빌링키 관련 API", slug: "billing_key" },
                  {
                    title: "가맹점관리 관련 API - 별도 계약 필요",
                    slug: "store",
                  },
                  {
                    title: "온보딩 API - 별도 계약 필요",
                    slug: "applications",
                  },
                ].map((item) => (
                  <JustLink
                    title={item.title}
                    href={`/api/rest-v2-legacy/${item.slug}`}
                    isActive={item.slug === slug}
                  />
                ))
              }
            </div>
          </LeftSidebar>
          <div class="flex flex-1 justify-center">
            <article
              class="basis-200 shrink-1 m-4 flex flex-col text-slate-700"
            >
              <prose.h1 id="overview">
                {title}
              </prose.h1>
              {
                description && (
                  <p class="text-gray my-4 text-xl">{description}</p>
                )
              }
              <Content components={prose} />
            </article>
            <div class="shrink-10 hidden basis-10 lg:block"></div>
            <RightSidebar
              lang={lang}
              slug={slug}
              toc={toc}
              editThisPagePrefix="https://github.com/portone-io/developers.portone.io/blob/main/src/content/docs/ko/api-v2/"
              client:idle
            />
          </div>
        </div>
      </main>
    </div>
  </body>
</html>
