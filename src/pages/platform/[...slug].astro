---
import { getCollection } from "astro:content";

import Logo from "~/layouts/gnb/Logo.astro";
import * as prose from "~/components/prose";
import Trackers from "~/layouts/Trackers.astro";
import ArticleStyle from "~/layouts/ArticleStyle.astro";
import RightSidebar, { headingsToToc } from "~/layouts/sidebar/RightSidebar";
import GnbLink from "~/layouts/platform/GnbLink";
import ContactLink from "~/layouts/platform/ContactLink";

export async function getStaticPaths() {
  const docEntries = await getCollection("docs");
  const platformEntries = docEntries.filter((entry) =>
    entry.slug.startsWith("ko/platform/")
  );
  return platformEntries.map((entry) => {
    const [_ko, _platform, ...fragments] = entry.slug.split("/");
    const slug = fragments.join("/");
    return { params: { slug }, props: { entry, slug } };
  });
}

const { entry, slug } = Astro.props;
const { title, description } = entry.data;
const mdx = await entry.render();
const Content = mdx.Content;

const toc = headingsToToc("ko", mdx.headings);
---

<html lang="ko">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <meta name="generator" content={Astro.generator} />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <title>{title}</title>
    <Trackers />
  </head>
  <body>
    <script type="text/javascript">
      trackEvent("Developers_Page_View", {
        title: document.title,
        pathname: location.pathname,
      });
      [
        { ms: 1000, time: "1s" },
        { ms: 10000, time: "10s" },
        { ms: 30000, time: "30s" },
        { ms: 60000, time: "1m" },
        { ms: 600000, time: "10m" },
        { ms: 1800000, time: "30m" },
      ].map(({ ms, time }) => {
        setTimeout(() => {
          trackEvent("Developers_Page_Stay", {
            title: document.title,
            pathname: location.pathname,
            time,
          });
        }, ms);
      });
      // https://mixpanel.com/blog/link-tracking-in-mixpanel/
      window.addEventListener("click", (e) => {
        const a = e.target.closest("a");
        if (!a) return;
        const targetIsSelf = !a.target || a.target === "_self";
        if (targetIsSelf) e.preventDefault();
        trackEvent(
          "Developers_Link_Click",
          {
            label: a.textContent.trim(),
            from: location.pathname,
            to: a.href,
          },
          () => targetIsSelf && (location.href = a.href)
        );
      });
    </script>
    <style is:global>
      :root {
        word-break: keep-all;
        overflow-wrap: break-word;
      }
      html,
      body {
        height: 100%;
      }
    </style>
    <ArticleStyle />
    <div class="flex h-full flex-col">
      <div class="h-14">
        <header
          class="h-inherit fixed z-10 flex w-full items-center justify-between border-b bg-white pl-6"
        >
          <div class="flex h-full items-center gap-20">
            <a href="/platform/guide">
              <div class="flex items-center gap-2">
                <Logo class="w-22" />
                <span>파트너정산</span>
              </div>
            </a>
            <div class="hidden h-full items-center gap-4 md:flex">
              <GnbLink client:visible slug="guide" active={slug === "guide"}>
                서비스 가이드
              </GnbLink>
              <GnbLink client:visible slug="api" active={slug === "api"}>
                API 문서
              </GnbLink>
              <GnbLink
                client:visible
                slug="examples"
                active={slug === "examples"}
              >
                사용예제
              </GnbLink>
            </div>
          </div>
          <ContactLink client:visible />
        </header>
      </div>

      <main class="min-h-0 flex-1">
        <div class="flex">
          <div class="flex flex-1 justify-center">
            <article
              class="basis-200 shrink-1 m-4 flex flex-col text-slate-700"
            >
              <prose.h1 id="overview">
                {title}
              </prose.h1>
              {
                description && (
                  <p class="text-gray my-4 text-xl">{description}</p>
                )
              }
              <Content components={prose} />
            </article>
            <div class="shrink-10 hidden basis-10 lg:block"></div>
            <RightSidebar
              lang="ko"
              slug={slug}
              toc={toc}
              editThisPagePrefix="https://github.com/portone-io/developers.portone.io/blob/main/src/content/docs/ko/platform/"
              client:idle
            />
          </div>
        </div>
      </main>
    </div>
  </body>
</html>
