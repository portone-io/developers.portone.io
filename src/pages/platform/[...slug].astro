---
import { getCollection } from "astro:content";

import Logo from "~/layouts/gnb/Logo.astro";
import MobileMenuButton from "~/layouts/gnb/MobileMenuButton";
import * as prose from "~/components/prose";
import RightSidebar, { headingsToToc } from "~/layouts/sidebar/RightSidebar";

export async function getStaticPaths() {
  const docEntries = await getCollection("docs");
  const platformEntries = docEntries.filter((entry) =>
    entry.slug.startsWith("ko/platform/")
  );
  return platformEntries.map((entry) => {
    const [_ko, _platform, ...fragments] = entry.slug.split("/");
    const slug = fragments.join("/");
    return { params: { slug }, props: { entry, slug } };
  });
}

const { entry, slug } = Astro.props;
const { title, description } = entry.data;
const mdx = await entry.render();
const Content = mdx.Content;

const toc = headingsToToc("ko", mdx.headings);
---

<html lang="ko">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <meta name="generator" content={Astro.generator} />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <title>{title}</title>
    <!-- Google Tag Manager -->
    <script>
      // prettier-ignore
      (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
      new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
      j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
      'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
      })(window,document,'script','dataLayer','GTM-PSHZN9XB');
    </script>
    <!-- End Google Tag Manager -->
  </head>
  <body>
    <!-- Google Tag Manager (noscript) -->
    <!-- prettier-ignore -->
    <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PSHZN9XB"
      height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
    <!-- End Google Tag Manager (noscript) -->
    <style is:global>
      :root {
        word-break: keep-all;
        overflow-wrap: break-word;
      }

      html,
      body {
        height: 100%;
      }

      article a {
        word-break: break-all;
      }
      article code {
        padding: 0 0.25rem; /* p-1 */
        border-radius: 0.25rem; /* rounded */
        background-color: rgb(241, 245, 249); /* bg-slate-1 */
        color: #eb5757;
        word-break: break-all;
      }
      article code .line.highlighted {
        background-color: rgb(255, 237, 213); /* bg-orange-1 */
      }
      article mark {
        background: none;
      }
      article div[data-rehype-pretty-code-fragment] {
        margin: 1em 0;
        padding: 0.5em 1em;
        border-radius: 0.25em;
        background-color: rgb(241, 245, 249, 0.5); /* bg-slate-1 */
      }
      article div[data-rehype-pretty-code-fragment] pre {
        word-break: break-all;
        white-space: pre-wrap;
      }
      article div[data-rehype-pretty-code-fragment] pre code {
        display: flex;
        flex-direction: column;
        background-color: transparent;
      }
      article div[data-rehype-pretty-code-fragment] pre code .line {
        display: block;
      }
      article div[data-rehype-pretty-code-title] {
        margin-bottom: 1em;
        color: rgba(156, 163, 175); /* text-gray */
      }
      article table {
        margin-top: 0.5rem; /* my-2 */
        margin-bottom: 0.5rem; /* my-2 */
      }
      article table th {
        padding: 0.5rem; /* p-2 */
        background-color: rgba(241, 245, 249, 0.5); /* bg-slate-1 */
        border-width: 1px;
      }
      article table td {
        padding: 0.5rem; /* p-2 */
        border-width: 1px;
        font-weight: normal;
      }
      article h1,
      article h2,
      article h3,
      article h4,
      article h5,
      article h6 {
        scroll-margin-top: 4.25rem;
      }

      .waiting {
        transform-origin: center;
        animation-name: waiting-outer;
        animation-duration: 7s;
        animation-iteration-count: infinite;
        animation-timing-function: linear;
      }
      .waiting circle {
        transform-origin: center;
        animation-name: waiting-inner;
        animation-duration: 5s;
        animation-iteration-count: infinite;
        animation-timing-function: linear;
      }
      @keyframes waiting-outer {
        from {
          transform: rotate(0);
        }
        to {
          transform: rotate(1turn);
        }
      }
      /* 12 * 2pi = 75.3982... */
      @keyframes waiting-inner {
        0% {
          transform: rotate(0);
          stroke-dasharray: 0 0 0 0 999;
        }
        25% {
          transform: rotate(0.5turn);
          stroke-dasharray: 0 0 0 75.4 999;
        }
        50% {
          transform: rotate(1turn);
          stroke-dasharray: 0 0 75.4 75.4 999;
        }
        75% {
          transform: rotate(1.5turn);
          stroke-dasharray: 0 75.4 75.4 75.4 999;
        }
        100% {
          transform: rotate(2turn);
          stroke-dasharray: 75.4 75.4 75.4 75.4 999;
        }
      }
    </style>
    <div class="flex h-full flex-col">
      <div class="h-14">
        <header
          class="h-inherit fixed z-10 flex w-full items-center justify-between border-b bg-white pl-6"
        >
          <div class="flex h-full items-center gap-20">
            <a href="/platform/guide">
              <div class="flex items-center gap-2">
                <Logo class="w-22" />
                <span>파트너정산</span>
              </div>
            </a>
            <div class="hidden h-full items-center gap-4 md:flex">
              <a
                href="/platform/guide"
                class={`h-full flex items-center ${
                  slug === "guide"
                    ? "font-bold border-t-2 border-t-transparent border-b-2 border-b-orange-6"
                    : ""
                }`}
              >
                서비스 가이드
              </a>
              <a
                href="/platform/api"
                class={`h-full flex items-center ${
                  slug === "api"
                    ? "font-bold border-t-2 border-t-transparent border-b-2 border-b-orange-6"
                    : ""
                }`}
              >
                API 문서
              </a>
              <a
                href="/platform/examples"
                class={`h-full flex items-center ${
                  slug === "examples"
                    ? "font-bold border-t-2 border-t-transparent border-b-2 border-b-orange-6"
                    : ""
                }`}
              >
                사용예제
              </a>
            </div>
          </div>
          <div
            class="color-white bg-orange-6 hidden h-full items-center gap-4 px-6 font-bold md:flex"
          >
            <a href="http://platform.contact.portone.io/">사전 신청하기</a>
          </div>
          <MobileMenuButton client:visible />
        </header>
      </div>

      <main class="min-h-0 flex-1">
        <div class="flex">
          <div class="flex flex-1 justify-center">
            <article
              class="basis-200 shrink-1 m-4 flex flex-col text-slate-700"
            >
              <prose.h1 id="overview">
                {title}
              </prose.h1>
              {
                description && (
                  <p class="text-gray my-4 text-xl">{description}</p>
                )
              }
              <Content components={prose} />
            </article>
            <div class="shrink-10 hidden basis-10 lg:block"></div>
            <RightSidebar
              lang="ko"
              slug={slug}
              toc={toc}
              editThisPagePrefix="https://github.com/portone-io/developers.portone.io/blob/main/src/content/docs/ko/platform/"
              client:idle
            />
          </div>
        </div>
      </main>
    </div>
  </body>
</html>
