---
import * as path from "node:path";
import { getCollection } from "astro:content";

import type { Lang } from "../../../type";
import { frontmattersSignal } from "../../../state/server-only/frontmatters";
import redirYaml from "~/content/docs/_redir.yaml";
import Redir from "~/layouts/Redir.astro";
import Docs from "~/layouts/Docs.astro";

export async function getStaticPaths() {
  const docEntries = await getCollection("docs");
  const docs = docEntries.map((entry) => {
    const [lang, ...fragments] = entry.slug.split("/");
    const absSlug = path.posix.join("/", entry.slug);
    const slug = fragments.join("/");
    frontmattersSignal.value = {
      ...frontmattersSignal.value,
      [absSlug]: entry.data,
    };
    return { params: { lang, slug }, props: { entry, slug: absSlug } };
  });
  const redirs = redirYaml.map((redir) => {
    const [lang, ...fragments] = redir.old.slice(1).split("/");
    const slug = fragments.join("/");
    return { params: { lang, slug }, props: { redirTarget: redir.new } };
  });
  return [...docs, ...redirs];
}

const lang = Astro.params.lang as Lang;
const { redirTarget, entry, slug } = Astro.props;
---

{
  redirTarget ? (
    redirTarget.startsWith("https:") ? (
      <Redir target={redirTarget} />
    ) : (
      <Redir target={`/docs${redirTarget}`} />
    )
  ) : (
    <Docs lang={lang} slug={slug} entry={entry} />
  )
}
